{
  "version": 3,
  "sources": ["../../../../../../node_modules/base64-js/index.js", "../../../../../../node_modules/ieee754/index.js", "../../../../../../node_modules/@solana/web3.js/node_modules/buffer/index.js", "browser-external:buffer", "../../../../../../node_modules/bn.js/lib/bn.js", "../../../../../../node_modules/buffer/index.js", "../../../../../../node_modules/safe-buffer/index.js", "../../../../../../node_modules/base-x/src/index.js", "../../../../../../node_modules/bs58/index.js", "../../../../../../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs", "../../../../../../node_modules/borsh/lib/index.js", "../../../../../../node_modules/@solana/buffer-layout/node_modules/buffer/index.js", "../../../../../../node_modules/@solana/buffer-layout/lib/Layout.js", "../../../../../../node_modules/bigint-buffer/dist/browser.js", "../../../../../../node_modules/uuid/dist/esm-browser/rng.js", "../../../../../../node_modules/uuid/dist/esm-browser/regex.js", "../../../../../../node_modules/uuid/dist/esm-browser/validate.js", "../../../../../../node_modules/uuid/dist/esm-browser/stringify.js", "../../../../../../node_modules/uuid/dist/esm-browser/v1.js", "../../../../../../node_modules/uuid/dist/esm-browser/parse.js", "../../../../../../node_modules/uuid/dist/esm-browser/v35.js", "../../../../../../node_modules/uuid/dist/esm-browser/md5.js", "../../../../../../node_modules/uuid/dist/esm-browser/v3.js", "../../../../../../node_modules/uuid/dist/esm-browser/v4.js", "../../../../../../node_modules/uuid/dist/esm-browser/sha1.js", "../../../../../../node_modules/uuid/dist/esm-browser/v5.js", "../../../../../../node_modules/uuid/dist/esm-browser/nil.js", "../../../../../../node_modules/uuid/dist/esm-browser/version.js", "../../../../../../node_modules/uuid/dist/esm-browser/index.js", "../../../../../../node_modules/jayson/lib/generateRequest.js", "../../../../../../node_modules/jayson/lib/client/browser/index.js", "../../../../../../node_modules/rpc-websockets/node_modules/buffer/index.js", "../../../../../../node_modules/rpc-websockets/node_modules/eventemitter3/index.js", "../../../../../../node_modules/@solana/web3.js/lib/index.browser.esm.js", "../../../../../../node_modules/@noble/curves/esm/abstract/edwards.js", "../../../../../../node_modules/@noble/curves/esm/abstract/montgomery.js", "../../../../../../node_modules/@noble/curves/esm/ed25519.js", "../../../../../../node_modules/superstruct/dist/index.mjs", "../../../../../../node_modules/rpc-websockets/dist/index.browser.mjs", "../../../../../../node_modules/rpc-websockets/node_modules/eventemitter3/index.mjs"],
  "sourcesContent": ["'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\nfunction getLens(b64) {\n  var len = b64.length;\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0;\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n  return arr;\n}\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('');\n}\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n  return parts.join('');\n}", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n  buffer[offset + i - d] |= s * 128;\n};", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict';\n\nconst base64 = require('base64-js');\nconst ieee754 = require('ieee754');\nconst customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' // eslint-disable-line dot-notation\n? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n: null;\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\nconst K_MAX_LENGTH = 0x7fffffff;\nexports.kMaxLength = K_MAX_LENGTH;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n  console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n}\nfunction typedArraySupport() {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1);\n    const proto = {\n      foo: function () {\n        return 42;\n      }\n    };\n    Object.setPrototypeOf(proto, Uint8Array.prototype);\n    Object.setPrototypeOf(arr, proto);\n    return arr.foo() === 42;\n  } catch (e) {\n    return false;\n  }\n}\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.buffer;\n  }\n});\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.byteOffset;\n  }\n});\nfunction createBuffer(length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length);\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError('The \"string\" argument must be of type string. Received type number');\n    }\n    return allocUnsafe(arg);\n  }\n  return from(arg, encodingOrOffset, length);\n}\nBuffer.poolSize = 8192; // not used by this implementation\n\nfunction from(value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset);\n  }\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value);\n  }\n  if (value == null) {\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n  }\n  if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n  if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n  if (typeof value === 'number') {\n    throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n  }\n  const valueOf = value.valueOf && value.valueOf();\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length);\n  }\n  const b = fromObject(value);\n  if (b) return b;\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n  }\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length);\n};\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf(Buffer, Uint8Array);\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number');\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n  }\n}\nfunction alloc(size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(size);\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n  }\n  return createBuffer(size);\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding);\n};\nfunction allocUnsafe(size) {\n  assertSize(size);\n  return createBuffer(size < 0 ? 0 : checked(size) | 0);\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size);\n};\nfunction fromString(string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding);\n  }\n  const length = byteLength(string, encoding) | 0;\n  let buf = createBuffer(length);\n  const actual = buf.write(string, encoding);\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n  }\n  return buf;\n}\nfunction fromArrayLike(array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0;\n  const buf = createBuffer(length);\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255;\n  }\n  return buf;\n}\nfunction fromArrayView(arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView);\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n  }\n  return fromArrayLike(arrayView);\n}\nfunction fromArrayBuffer(array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds');\n  }\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds');\n  }\n  let buf;\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array);\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset);\n  } else {\n    buf = new Uint8Array(array, byteOffset, length);\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\nfunction fromObject(obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0;\n    const buf = createBuffer(len);\n    if (buf.length === 0) {\n      return buf;\n    }\n    obj.copy(buf, 0, 0, len);\n    return buf;\n  }\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0);\n    }\n    return fromArrayLike(obj);\n  }\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\nfunction checked(length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n  }\n  return length | 0;\n}\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length);\n}\nBuffer.isBuffer = function isBuffer(b) {\n  return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n};\nBuffer.compare = function compare(a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n  }\n  if (a === b) return 0;\n  let x = a.length;\n  let y = b.length;\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n    default:\n      return false;\n  }\n};\nBuffer.concat = function concat(list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n  let i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n  const buffer = Buffer.allocUnsafe(length);\n  let pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i];\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n        buf.copy(buffer, pos);\n      } else {\n        Uint8Array.prototype.set.call(buffer, buf, pos);\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    } else {\n      buf.copy(buffer, pos);\n    }\n    pos += buf.length;\n  }\n  return buffer;\n};\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength;\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);\n  }\n  const len = string.length;\n  const mustMatch = arguments.length > 2 && arguments[2] === true;\n  if (!mustMatch && len === 0) return 0;\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length;\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n      case 'hex':\n        return len >>> 1;\n      case 'base64':\n        return base64ToBytes(string).length;\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\nfunction slowToString(encoding, start, end) {\n  let loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return '';\n  }\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n  if (end <= 0) {\n    return '';\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n  if (end <= start) {\n    return '';\n  }\n  if (!encoding) encoding = 'utf8';\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n      case 'ascii':\n        return asciiSlice(this, start, end);\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n      case 'base64':\n        return base64Slice(this, start, end);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true;\nfunction swap(b, n, m) {\n  const i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\nBuffer.prototype.swap16 = function swap16() {\n  const len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this;\n};\nBuffer.prototype.swap32 = function swap32() {\n  const len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this;\n};\nBuffer.prototype.swap64 = function swap64() {\n  const len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this;\n};\nBuffer.prototype.toString = function toString() {\n  const length = this.length;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\nBuffer.prototype.inspect = function inspect() {\n  let str = '';\n  const max = exports.INSPECT_MAX_BYTES;\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n  if (this.length > max) str += ' ... ';\n  return '<Buffer ' + str + '>';\n};\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n}\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength);\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);\n  }\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n  if (start >= end) {\n    return 1;\n  }\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  let x = thisEnd - thisStart;\n  let y = end - start;\n  const len = Math.min(x, y);\n  const thisCopy = this.slice(thisStart, thisEnd);\n  const targetCopy = target.slice(start, end);\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1;\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset; // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n  throw new TypeError('val must be string, number or Buffer');\n}\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1;\n  let arrLength = arr.length;\n  let valLength = val.length;\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n  let i;\n  if (dir) {\n    let foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true;\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n      if (found) return i;\n    }\n  }\n  return -1;\n}\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  const remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n  const strLen = string.length;\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  let i;\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (numberIsNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n  return i;\n}\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0;\n    if (isFinite(length)) {\n      length = length >>> 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n  const remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n  if (!encoding) encoding = 'utf8';\n  let loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length);\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  const res = [];\n  let i = start;\n  while (i < end) {\n    const firstByte = buf[i];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break;\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}\nfunction asciiSlice(buf, start, end) {\n  let ret = '';\n  end = Math.min(buf.length, end);\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret;\n}\nfunction latin1Slice(buf, start, end) {\n  let ret = '';\n  end = Math.min(buf.length, end);\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret;\n}\nfunction hexSlice(buf, start, end) {\n  const len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  let out = '';\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]];\n  }\n  return out;\n}\nfunction utf16leSlice(buf, start, end) {\n  const bytes = buf.slice(start, end);\n  let res = '';\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res;\n}\nBuffer.prototype.slice = function slice(start, end) {\n  const len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n  if (end < start) end = start;\n  const newBuf = this.subarray(start, end);\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype);\n  return newBuf;\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\nBuffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  let val = this[offset];\n  let mul = 1;\n  let i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n  let val = this[offset + --byteLength];\n  let mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\nBuffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\nBuffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\nBuffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\nBuffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;\n  const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;\n  return BigInt(lo) + (BigInt(hi) << BigInt(32));\n});\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n  const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n});\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  let val = this[offset];\n  let mul = 1;\n  let i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  let i = byteLength;\n  let mul = 1;\n  let val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  const val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  const val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24); // Overflow\n\n  return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);\n});\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  const val = (first << 24) +\n  // Overflow\n  this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n  return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);\n});\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\nBuffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  let mul = 1;\n  let i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  let i = byteLength - 1;\n  let mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nBuffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\nBuffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\nBuffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset + 3] = value >>> 24;\n  this[offset + 2] = value >>> 16;\n  this[offset + 1] = value >>> 8;\n  this[offset] = value & 0xff;\n  return offset + 4;\n};\nBuffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\nfunction wrtBigUInt64LE(buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n  let lo = Number(value & BigInt(0xffffffff));\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset;\n}\nfunction wrtBigUInt64BE(buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n  let lo = Number(value & BigInt(0xffffffff));\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8;\n}\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n});\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n});\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    const limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  let i = 0;\n  let mul = 1;\n  let sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    const limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  let i = byteLength - 1;\n  let mul = 1;\n  let sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  this[offset + 2] = value >>> 16;\n  this[offset + 3] = value >>> 24;\n  return offset + 4;\n};\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n});\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n});\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0;\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n  const len = end - start;\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n  }\n  return len;\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0);\n      if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code;\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } else if (typeof val === 'boolean') {\n    val = Number(val);\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n  if (end <= start) {\n    return this;\n  }\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  let i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n    const len = bytes.length;\n    if (len === 0) {\n      throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n  return this;\n};\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {};\nfunction E(sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor() {\n      super();\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      });\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`;\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack; // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name;\n    }\n    get code() {\n      return sym;\n    }\n    set code(value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      });\n    }\n    toString() {\n      return `${this.name} [${sym}]: ${this.message}`;\n    }\n  };\n}\nE('ERR_BUFFER_OUT_OF_BOUNDS', function (name) {\n  if (name) {\n    return `${name} is outside of buffer bounds`;\n  }\n  return 'Attempt to access memory outside buffer bounds';\n}, RangeError);\nE('ERR_INVALID_ARG_TYPE', function (name, actual) {\n  return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n}, TypeError);\nE('ERR_OUT_OF_RANGE', function (str, range, input) {\n  let msg = `The value of \"${str}\" is out of range.`;\n  let received = input;\n  if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n    received = addNumericalSeparator(String(input));\n  } else if (typeof input === 'bigint') {\n    received = String(input);\n    if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n      received = addNumericalSeparator(received);\n    }\n    received += 'n';\n  }\n  msg += ` It must be ${range}. Received ${received}`;\n  return msg;\n}, RangeError);\nfunction addNumericalSeparator(val) {\n  let res = '';\n  let i = val.length;\n  const start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`;\n  }\n  return `${val.slice(0, i)}${res}`;\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds(buf, offset, byteLength) {\n  validateNumber(offset, 'offset');\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1));\n  }\n}\nfunction checkIntBI(value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : '';\n    let range;\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` + `${(byteLength + 1) * 8 - 1}${n}`;\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`;\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value);\n  }\n  checkBounds(buf, offset, byteLength);\n}\nfunction validateNumber(value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value);\n  }\n}\nfunction boundsError(value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type);\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value);\n  }\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n  }\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset', `>= ${type ? 1 : 0} and <= ${length}`, value);\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\nfunction base64clean(str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0];\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return '';\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str;\n}\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction asciiToBytes(str) {\n  const byteArray = [];\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray;\n}\nfunction utf16leToBytes(str, units) {\n  let c, hi, lo;\n  const byteArray = [];\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n  return byteArray;\n}\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\nfunction blitBuffer(src, dst, offset, length) {\n  let i;\n  for (i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n  return i;\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance(obj, type) {\n  return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\nfunction numberIsNaN(obj) {\n  // For IE11 support\n  return obj !== obj; // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = function () {\n  const alphabet = '0123456789abcdef';\n  const table = new Array(256);\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16;\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n  }\n  return table;\n}();\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod(fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn;\n}\nfunction BufferBigIntNotDefined() {\n  throw new Error('BigInt not supported');\n}", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"buffer\" has been externalized for browser compatibility. Cannot access \"buffer.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {}\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n    return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n  function parseHex4Bits(string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n      // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n      // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n  function parseHexByte(string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n  BN.prototype._parseHex = function _parseHex(number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n    this._strip();\n  };\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n        // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n        // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n    this._strip();\n  };\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n  function move(dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n  BN.prototype._move = function _move(dest) {\n    move(dest, this);\n  };\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n  function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n    assert(false, 'Base should be between 2 and 36');\n  };\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return this.negative !== 0 ? -ret : ret;\n  };\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16, 2);\n  };\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer(endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n  var allocate = function allocate(ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    this._strip();\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {\n    var position = 0;\n    var carry = 0;\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = this.words[i] << shift | carry;\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = word >> 8 & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = word >> 16 & 0xff;\n      }\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = word >> 24 & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n    if (position < res.length) {\n      res[position++] = carry;\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = this.words[i] << shift | carry;\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = word >> 8 & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = word >> 16 & 0xff;\n      }\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = word >> 24 & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n    if (position >= 0) {\n      res[position--] = carry;\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = num.words[off] >>> wbit & 0x01;\n    }\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n    return this._strip();\n  };\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n    this.length = b.length;\n    return this._strip();\n  };\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n    this.length = a.length;\n    return this._strip();\n  };\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n    this._expand(off + 1);\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd(num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n      // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n      // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add(num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n      // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n    this.length = Math.max(this.length, i);\n    if (a !== this) {\n      this.negative = 1;\n    }\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n    return out._strip();\n  }\n  function jumboMulTo(self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n    return 1 << i + 1 + odd;\n  };\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n    return ws;\n  };\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n    return ph;\n  };\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n    var _ = this.stub(N);\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n  BN.prototype.imuln = function imuln(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return isNegNum ? this.ineg() : this;\n  };\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n    if (r !== 0) {\n      var carry = 0;\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n      this.length += s;\n    }\n    return this._strip();\n  };\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n    return this._strip();\n  };\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n    if (this.length <= s) {\n      return this;\n    }\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n    this.words[0] -= num;\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n    return this._strip();\n  };\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n    this._expand(len);\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n    return this._strip();\n  };\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n  BN.prototype.modrn = function modrn(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn(num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n    var yp = y.clone();\n    var xp = x.clone();\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n          x1.iushrn(1);\n        }\n      }\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n          x2.iushrn(1);\n        }\n      }\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n    return res;\n  };\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n      a.isub(b);\n    } while (true);\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n    this._strip();\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n    return r;\n  };\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n    return this.m.sub(a)._forceRed(this);\n  };\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n    return r;\n  };\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n    return res;\n  };\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict';\n\nvar base64 = require('base64-js');\nvar ieee754 = require('ieee754');\nvar customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' // eslint-disable-line dot-notation\n? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n: null;\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\nvar K_MAX_LENGTH = 0x7fffffff;\nexports.kMaxLength = K_MAX_LENGTH;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n  console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n}\nfunction typedArraySupport() {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1);\n    var proto = {\n      foo: function () {\n        return 42;\n      }\n    };\n    Object.setPrototypeOf(proto, Uint8Array.prototype);\n    Object.setPrototypeOf(arr, proto);\n    return arr.foo() === 42;\n  } catch (e) {\n    return false;\n  }\n}\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.buffer;\n  }\n});\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.byteOffset;\n  }\n});\nfunction createBuffer(length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length);\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError('The \"string\" argument must be of type string. Received type number');\n    }\n    return allocUnsafe(arg);\n  }\n  return from(arg, encodingOrOffset, length);\n}\nBuffer.poolSize = 8192; // not used by this implementation\n\nfunction from(value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset);\n  }\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value);\n  }\n  if (value == null) {\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n  }\n  if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n  if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n  if (typeof value === 'number') {\n    throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n  }\n  var valueOf = value.valueOf && value.valueOf();\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length);\n  }\n  var b = fromObject(value);\n  if (b) return b;\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n  }\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length);\n};\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf(Buffer, Uint8Array);\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number');\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n  }\n}\nfunction alloc(size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(size);\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n  }\n  return createBuffer(size);\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding);\n};\nfunction allocUnsafe(size) {\n  assertSize(size);\n  return createBuffer(size < 0 ? 0 : checked(size) | 0);\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size);\n};\nfunction fromString(string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding);\n  }\n  var length = byteLength(string, encoding) | 0;\n  var buf = createBuffer(length);\n  var actual = buf.write(string, encoding);\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n  }\n  return buf;\n}\nfunction fromArrayLike(array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  var buf = createBuffer(length);\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255;\n  }\n  return buf;\n}\nfunction fromArrayView(arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView);\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n  }\n  return fromArrayLike(arrayView);\n}\nfunction fromArrayBuffer(array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds');\n  }\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds');\n  }\n  var buf;\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array);\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset);\n  } else {\n    buf = new Uint8Array(array, byteOffset, length);\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\nfunction fromObject(obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    var buf = createBuffer(len);\n    if (buf.length === 0) {\n      return buf;\n    }\n    obj.copy(buf, 0, 0, len);\n    return buf;\n  }\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0);\n    }\n    return fromArrayLike(obj);\n  }\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\nfunction checked(length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n  }\n  return length | 0;\n}\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length);\n}\nBuffer.isBuffer = function isBuffer(b) {\n  return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n};\nBuffer.compare = function compare(a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n  }\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n    default:\n      return false;\n  }\n};\nBuffer.concat = function concat(list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos);\n      } else {\n        Uint8Array.prototype.set.call(buffer, buf, pos);\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    } else {\n      buf.copy(buffer, pos);\n    }\n    pos += buf.length;\n  }\n  return buffer;\n};\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength;\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);\n  }\n  var len = string.length;\n  var mustMatch = arguments.length > 2 && arguments[2] === true;\n  if (!mustMatch && len === 0) return 0;\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length;\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n      case 'hex':\n        return len >>> 1;\n      case 'base64':\n        return base64ToBytes(string).length;\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return '';\n  }\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n  if (end <= 0) {\n    return '';\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n  if (end <= start) {\n    return '';\n  }\n  if (!encoding) encoding = 'utf8';\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n      case 'ascii':\n        return asciiSlice(this, start, end);\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n      case 'base64':\n        return base64Slice(this, start, end);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true;\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this;\n};\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this;\n};\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this;\n};\nBuffer.prototype.toString = function toString() {\n  var length = this.length;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n  if (this.length > max) str += ' ... ';\n  return '<Buffer ' + str + '>';\n};\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n}\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength);\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);\n  }\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n  if (start >= end) {\n    return 1;\n  }\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1;\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset; // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n  throw new TypeError('val must be string, number or Buffer');\n}\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n      if (found) return i;\n    }\n  }\n  return -1;\n}\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n  var strLen = string.length;\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (numberIsNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n  return i;\n}\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0;\n    if (isFinite(length)) {\n      length = length >>> 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length);\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break;\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret;\n}\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret;\n}\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]];\n  }\n  return out;\n}\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res;\n}\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n  if (end < start) end = start;\n  var newBuf = this.subarray(start, end);\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype);\n  return newBuf;\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\nBuffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\nBuffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\nBuffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\nBuffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\nBuffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\nBuffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nBuffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\nBuffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\nBuffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset + 3] = value >>> 24;\n  this[offset + 2] = value >>> 16;\n  this[offset + 1] = value >>> 8;\n  this[offset] = value & 0xff;\n  return offset + 4;\n};\nBuffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  this[offset + 2] = value >>> 16;\n  this[offset + 3] = value >>> 24;\n  return offset + 4;\n};\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0;\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n  var len = end - start;\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n  }\n  return len;\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code;\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } else if (typeof val === 'boolean') {\n    val = Number(val);\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n  if (end <= start) {\n    return this;\n  }\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n    var len = bytes.length;\n    if (len === 0) {\n      throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n  return this;\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\nfunction base64clean(str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0];\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return '';\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str;\n}\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction asciiToBytes(str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray;\n}\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n  return byteArray;\n}\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n  return i;\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance(obj, type) {\n  return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\nfunction numberIsNaN(obj) {\n  // For IE11 support\n  return obj !== obj; // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = function () {\n  var alphabet = '0123456789abcdef';\n  var table = new Array(256);\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16;\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n  }\n  return table;\n}();", "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer');\nvar Buffer = buffer.Buffer;\n\n// alternative to using Object.keys for old browsers\nfunction copyProps(src, dst) {\n  for (var key in src) {\n    dst[key] = src[key];\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer;\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports);\n  exports.Buffer = SafeBuffer;\n}\nfunction SafeBuffer(arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length);\n}\nSafeBuffer.prototype = Object.create(Buffer.prototype);\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer);\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number');\n  }\n  return Buffer(arg, encodingOrOffset, length);\n};\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n  var buf = Buffer(size);\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n  } else {\n    buf.fill(0);\n  }\n  return buf;\n};\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n  return Buffer(size);\n};\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n  return buffer.SlowBuffer(size);\n};", "'use strict';\n\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer;\nfunction base(ALPHABET) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode(source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) {\n      source = _Buffer.from(source);\n    }\n    if (!_Buffer.isBuffer(source)) {\n      throw new TypeError('Expected Buffer');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    // Allocate enough space in big-endian base58 representation.\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return _Buffer.alloc(0);\n    }\n    var psz = 0;\n    // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    // Allocate enough space in big-endian base256 representation.\n    var size = (source.length - psz) * FACTOR + 1 >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n    // Process the characters.\n    while (psz < source.length) {\n      // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      // Invalid character\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4));\n    vch.fill(0x00, 0, zeroes);\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error('Non-base' + BASE + ' character');\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nmodule.exports = base;", "var basex = require('base-x');\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nmodule.exports = basex(ALPHABET);", "'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800, (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */\nvar end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function () {\n    return !this.tokens.length;\n  },\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n  read: function () {\n    if (!this.tokens.length) return end_of_stream;\n    return this.tokens.shift();\n  },\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function (token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/token;\n      while (tokens.length) this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function (token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/token;\n      while (tokens.length) this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal) throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function (stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function (stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */\nvar DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n  Object.defineProperty(this, 'encoding', {\n    value: 'utf-8'\n  });\n  Object.defineProperty(this, 'fatal', {\n    value: this._fatal\n  });\n  Object.defineProperty(this, 'ignoreBOM', {\n    value: this._ignoreBOM\n  });\n}\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input && input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer, input.byteOffset, input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n    options = ToDictionary(options);\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({\n        fatal: this._fatal\n      });\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n    var input_stream = new Stream(bytes);\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished) break;\n      if (result === null) continue;\n      if (Array.isArray(result)) code_points.push.apply(code_points, /**@type {!Array.<number>}*/result);else code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished) break;\n        if (result === null) continue;\n        if (Array.isArray(result)) code_points.push.apply(code_points, /**@type {!Array.<number>}*/result);else code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 && !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder)) return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {\n    fatal: Boolean(options['fatal'])\n  };\n  Object.defineProperty(this, 'encoding', {\n    value: 'utf-8'\n  });\n}\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming) this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished) break;\n      if (Array.isArray(result)) bytes.push.apply(bytes, /**@type {!Array.<number>}*/result);else bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished) break;\n        if (Array.isArray(result)) bytes.push.apply(bytes, /**@type {!Array.<number>}*/result);else bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */utf8_code_point = 0,\n    /** @type {number} */utf8_bytes_seen = 0,\n    /** @type {number} */utf8_bytes_needed = 0,\n    /** @type {number} */utf8_lower_boundary = 0x80,\n    /** @type {number} */utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function (stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream) return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0) utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED) utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0) utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4) utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << 6 * utf8_bytes_needed;\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += bite - 0x80 << 6 * (utf8_bytes_needed - utf8_bytes_seen);\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed) return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function (stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream) return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f)) return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> 6 * count) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> 6 * (count - 1);\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | temp & 0x3F);\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\nexport { TextEncoder, TextDecoder };", "\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", {\n  fatal: true\n});\nfunction baseEncode(value) {\n  if (typeof value === \"string\") {\n    value = Buffer.from(value, \"utf8\");\n  }\n  return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n  return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n  constructor(message) {\n    super(message);\n    this.fieldPath = [];\n    this.originalMessage = message;\n  }\n  addToFieldPath(fieldName) {\n    this.fieldPath.splice(0, 0, fieldName);\n    // NOTE: Modifying message directly as jest doesn't use .toString()\n    this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n  }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n  constructor() {\n    this.buf = Buffer.alloc(INITIAL_LENGTH);\n    this.length = 0;\n  }\n  maybeResize() {\n    if (this.buf.length < 16 + this.length) {\n      this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n    }\n  }\n  writeU8(value) {\n    this.maybeResize();\n    this.buf.writeUInt8(value, this.length);\n    this.length += 1;\n  }\n  writeU16(value) {\n    this.maybeResize();\n    this.buf.writeUInt16LE(value, this.length);\n    this.length += 2;\n  }\n  writeU32(value) {\n    this.maybeResize();\n    this.buf.writeUInt32LE(value, this.length);\n    this.length += 4;\n  }\n  writeU64(value) {\n    this.maybeResize();\n    this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n  }\n  writeU128(value) {\n    this.maybeResize();\n    this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n  }\n  writeU256(value) {\n    this.maybeResize();\n    this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n  }\n  writeU512(value) {\n    this.maybeResize();\n    this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n  }\n  writeBuffer(buffer) {\n    // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n    this.buf = Buffer.concat([Buffer.from(this.buf.subarray(0, this.length)), buffer, Buffer.alloc(INITIAL_LENGTH)]);\n    this.length += buffer.length;\n  }\n  writeString(str) {\n    this.maybeResize();\n    const b = Buffer.from(str, \"utf8\");\n    this.writeU32(b.length);\n    this.writeBuffer(b);\n  }\n  writeFixedArray(array) {\n    this.writeBuffer(Buffer.from(array));\n  }\n  writeArray(array, fn) {\n    this.maybeResize();\n    this.writeU32(array.length);\n    for (const elem of array) {\n      this.maybeResize();\n      fn(elem);\n    }\n  }\n  toArray() {\n    return this.buf.subarray(0, this.length);\n  }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n  const originalMethod = propertyDescriptor.value;\n  propertyDescriptor.value = function (...args) {\n    try {\n      return originalMethod.apply(this, args);\n    } catch (e) {\n      if (e instanceof RangeError) {\n        const code = e.code;\n        if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n          throw new BorshError(\"Reached the end of buffer when deserializing\");\n        }\n      }\n      throw e;\n    }\n  };\n}\nclass BinaryReader {\n  constructor(buf) {\n    this.buf = buf;\n    this.offset = 0;\n  }\n  readU8() {\n    const value = this.buf.readUInt8(this.offset);\n    this.offset += 1;\n    return value;\n  }\n  readU16() {\n    const value = this.buf.readUInt16LE(this.offset);\n    this.offset += 2;\n    return value;\n  }\n  readU32() {\n    const value = this.buf.readUInt32LE(this.offset);\n    this.offset += 4;\n    return value;\n  }\n  readU64() {\n    const buf = this.readBuffer(8);\n    return new bn_js_1.default(buf, \"le\");\n  }\n  readU128() {\n    const buf = this.readBuffer(16);\n    return new bn_js_1.default(buf, \"le\");\n  }\n  readU256() {\n    const buf = this.readBuffer(32);\n    return new bn_js_1.default(buf, \"le\");\n  }\n  readU512() {\n    const buf = this.readBuffer(64);\n    return new bn_js_1.default(buf, \"le\");\n  }\n  readBuffer(len) {\n    if (this.offset + len > this.buf.length) {\n      throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n    }\n    const result = this.buf.slice(this.offset, this.offset + len);\n    this.offset += len;\n    return result;\n  }\n  readString() {\n    const len = this.readU32();\n    const buf = this.readBuffer(len);\n    try {\n      // NOTE: Using TextDecoder to fail on invalid UTF-8\n      return textDecoder.decode(buf);\n    } catch (e) {\n      throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n    }\n  }\n  readFixedArray(len) {\n    return new Uint8Array(this.readBuffer(len));\n  }\n  readArray(fn) {\n    const len = this.readU32();\n    const result = Array();\n    for (let i = 0; i < len; ++i) {\n      result.push(fn());\n    }\n    return result;\n  }\n}\n__decorate([handlingRangeError], BinaryReader.prototype, \"readU8\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readU16\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readU32\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readU64\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readU128\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readU256\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readU512\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readString\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n  try {\n    // TODO: Handle missing values properly (make sure they never result in just skipped write)\n    if (typeof fieldType === \"string\") {\n      writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n    } else if (fieldType instanceof Array) {\n      if (typeof fieldType[0] === \"number\") {\n        if (value.length !== fieldType[0]) {\n          throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n        }\n        writer.writeFixedArray(value);\n      } else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n        if (value.length !== fieldType[1]) {\n          throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n        }\n        for (let i = 0; i < fieldType[1]; i++) {\n          serializeField(schema, null, value[i], fieldType[0], writer);\n        }\n      } else {\n        writer.writeArray(value, item => {\n          serializeField(schema, fieldName, item, fieldType[0], writer);\n        });\n      }\n    } else if (fieldType.kind !== undefined) {\n      switch (fieldType.kind) {\n        case \"option\":\n          {\n            if (value === null || value === undefined) {\n              writer.writeU8(0);\n            } else {\n              writer.writeU8(1);\n              serializeField(schema, fieldName, value, fieldType.type, writer);\n            }\n            break;\n          }\n        case \"map\":\n          {\n            writer.writeU32(value.size);\n            value.forEach((val, key) => {\n              serializeField(schema, fieldName, key, fieldType.key, writer);\n              serializeField(schema, fieldName, val, fieldType.value, writer);\n            });\n            break;\n          }\n        default:\n          throw new BorshError(`FieldType ${fieldType} unrecognized`);\n      }\n    } else {\n      serializeStruct(schema, value, writer);\n    }\n  } catch (error) {\n    if (error instanceof BorshError) {\n      error.addToFieldPath(fieldName);\n    }\n    throw error;\n  }\n}\nfunction serializeStruct(schema, obj, writer) {\n  if (typeof obj.borshSerialize === \"function\") {\n    obj.borshSerialize(writer);\n    return;\n  }\n  const structSchema = schema.get(obj.constructor);\n  if (!structSchema) {\n    throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n  }\n  if (structSchema.kind === \"struct\") {\n    structSchema.fields.map(([fieldName, fieldType]) => {\n      serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n    });\n  } else if (structSchema.kind === \"enum\") {\n    const name = obj[structSchema.field];\n    for (let idx = 0; idx < structSchema.values.length; ++idx) {\n      const [fieldName, fieldType] = structSchema.values[idx];\n      if (fieldName === name) {\n        writer.writeU8(idx);\n        serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        break;\n      }\n    }\n  } else {\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n  }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n  const writer = new Writer();\n  serializeStruct(schema, obj, writer);\n  return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n  try {\n    if (typeof fieldType === \"string\") {\n      return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n    }\n    if (fieldType instanceof Array) {\n      if (typeof fieldType[0] === \"number\") {\n        return reader.readFixedArray(fieldType[0]);\n      } else if (typeof fieldType[1] === \"number\") {\n        const arr = [];\n        for (let i = 0; i < fieldType[1]; i++) {\n          arr.push(deserializeField(schema, null, fieldType[0], reader));\n        }\n        return arr;\n      } else {\n        return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n      }\n    }\n    if (fieldType.kind === \"option\") {\n      const option = reader.readU8();\n      if (option) {\n        return deserializeField(schema, fieldName, fieldType.type, reader);\n      }\n      return undefined;\n    }\n    if (fieldType.kind === \"map\") {\n      let map = new Map();\n      const length = reader.readU32();\n      for (let i = 0; i < length; i++) {\n        const key = deserializeField(schema, fieldName, fieldType.key, reader);\n        const val = deserializeField(schema, fieldName, fieldType.value, reader);\n        map.set(key, val);\n      }\n      return map;\n    }\n    return deserializeStruct(schema, fieldType, reader);\n  } catch (error) {\n    if (error instanceof BorshError) {\n      error.addToFieldPath(fieldName);\n    }\n    throw error;\n  }\n}\nfunction deserializeStruct(schema, classType, reader) {\n  if (typeof classType.borshDeserialize === \"function\") {\n    return classType.borshDeserialize(reader);\n  }\n  const structSchema = schema.get(classType);\n  if (!structSchema) {\n    throw new BorshError(`Class ${classType.name} is missing in schema`);\n  }\n  if (structSchema.kind === \"struct\") {\n    const result = {};\n    for (const [fieldName, fieldType] of schema.get(classType).fields) {\n      result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n    }\n    return new classType(result);\n  }\n  if (structSchema.kind === \"enum\") {\n    const idx = reader.readU8();\n    if (idx >= structSchema.values.length) {\n      throw new BorshError(`Enum index: ${idx} is out of range`);\n    }\n    const [fieldName, fieldType] = structSchema.values[idx];\n    const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n    return new classType({\n      [fieldName]: fieldValue\n    });\n  }\n  throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n  const reader = new Reader(buffer);\n  const result = deserializeStruct(schema, classType, reader);\n  if (reader.offset < buffer.length) {\n    throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n  }\n  return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n  const reader = new Reader(buffer);\n  return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict';\n\nconst base64 = require('base64-js');\nconst ieee754 = require('ieee754');\nconst customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' // eslint-disable-line dot-notation\n? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n: null;\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\nconst K_MAX_LENGTH = 0x7fffffff;\nexports.kMaxLength = K_MAX_LENGTH;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n  console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n}\nfunction typedArraySupport() {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1);\n    const proto = {\n      foo: function () {\n        return 42;\n      }\n    };\n    Object.setPrototypeOf(proto, Uint8Array.prototype);\n    Object.setPrototypeOf(arr, proto);\n    return arr.foo() === 42;\n  } catch (e) {\n    return false;\n  }\n}\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.buffer;\n  }\n});\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.byteOffset;\n  }\n});\nfunction createBuffer(length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length);\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError('The \"string\" argument must be of type string. Received type number');\n    }\n    return allocUnsafe(arg);\n  }\n  return from(arg, encodingOrOffset, length);\n}\nBuffer.poolSize = 8192; // not used by this implementation\n\nfunction from(value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset);\n  }\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value);\n  }\n  if (value == null) {\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n  }\n  if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n  if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n  if (typeof value === 'number') {\n    throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n  }\n  const valueOf = value.valueOf && value.valueOf();\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length);\n  }\n  const b = fromObject(value);\n  if (b) return b;\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n  }\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length);\n};\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf(Buffer, Uint8Array);\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number');\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n  }\n}\nfunction alloc(size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(size);\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n  }\n  return createBuffer(size);\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding);\n};\nfunction allocUnsafe(size) {\n  assertSize(size);\n  return createBuffer(size < 0 ? 0 : checked(size) | 0);\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size);\n};\nfunction fromString(string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding);\n  }\n  const length = byteLength(string, encoding) | 0;\n  let buf = createBuffer(length);\n  const actual = buf.write(string, encoding);\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n  }\n  return buf;\n}\nfunction fromArrayLike(array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0;\n  const buf = createBuffer(length);\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255;\n  }\n  return buf;\n}\nfunction fromArrayView(arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView);\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n  }\n  return fromArrayLike(arrayView);\n}\nfunction fromArrayBuffer(array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds');\n  }\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds');\n  }\n  let buf;\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array);\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset);\n  } else {\n    buf = new Uint8Array(array, byteOffset, length);\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\nfunction fromObject(obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0;\n    const buf = createBuffer(len);\n    if (buf.length === 0) {\n      return buf;\n    }\n    obj.copy(buf, 0, 0, len);\n    return buf;\n  }\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0);\n    }\n    return fromArrayLike(obj);\n  }\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\nfunction checked(length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n  }\n  return length | 0;\n}\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length);\n}\nBuffer.isBuffer = function isBuffer(b) {\n  return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n};\nBuffer.compare = function compare(a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n  }\n  if (a === b) return 0;\n  let x = a.length;\n  let y = b.length;\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n    default:\n      return false;\n  }\n};\nBuffer.concat = function concat(list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n  let i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n  const buffer = Buffer.allocUnsafe(length);\n  let pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i];\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n        buf.copy(buffer, pos);\n      } else {\n        Uint8Array.prototype.set.call(buffer, buf, pos);\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    } else {\n      buf.copy(buffer, pos);\n    }\n    pos += buf.length;\n  }\n  return buffer;\n};\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength;\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);\n  }\n  const len = string.length;\n  const mustMatch = arguments.length > 2 && arguments[2] === true;\n  if (!mustMatch && len === 0) return 0;\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length;\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n      case 'hex':\n        return len >>> 1;\n      case 'base64':\n        return base64ToBytes(string).length;\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\nfunction slowToString(encoding, start, end) {\n  let loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return '';\n  }\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n  if (end <= 0) {\n    return '';\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n  if (end <= start) {\n    return '';\n  }\n  if (!encoding) encoding = 'utf8';\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n      case 'ascii':\n        return asciiSlice(this, start, end);\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n      case 'base64':\n        return base64Slice(this, start, end);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true;\nfunction swap(b, n, m) {\n  const i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\nBuffer.prototype.swap16 = function swap16() {\n  const len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this;\n};\nBuffer.prototype.swap32 = function swap32() {\n  const len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this;\n};\nBuffer.prototype.swap64 = function swap64() {\n  const len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this;\n};\nBuffer.prototype.toString = function toString() {\n  const length = this.length;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\nBuffer.prototype.inspect = function inspect() {\n  let str = '';\n  const max = exports.INSPECT_MAX_BYTES;\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n  if (this.length > max) str += ' ... ';\n  return '<Buffer ' + str + '>';\n};\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n}\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength);\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);\n  }\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n  if (start >= end) {\n    return 1;\n  }\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  let x = thisEnd - thisStart;\n  let y = end - start;\n  const len = Math.min(x, y);\n  const thisCopy = this.slice(thisStart, thisEnd);\n  const targetCopy = target.slice(start, end);\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1;\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset; // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n  throw new TypeError('val must be string, number or Buffer');\n}\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1;\n  let arrLength = arr.length;\n  let valLength = val.length;\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n  let i;\n  if (dir) {\n    let foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true;\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n      if (found) return i;\n    }\n  }\n  return -1;\n}\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  const remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n  const strLen = string.length;\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  let i;\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (numberIsNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n  return i;\n}\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0;\n    if (isFinite(length)) {\n      length = length >>> 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n  const remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n  if (!encoding) encoding = 'utf8';\n  let loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length);\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  const res = [];\n  let i = start;\n  while (i < end) {\n    const firstByte = buf[i];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break;\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}\nfunction asciiSlice(buf, start, end) {\n  let ret = '';\n  end = Math.min(buf.length, end);\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret;\n}\nfunction latin1Slice(buf, start, end) {\n  let ret = '';\n  end = Math.min(buf.length, end);\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret;\n}\nfunction hexSlice(buf, start, end) {\n  const len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  let out = '';\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]];\n  }\n  return out;\n}\nfunction utf16leSlice(buf, start, end) {\n  const bytes = buf.slice(start, end);\n  let res = '';\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res;\n}\nBuffer.prototype.slice = function slice(start, end) {\n  const len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n  if (end < start) end = start;\n  const newBuf = this.subarray(start, end);\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype);\n  return newBuf;\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\nBuffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  let val = this[offset];\n  let mul = 1;\n  let i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n  let val = this[offset + --byteLength];\n  let mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\nBuffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\nBuffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\nBuffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\nBuffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;\n  const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;\n  return BigInt(lo) + (BigInt(hi) << BigInt(32));\n});\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n  const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n});\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  let val = this[offset];\n  let mul = 1;\n  let i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  let i = byteLength;\n  let mul = 1;\n  let val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  const val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  const val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24); // Overflow\n\n  return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);\n});\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  const val = (first << 24) +\n  // Overflow\n  this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n  return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);\n});\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\nBuffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  let mul = 1;\n  let i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  let i = byteLength - 1;\n  let mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nBuffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\nBuffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\nBuffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset + 3] = value >>> 24;\n  this[offset + 2] = value >>> 16;\n  this[offset + 1] = value >>> 8;\n  this[offset] = value & 0xff;\n  return offset + 4;\n};\nBuffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\nfunction wrtBigUInt64LE(buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n  let lo = Number(value & BigInt(0xffffffff));\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset;\n}\nfunction wrtBigUInt64BE(buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n  let lo = Number(value & BigInt(0xffffffff));\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8;\n}\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n});\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n});\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    const limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  let i = 0;\n  let mul = 1;\n  let sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    const limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  let i = byteLength - 1;\n  let mul = 1;\n  let sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  this[offset + 2] = value >>> 16;\n  this[offset + 3] = value >>> 24;\n  return offset + 4;\n};\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n});\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n});\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0;\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n  const len = end - start;\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n  }\n  return len;\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0);\n      if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code;\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } else if (typeof val === 'boolean') {\n    val = Number(val);\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n  if (end <= start) {\n    return this;\n  }\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  let i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n    const len = bytes.length;\n    if (len === 0) {\n      throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n  return this;\n};\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {};\nfunction E(sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor() {\n      super();\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      });\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`;\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack; // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name;\n    }\n    get code() {\n      return sym;\n    }\n    set code(value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      });\n    }\n    toString() {\n      return `${this.name} [${sym}]: ${this.message}`;\n    }\n  };\n}\nE('ERR_BUFFER_OUT_OF_BOUNDS', function (name) {\n  if (name) {\n    return `${name} is outside of buffer bounds`;\n  }\n  return 'Attempt to access memory outside buffer bounds';\n}, RangeError);\nE('ERR_INVALID_ARG_TYPE', function (name, actual) {\n  return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n}, TypeError);\nE('ERR_OUT_OF_RANGE', function (str, range, input) {\n  let msg = `The value of \"${str}\" is out of range.`;\n  let received = input;\n  if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n    received = addNumericalSeparator(String(input));\n  } else if (typeof input === 'bigint') {\n    received = String(input);\n    if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n      received = addNumericalSeparator(received);\n    }\n    received += 'n';\n  }\n  msg += ` It must be ${range}. Received ${received}`;\n  return msg;\n}, RangeError);\nfunction addNumericalSeparator(val) {\n  let res = '';\n  let i = val.length;\n  const start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`;\n  }\n  return `${val.slice(0, i)}${res}`;\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds(buf, offset, byteLength) {\n  validateNumber(offset, 'offset');\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1));\n  }\n}\nfunction checkIntBI(value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : '';\n    let range;\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` + `${(byteLength + 1) * 8 - 1}${n}`;\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`;\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value);\n  }\n  checkBounds(buf, offset, byteLength);\n}\nfunction validateNumber(value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value);\n  }\n}\nfunction boundsError(value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type);\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value);\n  }\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n  }\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset', `>= ${type ? 1 : 0} and <= ${length}`, value);\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\nfunction base64clean(str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0];\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return '';\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str;\n}\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction asciiToBytes(str) {\n  const byteArray = [];\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray;\n}\nfunction utf16leToBytes(str, units) {\n  let c, hi, lo;\n  const byteArray = [];\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n  return byteArray;\n}\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\nfunction blitBuffer(src, dst, offset, length) {\n  let i;\n  for (i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n  return i;\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance(obj, type) {\n  return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\nfunction numberIsNaN(obj) {\n  // For IE11 support\n  return obj !== obj; // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = function () {\n  const alphabet = '0123456789abcdef';\n  const table = new Array(256);\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16;\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n  }\n  return table;\n}();\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod(fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn;\n}\nfunction BufferBigIntNotDefined() {\n  throw new Error('BigInt not supported');\n}", "/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n  if (!(b instanceof Uint8Array)) {\n    throw new TypeError('b must be a Uint8Array');\n  }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n  checkUint8Array(b);\n  return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Uint8Array} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && layout instanceof Layout)) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = () => new Class();\n  Object.defineProperty(Class.prototype, 'encode', {\n    value(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true\n  });\n  Object.defineProperty(Class, 'decode', {\n    value(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan = 1, property) {\n    if (!Number.isInteger(elementSpan) || 0 >= elementSpan) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n  /** @override */\n  isCount() {\n    return true;\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    checkUint8Array(b);\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset = 0, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n    if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n    super(layout.span, property || layout.property);\n    /** The subordinated layout. */\n    this.layout = layout;\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Uint8Array\n     * being accessed.  */\n    this.offset = offset;\n  }\n  /** @override */\n  isCount() {\n    return this.layout instanceof UInt || this.layout instanceof UIntBE;\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    return this.layout.decode(b, offset + this.offset);\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - hi32 * V2E32;\n  return {\n    hi32,\n    lo32\n  };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    const buffer = uint8ArrayToBuffer(b);\n    const lo32 = buffer.readUInt32LE(offset);\n    const hi32 = buffer.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    const split = divmodInt64(src);\n    const buffer = uint8ArrayToBuffer(b);\n    buffer.writeUInt32LE(split.lo32, offset);\n    buffer.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    const buffer = uint8ArrayToBuffer(b);\n    const hi32 = buffer.readUInt32BE(offset);\n    const lo32 = buffer.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    const split = divmodInt64(src);\n    const buffer = uint8ArrayToBuffer(b);\n    buffer.writeUInt32BE(split.hi32, offset);\n    buffer.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    const buffer = uint8ArrayToBuffer(b);\n    const lo32 = buffer.readUInt32LE(offset);\n    const hi32 = buffer.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    const split = divmodInt64(src);\n    const buffer = uint8ArrayToBuffer(b);\n    buffer.writeUInt32LE(split.lo32, offset);\n    buffer.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    const buffer = uint8ArrayToBuffer(b);\n    const hi32 = buffer.readInt32BE(offset);\n    const lo32 = buffer.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    const split = divmodInt64(src);\n    const buffer = uint8ArrayToBuffer(b);\n    buffer.writeInt32BE(split.hi32, offset);\n    buffer.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    return uint8ArrayToBuffer(b).readFloatLE(offset);\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n    return 4;\n  }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    return uint8ArrayToBuffer(b).readFloatBE(offset);\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n    return 4;\n  }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    return uint8ArrayToBuffer(b).readDoubleLE(offset);\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n    return 8;\n  }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    return uint8ArrayToBuffer(b).readDoubleBE(offset);\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n    return 8;\n  }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(count instanceof ExternalLayout && count.isCount() || Number.isInteger(count) && 0 <= count)) {\n      throw new TypeError('count must be non-negative integer ' + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if (!(count instanceof ExternalLayout) && 0 < elementLayout.span) {\n      span = count * elementLayout.span;\n    }\n    super(span, property);\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n  /** @override */\n  getSpan(b, offset = 0) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset = 0) {\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields) && fields.reduce((acc, v) => acc && v instanceof Layout, true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if ('boolean' === typeof property && undefined === decodePrefixes) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if (0 > fd.span && undefined === fd.property) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n      // ignore error\n    }\n    super(span, property);\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n  /** @override */\n  getSpan(b, offset = 0) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    checkUint8Array(b);\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes && b.length === offset) {\n        break;\n      }\n    }\n    return dest;\n  }\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset = 0) {\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = 0 < span ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return lastOffset + lastWrote - firstOffset;\n  }\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property && 0 < values.length) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n    return undefined;\n  }\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n    return undefined;\n  }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode(b, offset) {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode(src, b, offset) {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!(layout instanceof ExternalLayout && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n    super(property || layout.property || 'variant');\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    let discriminator;\n    if (discr instanceof UInt || discr instanceof UIntBE) {\n      discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if (discr instanceof ExternalLayout && discr.isCount()) {\n      discriminator = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator ' + 'or an unsigned integer layout');\n    } else {\n      discriminator = discr;\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!(null === defaultLayout || defaultLayout instanceof Layout)) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if (0 <= span && (discr instanceof UInt || discr instanceof UIntBE)) {\n        span += discriminator.layout.span;\n      }\n    }\n    super(span, property);\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discriminator;\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = discr instanceof UInt || discr instanceof UIntBE;\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function (src) {\n      return boundGetSourceVariant(src);\n    };\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function (gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n  /** @override */\n  getSpan(b, offset = 0) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisfied rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n      if (this.defaultLayout && this.defaultLayout.property && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo && (!vlo.layout || vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset = 0) {\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    const clo = this.registry[discr];\n    if (undefined === clo) {\n      const defaultLayout = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset = 0) {\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      // this.defaultLayout is not undefined when vlo is undefined\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      // clo.property is not undefined when vlo is undefined\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Uint8Array)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Uint8Array}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset = 0) {\n    let variant;\n    if (vb instanceof Uint8Array) {\n      variant = this.discriminator.decode(vb, offset);\n    } else {\n      variant = vb;\n    }\n    return this.registry[variant];\n  }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if (!Number.isInteger(variant) || 0 > variant) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if ('string' === typeof layout && undefined === property) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if (null !== union.defaultLayout && 0 <= layout.span && layout.span > union.defaultLayout.span) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if (0 <= span && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n  /** @override */\n  getSpan(b, offset = 0) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    let span = 0;\n    if (this.layout) {\n      span = this.layout.getSpan(b, offset + contentOffset);\n    }\n    return contentOffset + span;\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    const dest = this.makeDestinationObject();\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout && !Object.prototype.hasOwnProperty.call(src, this.property)) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if (0 <= this.union.span && span > this.union.span) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n    return undefined;\n  }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!(word instanceof UInt || word instanceof UIntBE)) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if ('string' === typeof msb && undefined === property) {\n      property = msb;\n      msb = false;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function (v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function () {\n      return value;\n    };\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    const dest = this.makeDestinationObject();\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b);\n      }\n    }\n    return dest;\n  }\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset = 0) {\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  // `Boolean` conflicts with the native primitive type\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n    return undefined;\n  }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if (!Number.isInteger(bits) || 0 >= bits) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if (bits + usedBits > totalBits) {\n      throw new Error('bits too long for span remainder (' + (totalBits - usedBits) + ' of ' + totalBits + ' remain)');\n    }\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n    /** The span of this value in bits. */\n    this.bits = bits;\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) {\n      // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode(b, offset) {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ('number' !== typeof value || !Number.isInteger(value) || value !== fixBitwiseResult(value & this.valueMask)) {\n      throw new TypeError(nameWithProperty('BitField.encode', this) + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask) | wordValue);\n  }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!super.decode(b, offset);\n  }\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    super.encode(value);\n  }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(length instanceof ExternalLayout && length.isCount() || Number.isInteger(length) && 0 <= length)) {\n      throw new TypeError('length must be positive integer ' + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return uint8ArrayToBuffer(b).slice(offset, offset + span);\n  }\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(src instanceof Uint8Array && span === src.length)) {\n      throw new TypeError(nameWithProperty('Blob.encode', this) + ' requires (length ' + span + ') Uint8Array as src');\n    }\n    if (offset + span > b.length) {\n      throw new RangeError('encoding overruns Uint8Array');\n    }\n    const srcBuffer = uint8ArrayToBuffer(src);\n    uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n  /** @override */\n  getSpan(b, offset = 0) {\n    checkUint8Array(b);\n    let idx = offset;\n    while (idx < b.length && 0 !== b[idx]) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    const span = this.getSpan(b, offset);\n    return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = String(src);\n    }\n    const srcb = buffer_1.Buffer.from(src, 'utf8');\n    const span = srcb.length;\n    if (offset + span > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    const buffer = uint8ArrayToBuffer(b);\n    srcb.copy(buffer, offset);\n    buffer[offset + span] = 0;\n    return span + 1;\n  }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if ('string' === typeof maxSpan && undefined === property) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n    super(-1, property);\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n  /** @override */\n  getSpan(b, offset = 0) {\n    checkUint8Array(b);\n    return b.length - offset;\n  }\n  /** @override */\n  decode(b, offset = 0) {\n    const span = this.getSpan(b, offset);\n    if (0 <= this.maxSpan && this.maxSpan < span) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n  }\n  /** @override */\n  encode(src, b, offset = 0) {\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = String(src);\n    }\n    const srcb = buffer_1.Buffer.from(src, 'utf8');\n    const span = srcb.length;\n    if (0 <= this.maxSpan && this.maxSpan < span) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if (offset + span > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(uint8ArrayToBuffer(b), offset);\n    return span;\n  }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n  /** @override */\n  decode(b, offset) {\n    return this.value;\n  }\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = (elementSpan, property) => new GreedyCount(elementSpan, property);\n/** Factory for {@link OffsetLayout}. */\nexports.offset = (layout, offset, property) => new OffsetLayout(layout, offset, property);\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = property => new UInt(1, property);\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = property => new UInt(2, property);\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = property => new UInt(3, property);\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = property => new UInt(4, property);\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = property => new UInt(5, property);\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = property => new UInt(6, property);\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = property => new NearUInt64(property);\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = property => new UIntBE(2, property);\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = property => new UIntBE(3, property);\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = property => new UIntBE(4, property);\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = property => new UIntBE(5, property);\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = property => new UIntBE(6, property);\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = property => new NearUInt64BE(property);\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = property => new Int(1, property);\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = property => new Int(2, property);\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = property => new Int(3, property);\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = property => new Int(4, property);\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = property => new Int(5, property);\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = property => new Int(6, property);\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = property => new NearInt64(property);\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = property => new IntBE(2, property);\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = property => new IntBE(3, property);\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = property => new IntBE(4, property);\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = property => new IntBE(5, property);\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = property => new IntBE(6, property);\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = property => new NearInt64BE(property);\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = property => new Float(property);\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = property => new FloatBE(property);\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = property => new Double(property);\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = property => new DoubleBE(property);\n/** Factory for {@link Structure} values. */\nexports.struct = (fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes);\n/** Factory for {@link BitStructure} values. */\nexports.bits = (word, msb, property) => new BitStructure(word, msb, property);\n/** Factory for {@link Sequence} values. */\nexports.seq = (elementLayout, count, property) => new Sequence(elementLayout, count, property);\n/** Factory for {@link Union} values. */\nexports.union = (discr, defaultLayout, property) => new Union(discr, defaultLayout, property);\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = (layout, property) => new UnionLayoutDiscriminator(layout, property);\n/** Factory for {@link Blob} values. */\nexports.blob = (length, property) => new Blob(length, property);\n/** Factory for {@link CString} values. */\nexports.cstr = property => new CString(property);\n/** Factory for {@link UTF8} values. */\nexports.utf8 = (maxSpan, property) => new UTF8(maxSpan, property);\n/** Factory for {@link Constant} values. */\nexports.constant = (value, property) => new Constant(value, property);\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n  {\n    const reversed = Buffer.from(buf);\n    reversed.reverse();\n    const hex = reversed.toString('hex');\n    if (hex.length === 0) {\n      return BigInt(0);\n    }\n    return BigInt(`0x${hex}`);\n  }\n  return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n  {\n    const hex = buf.toString('hex');\n    if (hex.length === 0) {\n      return BigInt(0);\n    }\n    return BigInt(`0x${hex}`);\n  }\n  return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n  {\n    const hex = num.toString(16);\n    const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    buffer.reverse();\n    return buffer;\n  }\n  // Allocation is done here, since it is slower using napi in C\n  return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n  {\n    const hex = num.toString(16);\n    return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n  }\n  return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;", "import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq; // Previous uuid creation time\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n  return buf || stringify(b);\n}\nexport default v1;", "import validate from './validate.js';\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\nexport default parse;", "import stringify from './stringify.js';\nimport parse from './parse.js';\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n  return bytes;\n}\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n    if (buf) {\n      offset = offset || 0;\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n      return buf;\n    }\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;", "import rng from './rng.js';\nimport stringify from './stringify.js';\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return stringify(rnds);\n}\nexport default v4;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n    case 1:\n      return x ^ y ^ z;\n    case 2:\n      return x & y ^ x & z ^ y & z;\n    case 3:\n      return x ^ y ^ z;\n  }\n}\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n    M[_i] = arr;\n  }\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;", "export default '00000000-0000-0000-0000-000000000000';", "import validate from './validate.js';\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  return parseInt(uuid.substr(14, 1), 16);\n}\nexport default version;", "export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';", "'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function (method, params, id, options) {\n  if (typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n  const request = {\n    method: method\n  };\n  if (version === 2) {\n    request.jsonrpc = '2.0';\n  }\n  if (params) {\n    // params given, but invalid?\n    if (typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if (typeof id === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function () {\n      return uuid();\n    };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n  return request;\n};\nmodule.exports = generateRequest;", "'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function (callServer, options) {\n  if (!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n  if (!options) {\n    options = {};\n  }\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function () {\n      return uuid();\n    },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false\n  };\n  this.callServer = callServer;\n};\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function (method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n  if (isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if (typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n    const hasCallback = typeof callback === 'function';\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull\n      });\n    } catch (err) {\n      if (hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if (!hasCallback) {\n      return request;\n    }\n  }\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch (err) {\n    return callback(err);\n  }\n  this.callServer(message, function (err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function (err, responseText, callback) {\n  if (err) {\n    callback(err);\n    return;\n  }\n  if (!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch (err) {\n    return callback(err);\n  }\n  if (callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if (Array.isArray(response)) {\n      // neccesary to split strictly on validity according to spec here\n      const isError = function (res) {\n        return typeof res.error !== 'undefined';\n      };\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    } else {\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    }\n  }\n  callback(null, response);\n};", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict';\n\nconst base64 = require('base64-js');\nconst ieee754 = require('ieee754');\nconst customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' // eslint-disable-line dot-notation\n? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n: null;\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\nconst K_MAX_LENGTH = 0x7fffffff;\nexports.kMaxLength = K_MAX_LENGTH;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n  console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n}\nfunction typedArraySupport() {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1);\n    const proto = {\n      foo: function () {\n        return 42;\n      }\n    };\n    Object.setPrototypeOf(proto, Uint8Array.prototype);\n    Object.setPrototypeOf(arr, proto);\n    return arr.foo() === 42;\n  } catch (e) {\n    return false;\n  }\n}\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.buffer;\n  }\n});\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.byteOffset;\n  }\n});\nfunction createBuffer(length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length);\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError('The \"string\" argument must be of type string. Received type number');\n    }\n    return allocUnsafe(arg);\n  }\n  return from(arg, encodingOrOffset, length);\n}\nBuffer.poolSize = 8192; // not used by this implementation\n\nfunction from(value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset);\n  }\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value);\n  }\n  if (value == null) {\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n  }\n  if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n  if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n  if (typeof value === 'number') {\n    throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n  }\n  const valueOf = value.valueOf && value.valueOf();\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length);\n  }\n  const b = fromObject(value);\n  if (b) return b;\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n  }\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length);\n};\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf(Buffer, Uint8Array);\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number');\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n  }\n}\nfunction alloc(size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(size);\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n  }\n  return createBuffer(size);\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding);\n};\nfunction allocUnsafe(size) {\n  assertSize(size);\n  return createBuffer(size < 0 ? 0 : checked(size) | 0);\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size);\n};\nfunction fromString(string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding);\n  }\n  const length = byteLength(string, encoding) | 0;\n  let buf = createBuffer(length);\n  const actual = buf.write(string, encoding);\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n  }\n  return buf;\n}\nfunction fromArrayLike(array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0;\n  const buf = createBuffer(length);\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255;\n  }\n  return buf;\n}\nfunction fromArrayView(arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView);\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n  }\n  return fromArrayLike(arrayView);\n}\nfunction fromArrayBuffer(array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds');\n  }\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds');\n  }\n  let buf;\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array);\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset);\n  } else {\n    buf = new Uint8Array(array, byteOffset, length);\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\nfunction fromObject(obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0;\n    const buf = createBuffer(len);\n    if (buf.length === 0) {\n      return buf;\n    }\n    obj.copy(buf, 0, 0, len);\n    return buf;\n  }\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0);\n    }\n    return fromArrayLike(obj);\n  }\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\nfunction checked(length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n  }\n  return length | 0;\n}\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length);\n}\nBuffer.isBuffer = function isBuffer(b) {\n  return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n};\nBuffer.compare = function compare(a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n  }\n  if (a === b) return 0;\n  let x = a.length;\n  let y = b.length;\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n    default:\n      return false;\n  }\n};\nBuffer.concat = function concat(list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n  let i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n  const buffer = Buffer.allocUnsafe(length);\n  let pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i];\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n        buf.copy(buffer, pos);\n      } else {\n        Uint8Array.prototype.set.call(buffer, buf, pos);\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    } else {\n      buf.copy(buffer, pos);\n    }\n    pos += buf.length;\n  }\n  return buffer;\n};\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength;\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);\n  }\n  const len = string.length;\n  const mustMatch = arguments.length > 2 && arguments[2] === true;\n  if (!mustMatch && len === 0) return 0;\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length;\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n      case 'hex':\n        return len >>> 1;\n      case 'base64':\n        return base64ToBytes(string).length;\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\nfunction slowToString(encoding, start, end) {\n  let loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return '';\n  }\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n  if (end <= 0) {\n    return '';\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n  if (end <= start) {\n    return '';\n  }\n  if (!encoding) encoding = 'utf8';\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n      case 'ascii':\n        return asciiSlice(this, start, end);\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n      case 'base64':\n        return base64Slice(this, start, end);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true;\nfunction swap(b, n, m) {\n  const i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\nBuffer.prototype.swap16 = function swap16() {\n  const len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this;\n};\nBuffer.prototype.swap32 = function swap32() {\n  const len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this;\n};\nBuffer.prototype.swap64 = function swap64() {\n  const len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this;\n};\nBuffer.prototype.toString = function toString() {\n  const length = this.length;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\nBuffer.prototype.inspect = function inspect() {\n  let str = '';\n  const max = exports.INSPECT_MAX_BYTES;\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n  if (this.length > max) str += ' ... ';\n  return '<Buffer ' + str + '>';\n};\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n}\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength);\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);\n  }\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n  if (start >= end) {\n    return 1;\n  }\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  let x = thisEnd - thisStart;\n  let y = end - start;\n  const len = Math.min(x, y);\n  const thisCopy = this.slice(thisStart, thisEnd);\n  const targetCopy = target.slice(start, end);\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1;\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset; // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n  throw new TypeError('val must be string, number or Buffer');\n}\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1;\n  let arrLength = arr.length;\n  let valLength = val.length;\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n  let i;\n  if (dir) {\n    let foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true;\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n      if (found) return i;\n    }\n  }\n  return -1;\n}\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  const remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n  const strLen = string.length;\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  let i;\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (numberIsNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n  return i;\n}\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0;\n    if (isFinite(length)) {\n      length = length >>> 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n  const remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n  if (!encoding) encoding = 'utf8';\n  let loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length);\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  const res = [];\n  let i = start;\n  while (i < end) {\n    const firstByte = buf[i];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break;\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}\nfunction asciiSlice(buf, start, end) {\n  let ret = '';\n  end = Math.min(buf.length, end);\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret;\n}\nfunction latin1Slice(buf, start, end) {\n  let ret = '';\n  end = Math.min(buf.length, end);\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret;\n}\nfunction hexSlice(buf, start, end) {\n  const len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  let out = '';\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]];\n  }\n  return out;\n}\nfunction utf16leSlice(buf, start, end) {\n  const bytes = buf.slice(start, end);\n  let res = '';\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res;\n}\nBuffer.prototype.slice = function slice(start, end) {\n  const len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n  if (end < start) end = start;\n  const newBuf = this.subarray(start, end);\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype);\n  return newBuf;\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\nBuffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  let val = this[offset];\n  let mul = 1;\n  let i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n  let val = this[offset + --byteLength];\n  let mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\nBuffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\nBuffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\nBuffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\nBuffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;\n  const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;\n  return BigInt(lo) + (BigInt(hi) << BigInt(32));\n});\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n  const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n});\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  let val = this[offset];\n  let mul = 1;\n  let i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  let i = byteLength;\n  let mul = 1;\n  let val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  const val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  const val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24); // Overflow\n\n  return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);\n});\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  const val = (first << 24) +\n  // Overflow\n  this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n  return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);\n});\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\nBuffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  let mul = 1;\n  let i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  let i = byteLength - 1;\n  let mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nBuffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\nBuffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\nBuffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset + 3] = value >>> 24;\n  this[offset + 2] = value >>> 16;\n  this[offset + 1] = value >>> 8;\n  this[offset] = value & 0xff;\n  return offset + 4;\n};\nBuffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\nfunction wrtBigUInt64LE(buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n  let lo = Number(value & BigInt(0xffffffff));\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset;\n}\nfunction wrtBigUInt64BE(buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n  let lo = Number(value & BigInt(0xffffffff));\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8;\n}\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n});\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n});\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    const limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  let i = 0;\n  let mul = 1;\n  let sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    const limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  let i = byteLength - 1;\n  let mul = 1;\n  let sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  this[offset + 2] = value >>> 16;\n  this[offset + 3] = value >>> 24;\n  return offset + 4;\n};\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n});\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n});\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0;\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n  const len = end - start;\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n  }\n  return len;\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0);\n      if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code;\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } else if (typeof val === 'boolean') {\n    val = Number(val);\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n  if (end <= start) {\n    return this;\n  }\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  let i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n    const len = bytes.length;\n    if (len === 0) {\n      throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n  return this;\n};\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {};\nfunction E(sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor() {\n      super();\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      });\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`;\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack; // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name;\n    }\n    get code() {\n      return sym;\n    }\n    set code(value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      });\n    }\n    toString() {\n      return `${this.name} [${sym}]: ${this.message}`;\n    }\n  };\n}\nE('ERR_BUFFER_OUT_OF_BOUNDS', function (name) {\n  if (name) {\n    return `${name} is outside of buffer bounds`;\n  }\n  return 'Attempt to access memory outside buffer bounds';\n}, RangeError);\nE('ERR_INVALID_ARG_TYPE', function (name, actual) {\n  return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n}, TypeError);\nE('ERR_OUT_OF_RANGE', function (str, range, input) {\n  let msg = `The value of \"${str}\" is out of range.`;\n  let received = input;\n  if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n    received = addNumericalSeparator(String(input));\n  } else if (typeof input === 'bigint') {\n    received = String(input);\n    if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n      received = addNumericalSeparator(received);\n    }\n    received += 'n';\n  }\n  msg += ` It must be ${range}. Received ${received}`;\n  return msg;\n}, RangeError);\nfunction addNumericalSeparator(val) {\n  let res = '';\n  let i = val.length;\n  const start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`;\n  }\n  return `${val.slice(0, i)}${res}`;\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds(buf, offset, byteLength) {\n  validateNumber(offset, 'offset');\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1));\n  }\n}\nfunction checkIntBI(value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : '';\n    let range;\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` + `${(byteLength + 1) * 8 - 1}${n}`;\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`;\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value);\n  }\n  checkBounds(buf, offset, byteLength);\n}\nfunction validateNumber(value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value);\n  }\n}\nfunction boundsError(value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type);\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value);\n  }\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n  }\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset', `>= ${type ? 1 : 0} and <= ${length}`, value);\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\nfunction base64clean(str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0];\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return '';\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str;\n}\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction asciiToBytes(str) {\n  const byteArray = [];\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray;\n}\nfunction utf16leToBytes(str, units) {\n  let c, hi, lo;\n  const byteArray = [];\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n  return byteArray;\n}\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\nfunction blitBuffer(src, dst, offset, length) {\n  let i;\n  for (i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n  return i;\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance(obj, type) {\n  return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\nfunction numberIsNaN(obj) {\n  // For IE11 support\n  return obj !== obj; // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = function () {\n  const alphabet = '0123456789abcdef';\n  const table = new Array(256);\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16;\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n  }\n  return table;\n}();\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod(fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn;\n}\nfunction BufferBigIntNotDefined() {\n  throw new Error('BigInt not supported');\n}", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty,\n  prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n  var listener = new EE(fn, context || emitter, once),\n    evt = prefix ? prefix + event : event;\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);else emitter._events[evt] = [emitter._events[evt], listener];\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = [],\n    events,\n    name;\n  if (this._eventsCount === 0) return names;\n  for (name in events = this._events) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event,\n    handlers = this._events[evt];\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event,\n    listeners = this._events[evt];\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n  if (!this._events[evt]) return false;\n  var listeners = this._events[evt],\n    len = arguments.length,\n    args,\n    i;\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n    switch (len) {\n      case 1:\n        return listeners.fn.call(listeners.context), true;\n      case 2:\n        return listeners.fn.call(listeners.context, a1), true;\n      case 3:\n        return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4:\n        return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5:\n        return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6:\n        return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n    for (i = 1, args = new Array(len - 1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length,\n      j;\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n      switch (len) {\n        case 1:\n          listeners[i].fn.call(listeners[i].context);\n          break;\n        case 2:\n          listeners[i].fn.call(listeners[i].context, a1);\n          break;\n        case 3:\n          listeners[i].fn.call(listeners[i].context, a1, a2);\n          break;\n        case 4:\n          listeners[i].fn.call(listeners[i].context, a1, a2, a3);\n          break;\n        default:\n          if (!args) for (j = 1, args = new Array(len - 1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n  var listeners = this._events[evt];\n  if (listeners.fn) {\n    if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;else clearEvent(this, evt);\n  }\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}", "import { Buffer } from 'buffer';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { serialize, deserialize, deserializeUnchecked } from 'borsh';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { blob } from '@solana/buffer-layout';\nimport { toBigIntLE, toBufferLE } from 'bigint-buffer';\nimport { coerce, instance, string, tuple, literal, unknown, type, number, array, nullable, optional, boolean, record, union, create, any, assert as assert$1 } from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport { CommonClient, WebSocket } from 'rpc-websockets';\nimport { keccak_256 } from '@noble/hashes/sha3';\nimport { secp256k1 } from '@noble/curves/secp256k1';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\n\n/**\n * Ed25519 Keypair\n */\n\nconst generatePrivateKey = ed25519.utils.randomPrivateKey;\nconst generateKeypair = () => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey\n  };\n};\nconst getPublicKey = ed25519.getPublicKey;\nfunction isOnCurve(publicKey) {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nconst sign = (message, secretKey) => ed25519.sign(message, secretKey.slice(0, 32));\nconst verify = ed25519.verify;\nconst toBuffer = arr => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\n// Class wrapping a plain object\nclass Struct {\n  constructor(properties) {\n    Object.assign(this, properties);\n  }\n  encode() {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n  static decode(data) {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n  static decodeUnchecked(data) {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nclass Enum extends Struct {\n  constructor(properties) {\n    super(properties);\n    this.enum = '';\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\nconst SOLANA_SCHEMA = new Map();\nvar _PublicKey;\n\n/**\n * Maximum length of derived pubkey seed\n */\nconst MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nconst PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\n\n/**\n * JSON object representation of PublicKey class\n */\n\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nclass PublicKey extends Struct {\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value) {\n    super({});\n    /** @internal */\n    this._bn = void 0;\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique() {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey) {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58() {\n    return bs58.encode(this.toBytes());\n  }\n  toJSON() {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes() {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer() {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n  get [Symbol.toStringTag]() {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString() {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(fromPublicKey, seed, programId) {\n    const buffer = Buffer.concat([fromPublicKey.toBuffer(), Buffer.from(seed), programId.toBuffer()]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(seeds, programId) {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([buffer, programId.toBuffer(), Buffer.from('ProgramDerivedAddress')]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(seeds, programId) {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(seeds, programId) {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(seeds, programId) {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData) {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n_PublicKey = PublicKey;\nPublicKey.default = new _PublicKey('11111111111111111111111111111111');\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']]\n});\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nclass Account {\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey) {\n    /** @internal */\n    this._publicKey = void 0;\n    /** @internal */\n    this._secretKey = void 0;\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey() {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey() {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\nconst BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nconst PACKET_DATA_SIZE = 1280 - 40 - 8;\nconst VERSION_PREFIX_MASK = 0x7f;\nconst SIGNATURE_LENGTH_IN_BYTES = 64;\nclass TransactionExpiredBlockheightExceededError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredBlockheightExceededError.prototype, 'name', {\n  value: 'TransactionExpiredBlockheightExceededError'\n});\nclass TransactionExpiredTimeoutError extends Error {\n  constructor(signature, timeoutSeconds) {\n    super(`Transaction was not confirmed in ${timeoutSeconds.toFixed(2)} seconds. It is ` + 'unknown if it succeeded or failed. Check signature ' + `${signature} using the Solana Explorer or CLI tools.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError'\n});\nclass TransactionExpiredNonceInvalidError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError'\n});\nclass MessageAccountKeys {\n  constructor(staticAccountKeys, accountKeysFromLookups) {\n    this.staticAccountKeys = void 0;\n    this.accountKeysFromLookups = void 0;\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n  keySegments() {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n  get(index) {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n  get length() {\n    return this.keySegments().flat().length;\n  }\n  compileInstructions(instructions) {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n    const keyIndexMap = new Map();\n    this.keySegments().flat().forEach((key, index) => {\n      keyIndexMap.set(key.toBase58(), index);\n    });\n    const findKeyIndex = key => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined) throw new Error('Encountered an unknown instruction account key during compilation');\n      return keyIndex;\n    };\n    return instructions.map(instruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta => findKeyIndex(meta.pubkey)),\n        data: instruction.data\n      };\n    });\n  }\n}\n\n/**\n * Layout for a public key\n */\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nconst signature = (property = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n/**\n * Layout for a Rust String type\n */\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n  const rslShim = rsl;\n  rslShim.decode = (b, offset) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n  rslShim.encode = (str, b, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, b, offset);\n  };\n  rslShim.alloc = str => {\n    return BufferLayout.u32().span + BufferLayout.u32().span + Buffer.from(str, 'utf8').length;\n  };\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nconst authorized = (property = 'authorized') => {\n  return BufferLayout.struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nconst lockup = (property = 'lockup') => {\n  return BufferLayout.struct([BufferLayout.ns64('unixTimestamp'), BufferLayout.ns64('epoch'), publicKey('custodian')], property);\n};\n\n/**\n *  Layout for a VoteInit object\n */\nconst voteInit = (property = 'voteInit') => {\n  return BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedVoter'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission')], property);\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nconst voteAuthorizeWithSeedArgs = (property = 'voteAuthorizeWithSeedArgs') => {\n  return BufferLayout.struct([BufferLayout.u32('voteAuthorizationType'), publicKey('currentAuthorityDerivedKeyOwnerPubkey'), rustString('currentAuthorityDerivedKeySeed'), publicKey('newAuthorized')], property);\n};\nfunction getAlloc(type, fields) {\n  const getItemAlloc = item => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({\n        layout: item\n      }, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    alloc += getItemAlloc(item);\n  });\n  return alloc;\n}\nfunction decodeLength(bytes) {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\nfunction encodeLength(bytes, len) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\nclass CompiledKeys {\n  constructor(payer, keyMetaMap) {\n    this.payer = void 0;\n    this.keyMetaMap = void 0;\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n  static compile(instructions, payer) {\n    const keyMetaMap = new Map();\n    const getOrInsertDefault = pubkey => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n  getMessageComponents() {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n    const writableSigners = mapEntries.filter(([, meta]) => meta.isSigner && meta.isWritable);\n    const readonlySigners = mapEntries.filter(([, meta]) => meta.isSigner && !meta.isWritable);\n    const writableNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && meta.isWritable);\n    const readonlyNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && !meta.isWritable);\n    const header = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length\n    };\n\n    // sanity checks\n    {\n      assert(writableSigners.length > 0, 'Expected at least one writable signer key');\n      const [payerAddress] = writableSigners[0];\n      assert(payerAddress === this.payer.toBase58(), 'Expected first writable signer key to be the fee payer');\n    }\n    const staticAccountKeys = [...writableSigners.map(([address]) => new PublicKey(address)), ...readonlySigners.map(([address]) => new PublicKey(address)), ...writableNonSigners.map(([address]) => new PublicKey(address)), ...readonlyNonSigners.map(([address]) => new PublicKey(address))];\n    return [header, staticAccountKeys];\n  }\n  extractTableLookup(lookupTable) {\n    const [writableIndexes, drainedWritableKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable);\n    const [readonlyIndexes, drainedReadonlyKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable);\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n    return [{\n      accountKey: lookupTable.key,\n      writableIndexes,\n      readonlyIndexes\n    }, {\n      writable: drainedWritableKeys,\n      readonly: drainedReadonlyKeys\n    }];\n  }\n\n  /** @internal */\n  drainKeysFoundInLookupTable(lookupTableEntries, keyMetaFilter) {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry => entry.equals(key));\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\nconst END_OF_BUFFER_ERROR_MESSAGE = 'Reached end of buffer unexpectedly';\n\n/**\n * Delegates to `Array#shift`, but throws if the array is zero-length.\n */\nfunction guardedShift(byteArray) {\n  if (byteArray.length === 0) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.shift();\n}\n\n/**\n * Delegates to `Array#splice`, but throws if the section being spliced out extends past the end of\n * the array.\n */\nfunction guardedSplice(byteArray, ...args) {\n  const [start] = args;\n  if (args.length === 2 // Implies that `deleteCount` was supplied\n  ? start + (args[1] ?? 0) > byteArray.length : start >= byteArray.length) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.splice(...args);\n}\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\n\n/**\n * Message constructor arguments\n */\n\n/**\n * List of instructions to be processed atomically\n */\nclass Message {\n  constructor(args) {\n    this.header = void 0;\n    this.accountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.instructions = void 0;\n    this.indexToProgramIds = new Map();\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix => this.indexToProgramIds.set(ix.programIdIndex, this.accountKeys[ix.programIdIndex]));\n  }\n  get version() {\n    return 'legacy';\n  }\n  get staticAccountKeys() {\n    return this.accountKeys;\n  }\n  get compiledInstructions() {\n    return this.instructions.map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accountKeyIndexes: ix.accounts,\n      data: bs58.decode(ix.data)\n    }));\n  }\n  get addressTableLookups() {\n    return [];\n  }\n  getAccountKeys() {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accounts: ix.accountKeyIndexes,\n      data: bs58.encode(ix.data)\n    }));\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions\n    });\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  isProgramId(index) {\n    return this.indexToProgramIds.has(index);\n  }\n  programIds() {\n    return [...this.indexToProgramIds.values()];\n  }\n  nonProgramIds() {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n  serialize() {\n    const numKeys = this.accountKeys.length;\n    let keyCount = [];\n    encodeLength(keyCount, numKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        accounts,\n        programIdIndex\n      } = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n      let keyIndicesCount = [];\n      encodeLength(keyIndicesCount, accounts.length);\n      let dataCount = [];\n      encodeLength(dataCount, data.length);\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data\n      };\n    });\n    let instructionCount = [];\n    encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), BufferLayout.seq(BufferLayout.u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), BufferLayout.blob(instruction.dataLength.length, 'dataLength'), BufferLayout.seq(BufferLayout.u8('userdatum'), instruction.data.length, 'data')]);\n      const length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n    const signDataLayout = BufferLayout.struct([BufferLayout.blob(1, 'numRequiredSignatures'), BufferLayout.blob(1, 'numReadonlySignedAccounts'), BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'), BufferLayout.blob(keyCount.length, 'keyCount'), BufferLayout.seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([this.header.numReadonlySignedAccounts]),\n      numReadonlyUnsignedAccounts: Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash)\n    };\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const numRequiredSignatures = guardedShift(byteArray);\n    if (numRequiredSignatures !== (numRequiredSignatures & VERSION_PREFIX_MASK)) {\n      throw new Error('Versioned messages must be deserialized with VersionedMessage.deserialize()');\n    }\n    const numReadonlySignedAccounts = guardedShift(byteArray);\n    const numReadonlyUnsignedAccounts = guardedShift(byteArray);\n    const accountCount = decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n    const recentBlockhash = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n    const instructionCount = decodeLength(byteArray);\n    let instructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountCount = decodeLength(byteArray);\n      const accounts = guardedSplice(byteArray, 0, accountCount);\n      const dataLength = decodeLength(byteArray);\n      const dataSlice = guardedSplice(byteArray, 0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data\n      });\n    }\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions\n    };\n    return new Message(messageArgs);\n  }\n}\n\n/**\n * Message constructor arguments\n */\n\nclass MessageV0 {\n  constructor(args) {\n    this.header = void 0;\n    this.staticAccountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.compiledInstructions = void 0;\n    this.addressTableLookups = void 0;\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n  get version() {\n    return 0;\n  }\n  get numAccountKeysFromLookups() {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n  getAccountKeys(args) {\n    let accountKeysFromLookups;\n    if (args && 'accountKeysFromLookups' in args && args.accountKeysFromLookups) {\n      if (this.numAccountKeysFromLookups != args.accountKeysFromLookups.writable.length + args.accountKeysFromLookups.readonly.length) {\n        throw new Error('Failed to get account keys because of a mismatch in the number of account keys from lookups');\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (args && 'addressLookupTableAccounts' in args && args.addressLookupTableAccounts) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(args.addressLookupTableAccounts);\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error('Failed to get account keys because address table lookups were not resolved');\n    }\n    return new MessageAccountKeys(this.staticAccountKeys, accountKeysFromLookups);\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce((count, lookup) => count + lookup.writableIndexes.length, 0);\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  resolveAddressTableLookups(addressLookupTableAccounts) {\n    const accountKeysFromLookups = {\n      writable: [],\n      readonly: []\n    };\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account => account.key.equals(tableLookup.accountKey));\n      if (!tableAccount) {\n        throw new Error(`Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`);\n      }\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n    }\n    return accountKeysFromLookups;\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const addressTableLookups = new Array();\n    const accountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array()\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {\n          writable,\n          readonly\n        }] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys, accountKeysFromLookups);\n    const compiledInstructions = accountKeys.compileInstructions(args.instructions);\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n  serialize() {\n    const encodedStaticAccountKeysLength = Array();\n    encodeLength(encodedStaticAccountKeysLength, this.staticAccountKeys.length);\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array();\n    encodeLength(encodedInstructionsLength, this.compiledInstructions.length);\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array();\n    encodeLength(encodedAddressTableLookupsLength, this.addressTableLookups.length);\n    const messageLayout = BufferLayout.struct([BufferLayout.u8('prefix'), BufferLayout.struct([BufferLayout.u8('numRequiredSignatures'), BufferLayout.u8('numReadonlySignedAccounts'), BufferLayout.u8('numReadonlyUnsignedAccounts')], 'header'), BufferLayout.blob(encodedStaticAccountKeysLength.length, 'staticAccountKeysLength'), BufferLayout.seq(publicKey(), this.staticAccountKeys.length, 'staticAccountKeys'), publicKey('recentBlockhash'), BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'), BufferLayout.blob(serializedInstructions.length, 'serializedInstructions'), BufferLayout.blob(encodedAddressTableLookupsLength.length, 'addressTableLookupsLength'), BufferLayout.blob(serializedAddressTableLookups.length, 'serializedAddressTableLookups')]);\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode({\n      prefix: MESSAGE_VERSION_0_PREFIX,\n      header: this.header,\n      staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n      staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n      instructionsLength: new Uint8Array(encodedInstructionsLength),\n      serializedInstructions,\n      addressTableLookupsLength: new Uint8Array(encodedAddressTableLookupsLength),\n      serializedAddressTableLookups\n    }, serializedMessage);\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n  serializeInstructions() {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array();\n      encodeLength(encodedAccountKeyIndexesLength, instruction.accountKeyIndexes.length);\n      const encodedDataLength = Array();\n      encodeLength(encodedDataLength, instruction.data.length);\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(encodedAccountKeyIndexesLength.length, 'encodedAccountKeyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), instruction.accountKeyIndexes.length, 'accountKeyIndexes'), BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'), BufferLayout.blob(instruction.data.length, 'data')]);\n      serializedLength += instructionLayout.encode({\n        programIdIndex: instruction.programIdIndex,\n        encodedAccountKeyIndexesLength: new Uint8Array(encodedAccountKeyIndexesLength),\n        accountKeyIndexes: instruction.accountKeyIndexes,\n        encodedDataLength: new Uint8Array(encodedDataLength),\n        data: instruction.data\n      }, serializedInstructions, serializedLength);\n    }\n    return serializedInstructions.slice(0, serializedLength);\n  }\n  serializeAddressTableLookups() {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array();\n      encodeLength(encodedWritableIndexesLength, lookup.writableIndexes.length);\n      const encodedReadonlyIndexesLength = Array();\n      encodeLength(encodedReadonlyIndexesLength, lookup.readonlyIndexes.length);\n      const addressTableLookupLayout = BufferLayout.struct([publicKey('accountKey'), BufferLayout.blob(encodedWritableIndexesLength.length, 'encodedWritableIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.writableIndexes.length, 'writableIndexes'), BufferLayout.blob(encodedReadonlyIndexesLength.length, 'encodedReadonlyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.readonlyIndexes.length, 'readonlyIndexes')]);\n      serializedLength += addressTableLookupLayout.encode({\n        accountKey: lookup.accountKey.toBytes(),\n        encodedWritableIndexesLength: new Uint8Array(encodedWritableIndexesLength),\n        writableIndexes: lookup.writableIndexes,\n        encodedReadonlyIndexesLength: new Uint8Array(encodedReadonlyIndexesLength),\n        readonlyIndexes: lookup.readonlyIndexes\n      }, serializedAddressTableLookups, serializedLength);\n    }\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n  static deserialize(serializedMessage) {\n    let byteArray = [...serializedMessage];\n    const prefix = guardedShift(byteArray);\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(prefix !== maskedPrefix, `Expected versioned message but received legacy message`);\n    const version = maskedPrefix;\n    assert(version === 0, `Expected versioned message with version 0 but found version ${version}`);\n    const header = {\n      numRequiredSignatures: guardedShift(byteArray),\n      numReadonlySignedAccounts: guardedShift(byteArray),\n      numReadonlyUnsignedAccounts: guardedShift(byteArray)\n    };\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH)));\n    }\n    const recentBlockhash = bs58.encode(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n    const instructionCount = decodeLength(byteArray);\n    const compiledInstructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountKeyIndexesLength = decodeLength(byteArray);\n      const accountKeyIndexes = guardedSplice(byteArray, 0, accountKeyIndexesLength);\n      const dataLength = decodeLength(byteArray);\n      const data = new Uint8Array(guardedSplice(byteArray, 0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data\n      });\n    }\n    const addressTableLookupsCount = decodeLength(byteArray);\n    const addressTableLookups = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = decodeLength(byteArray);\n      const writableIndexes = guardedSplice(byteArray, 0, writableIndexesLength);\n      const readonlyIndexesLength = decodeLength(byteArray);\n      const readonlyIndexes = guardedSplice(byteArray, 0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes\n      });\n    }\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n}\n\n// eslint-disable-next-line no-redeclare\nconst VersionedMessage = {\n  deserializeMessageVersion(serializedMessage) {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n  deserialize: serializedMessage => {\n    const version = VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(`Transaction message version ${version} deserialization is not supported`);\n    }\n  }\n};\n\n/** @internal */\n\n/**\n * Transaction signature as base-58 encoded string\n */\n\nlet TransactionStatus = /*#__PURE__*/function (TransactionStatus) {\n  TransactionStatus[TransactionStatus[\"BLOCKHEIGHT_EXCEEDED\"] = 0] = \"BLOCKHEIGHT_EXCEEDED\";\n  TransactionStatus[TransactionStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\n  TransactionStatus[TransactionStatus[\"TIMED_OUT\"] = 2] = \"TIMED_OUT\";\n  TransactionStatus[TransactionStatus[\"NONCE_INVALID\"] = 3] = \"NONCE_INVALID\";\n  return TransactionStatus;\n}({});\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\n\n/**\n * Configuration object for Transaction.serialize()\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction Instruction class\n */\nclass TransactionInstruction {\n  constructor(opts) {\n    /**\n     * Public keys to include in this transaction\n     * Boolean represents whether this pubkey needs to sign the transaction\n     */\n    this.keys = void 0;\n    /**\n     * Program Id to execute\n     */\n    this.programId = void 0;\n    /**\n     * Program input\n     */\n    this.data = Buffer.alloc(0);\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      keys: this.keys.map(({\n        pubkey,\n        isSigner,\n        isWritable\n      }) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data]\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction class\n */\nclass Transaction {\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature() {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n\n  // Construct a transaction using a durable nonce\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts) {\n    /**\n     * Signatures for the transaction.  Typically created by invoking the\n     * `sign()` method\n     */\n    this.signatures = [];\n    this.feePayer = void 0;\n    /**\n     * The instructions to atomically execute\n     */\n    this.instructions = [];\n    /**\n     * A recent transaction id. Must be populated by the caller\n     */\n    this.recentBlockhash = void 0;\n    /**\n     * the last block chain can advance to before tx is declared expired\n     * */\n    this.lastValidBlockHeight = void 0;\n    /**\n     * Optional Nonce information. If populated, transaction will use a durable\n     * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n     */\n    this.nonceInfo = void 0;\n    /**\n     * If this is a nonce transaction this represents the minimum slot from which\n     * to evaluate if the nonce has advanced when attempting to confirm the\n     * transaction. This protects against a case where the transaction confirmation\n     * logic loads the nonce account from an old slot and assumes the mismatch in\n     * nonce value implies that the nonce has been advanced.\n     */\n    this.minNonceContextSlot = void 0;\n    /**\n     * @internal\n     */\n    this._message = void 0;\n    /**\n     * @internal\n     */\n    this._json = void 0;\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {\n        minContextSlot,\n        nonceInfo\n      } = opts;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {\n        blockhash,\n        lastValidBlockHeight\n      } = opts;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {\n        recentBlockhash,\n        nonceInfo\n      } = opts;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo ? {\n        nonce: this.nonceInfo.nonce,\n        nonceInstruction: this.nonceInfo.nonceInstruction.toJSON()\n      } : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({\n        publicKey\n      }) => {\n        return publicKey.toJSON();\n      })\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(...items) {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n    items.forEach(item => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage() {\n    if (this._message && JSON.stringify(this.toJSON()) === JSON.stringify(this._json)) {\n      return this._message;\n    }\n    let recentBlockhash;\n    let instructions;\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n    let feePayer;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(`Transaction instruction index ${i} has undefined program id`);\n      }\n    }\n    const programIds = [];\n    const accountMetas = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({\n          ...accountMeta\n        });\n      });\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner = uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower'\n      };\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys = [];\n    const unsignedKeys = [];\n    uniqueMetas.forEach(({\n      pubkey,\n      isSigner,\n      isWritable\n    }) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions = instructions.map(instruction => {\n      const {\n        data,\n        programId\n      } = instruction;\n      return {\n        programIdIndex: accountKeys.indexOf(programId.toString()),\n        accounts: instruction.keys.map(meta => accountKeys.indexOf(meta.pubkey.toString())),\n        data: bs58.encode(data)\n      };\n    });\n    compiledInstructions.forEach(instruction => {\n      assert(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => assert(keyIndex >= 0));\n    });\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile() {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n      if (valid) return message;\n    }\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage() {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection) {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n    const seen = new Set();\n    this.signatures = signers.filter(publicKey => {\n      const key = publicKey.toString();\n      if (seen.has(key)) {\n        return false;\n      } else {\n        seen.add(key);\n        return true;\n      }\n    }).map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey\n    }));\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message, ...signers) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey, signature) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey, signature) {\n    assert(signature.length === 64);\n    const index = this.signatures.findIndex(sigpair => pubkey.equals(sigpair.publicKey));\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures = true) {\n    const signatureErrors = this._getMessageSignednessErrors(this.serializeMessage(), requireAllSignatures);\n    return !signatureErrors;\n  }\n\n  /**\n   * @internal\n   */\n  _getMessageSignednessErrors(message, requireAllSignatures) {\n    const errors = {};\n    for (const {\n      signature,\n      publicKey\n    } of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          (errors.missing ||= []).push(publicKey);\n        }\n      } else {\n        if (!verify(signature, message, publicKey.toBytes())) {\n          (errors.invalid ||= []).push(publicKey);\n        }\n      }\n    }\n    return errors.invalid || errors.missing ? errors : undefined;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config) {\n    const {\n      requireAllSignatures,\n      verifySignatures\n    } = Object.assign({\n      requireAllSignatures: true,\n      verifySignatures: true\n    }, config);\n    const signData = this.serializeMessage();\n    if (verifySignatures) {\n      const sigErrors = this._getMessageSignednessErrors(signData, requireAllSignatures);\n      if (sigErrors) {\n        let errorMessage = 'Signature verification failed.';\n        if (sigErrors.invalid) {\n          errorMessage += `\\nInvalid signature for public key${sigErrors.invalid.length === 1 ? '' : '(s)'} [\\`${sigErrors.invalid.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        if (sigErrors.missing) {\n          errorMessage += `\\nMissing signature for public key${sigErrors.missing.length === 1 ? '' : '(s)'} [\\`${sigErrors.missing.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        throw new Error(errorMessage);\n      }\n    }\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData) {\n    const {\n      signatures\n    } = this;\n    const signatureCount = [];\n    encodeLength(signatureCount, signatures.length);\n    const transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    assert(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({\n      signature\n    }, index) => {\n      if (signature !== null) {\n        assert(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n      }\n    });\n    signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n    assert(wireTransaction.length <= PACKET_DATA_SIZE, `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`);\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const signatureCount = decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(message, signatures = []) {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n        publicKey: message.accountKeys[index]\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(keyObj => keyObj.publicKey.toString() === pubkey.toString()) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account)\n        };\n      });\n      transaction.instructions.push(new TransactionInstruction({\n        keys,\n        programId: message.accountKeys[instruction.programIdIndex],\n        data: bs58.decode(instruction.data)\n      }));\n    });\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n    return transaction;\n  }\n}\nclass TransactionMessage {\n  constructor(args) {\n    this.payerKey = void 0;\n    this.instructions = void 0;\n    this.recentBlockhash = void 0;\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n  static decompile(message, args) {\n    const {\n      header,\n      compiledInstructions,\n      recentBlockhash\n    } = message;\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts\n    } = header;\n    const numWritableSignedAccounts = numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n    const numWritableUnsignedAccounts = message.staticAccountKeys.length - numRequiredSignatures - numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error('Failed to decompile message because no account keys were found');\n    }\n    const instructions = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys = [];\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(`Failed to find key for account key index ${keyIndex}`);\n        }\n        const isSigner = keyIndex < numRequiredSignatures;\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable = keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable = keyIndex - accountKeys.staticAccountKeys.length <\n          // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n          accountKeys.accountKeysFromLookups.writable.length;\n        }\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable\n        });\n      }\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(`Failed to find program id for program id index ${compiledIx.programIdIndex}`);\n      }\n      instructions.push(new TransactionInstruction({\n        programId,\n        data: toBuffer(compiledIx.data),\n        keys\n      }));\n    }\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash\n    });\n  }\n  compileToLegacyMessage() {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions\n    });\n  }\n  compileToV0Message(addressLookupTableAccounts) {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts\n    });\n  }\n}\n\n/**\n * Versioned transaction class\n */\nclass VersionedTransaction {\n  get version() {\n    return this.message.version;\n  }\n  constructor(message, signatures) {\n    this.signatures = void 0;\n    this.message = void 0;\n    if (signatures !== undefined) {\n      assert(signatures.length === message.header.numRequiredSignatures, 'Expected signatures length to be equal to the number of required signatures');\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n  serialize() {\n    const serializedMessage = this.message.serialize();\n    const encodedSignaturesLength = Array();\n    encodeLength(encodedSignaturesLength, this.signatures.length);\n    const transactionLayout = BufferLayout.struct([BufferLayout.blob(encodedSignaturesLength.length, 'encodedSignaturesLength'), BufferLayout.seq(signature(), this.signatures.length, 'signatures'), BufferLayout.blob(serializedMessage.length, 'serializedMessage')]);\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode({\n      encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n      signatures: this.signatures,\n      serializedMessage\n    }, serializedTransaction);\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n  static deserialize(serializedTransaction) {\n    let byteArray = [...serializedTransaction];\n    const signatures = [];\n    const signaturesLength = decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(new Uint8Array(guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES)));\n    }\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n  sign(signers) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(signer.publicKey));\n      assert(signerIndex >= 0, `Cannot sign with non signer key ${signer.publicKey.toBase58()}`);\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n  addSignature(publicKey, signature) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(publicKey));\n    assert(signerIndex >= 0, `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`);\n    this.signatures[signerIndex] = signature;\n  }\n}\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nconst NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nconst DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nconst NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nconst MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\nconst SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nconst SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey('SysvarEpochSchedu1e111111111111111111111111');\nconst SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\nconst SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nconst SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nconst SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nconst SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey('SysvarS1otHashes111111111111111111111111111');\nconst SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey('SysvarS1otHistory11111111111111111111111111');\nconst SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\nclass SendTransactionError extends Error {\n  constructor({\n    action,\n    signature,\n    transactionMessage,\n    logs\n  }) {\n    const maybeLogsOutput = logs ? `Logs: \\n${JSON.stringify(logs.slice(-10), null, 2)}. ` : '';\n    const guideText = '\\nCatch the `SendTransactionError` and call `getLogs()` on it for full details.';\n    let message;\n    switch (action) {\n      case 'send':\n        message = `Transaction ${signature} resulted in an error. \\n` + `${transactionMessage}. ` + maybeLogsOutput + guideText;\n        break;\n      case 'simulate':\n        message = `Simulation failed. \\nMessage: ${transactionMessage}. \\n` + maybeLogsOutput + guideText;\n        break;\n      default:\n        {\n          message = `Unknown action '${(a => a)(action)}'`;\n        }\n    }\n    super(message);\n    this.signature = void 0;\n    this.transactionMessage = void 0;\n    this.transactionLogs = void 0;\n    this.signature = signature;\n    this.transactionMessage = transactionMessage;\n    this.transactionLogs = logs ? logs : undefined;\n  }\n  get transactionError() {\n    return {\n      message: this.transactionMessage,\n      logs: Array.isArray(this.transactionLogs) ? this.transactionLogs : undefined\n    };\n  }\n\n  /* @deprecated Use `await getLogs()` instead */\n  get logs() {\n    const cachedLogs = this.transactionLogs;\n    if (cachedLogs != null && typeof cachedLogs === 'object' && 'then' in cachedLogs) {\n      return undefined;\n    }\n    return cachedLogs;\n  }\n  async getLogs(connection) {\n    if (!Array.isArray(this.transactionLogs)) {\n      this.transactionLogs = new Promise((resolve, reject) => {\n        connection.getTransaction(this.signature).then(tx => {\n          if (tx && tx.meta && tx.meta.logMessages) {\n            const logs = tx.meta.logMessages;\n            this.transactionLogs = logs;\n            resolve(logs);\n          } else {\n            reject(new Error('Log messages not found'));\n          }\n        }).catch(reject);\n      });\n    }\n    return await this.transactionLogs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016\n};\nclass SolanaJSONRPCError extends Error {\n  constructor({\n    code,\n    message,\n    data\n  }, customMessage) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = void 0;\n    this.data = void 0;\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmTransaction(connection, transaction, signers, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendTransaction(transaction, signers, sendOptions);\n  let status;\n  if (transaction.recentBlockhash != null && transaction.lastValidBlockHeight != null) {\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      signature: signature,\n      blockhash: transaction.recentBlockhash,\n      lastValidBlockHeight: transaction.lastValidBlockHeight\n    }, options && options.commitment)).value;\n  } else if (transaction.minNonceContextSlot != null && transaction.nonceInfo != null) {\n    const {\n      nonceInstruction\n    } = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      minContextSlot: transaction.minNonceContextSlot,\n      nonceAccountPubkey,\n      nonceValue: transaction.nonceInfo.nonce,\n      signature\n    }, options && options.commitment)).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn('sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' + 'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' + 'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.');\n    }\n    status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n  }\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: 'send',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`\n      });\n    }\n    throw new Error(`Transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * @internal\n */\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nfunction encodeData(type, fields) {\n  const allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nfunction decodeData$1(type, buffer) {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (data.instruction !== type.index) {\n    throw new Error(`invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`);\n  }\n  return data;\n}\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nconst FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([BufferLayout.u32('version'), BufferLayout.u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator')]);\nconst NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\n\n/**\n * NonceAccount class\n */\nclass NonceAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.authorizedPubkey = void 0;\n    this.nonce = void 0;\n    this.feeCalculator = void 0;\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(buffer) {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator\n    });\n  }\n}\nconst encodeDecode = layout => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {\n    decode,\n    encode\n  };\n};\nconst bigInt = length => property => {\n  const layout = blob(length, property);\n  const {\n    encode,\n    decode\n  } = encodeDecode(layout);\n  const bigIntLayout = layout;\n  bigIntLayout.decode = (buffer, offset) => {\n    const src = decode(buffer, offset);\n    return toBigIntLE(Buffer.from(src));\n  };\n  bigIntLayout.encode = (bigInt, buffer, offset) => {\n    const src = toBufferLE(bigInt, length);\n    return encode(src, buffer, offset);\n  };\n  return bigIntLayout;\n};\nconst u64 = bigInt(8);\n\n/**\n * Create account system transaction params\n */\n\n/**\n * Transfer system transaction params\n */\n\n/**\n * Assign system transaction params\n */\n\n/**\n * Create account with seed system transaction params\n */\n\n/**\n * Create nonce account system transaction params\n */\n\n/**\n * Create nonce account with seed system transaction params\n */\n\n/**\n * Initialize nonce account system instruction params\n */\n\n/**\n * Advance nonce account system instruction params\n */\n\n/**\n * Withdraw nonce account system transaction params\n */\n\n/**\n * Authorize nonce account system transaction params\n */\n\n/**\n * Allocate account system transaction params\n */\n\n/**\n * Allocate account with seed system transaction params\n */\n\n/**\n * Assign account with seed system transaction params\n */\n\n/**\n * Transfer with seed system transaction params\n */\n\n/** Decoded transfer system transaction instruction */\n\n/** Decoded transferWithSeed system transaction instruction */\n\n/**\n * System Instruction class\n */\nclass SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      space\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      base,\n      seed,\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nconst SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports'), rustString('seed'), publicKey('programId')])\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nclass SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: true,\n        isWritable: true\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports)\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    let keys = [{\n      pubkey: params.fromPubkey,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: params.newAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }];\n    if (!params.basePubkey.equals(params.fromPubkey)) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(params) {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    } else {\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    }\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey\n    };\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer())\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {\n      lamports: params.lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nSystemProgram.programId = new PublicKey('11111111111111111111111111111111');\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nclass Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return 2 * (\n    // Every transaction requires two signatures (payer + program)\n    Math.ceil(dataLength / Loader.chunkSize) + 1 +\n    // Add one for Create transaction\n    1) // Add one for Finalize transaction\n    ;\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(connection, payer, program, programId, data) {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(data.length);\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(program.publicKey, 'confirmed');\n      let transaction = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.allocate({\n            accountPubkey: program.publicKey,\n            space: data.length\n          }));\n        }\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.assign({\n            accountPubkey: program.publicKey,\n            programId\n          }));\n        }\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: program.publicKey,\n            lamports: balanceNeeded - programInfo.lamports\n          }));\n        }\n      } else {\n        transaction = new Transaction().add(SystemProgram.createAccount({\n          fromPubkey: payer.publicKey,\n          newAccountPubkey: program.publicKey,\n          lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n          space: data.length,\n          programId\n        }));\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed'\n        });\n      }\n    }\n    const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.u32('offset'), BufferLayout.u32('bytesLength'), BufferLayout.u32('bytesLengthPadding'), BufferLayout.seq(BufferLayout.u8('byte'), BufferLayout.offset(BufferLayout.u32(), -8), 'bytes')]);\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode({\n        instruction: 0,\n        // Load instruction\n        offset,\n        bytes: bytes,\n        bytesLength: 0,\n        bytesLengthPadding: 0\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId,\n        data\n      });\n      transactions.push(sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      }));\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // Finalize instruction\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId,\n        data\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(transaction, [payer, program], {\n        preflightCommitment: deployCommitment\n      });\n      const {\n        context,\n        value\n      } = await connection.confirmTransaction({\n        signature: finalizeSignature,\n        lastValidBlockHeight: transaction.lastValidBlockHeight,\n        blockhash: transaction.recentBlockhash\n      }, deployCommitment);\n      if (value.err) {\n        throw new Error(`Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`);\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve => setTimeout(resolve, Math.round(MS_PER_SLOT / 2)));\n      }\n    }\n\n    // success\n    return true;\n  }\n}\nLoader.chunkSize = CHUNK_SIZE;\n\n/**\n * @deprecated Deprecated since Solana v1.17.20.\n */\nconst BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n\n/**\n * Factory class for transactions to interact with a program loader\n *\n * @deprecated Deprecated since Solana v1.17.20.\n */\nclass BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(connection, payer, program, elf, loaderProgramId) {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\nvar fastStableStringify$1;\nvar hasRequiredFastStableStringify;\nfunction requireFastStableStringify() {\n  if (hasRequiredFastStableStringify) return fastStableStringify$1;\n  hasRequiredFastStableStringify = 1;\n  var objToString = Object.prototype.toString;\n  var objKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var name in obj) {\n      keys.push(name);\n    }\n    return keys;\n  };\n  function stringify(val, isArrayProp) {\n    var i, max, str, keys, key, propVal, toStr;\n    if (val === true) {\n      return \"true\";\n    }\n    if (val === false) {\n      return \"false\";\n    }\n    switch (typeof val) {\n      case \"object\":\n        if (val === null) {\n          return null;\n        } else if (val.toJSON && typeof val.toJSON === \"function\") {\n          return stringify(val.toJSON(), isArrayProp);\n        } else {\n          toStr = objToString.call(val);\n          if (toStr === \"[object Array]\") {\n            str = '[';\n            max = val.length - 1;\n            for (i = 0; i < max; i++) {\n              str += stringify(val[i], true) + ',';\n            }\n            if (max > -1) {\n              str += stringify(val[i], true);\n            }\n            return str + ']';\n          } else if (toStr === \"[object Object]\") {\n            // only object is left\n            keys = objKeys(val).sort();\n            max = keys.length;\n            str = \"\";\n            i = 0;\n            while (i < max) {\n              key = keys[i];\n              propVal = stringify(val[key], false);\n              if (propVal !== undefined) {\n                if (str) {\n                  str += ',';\n                }\n                str += JSON.stringify(key) + ':' + propVal;\n              }\n              i++;\n            }\n            return '{' + str + '}';\n          } else {\n            return JSON.stringify(val);\n          }\n        }\n      case \"function\":\n      case \"undefined\":\n        return isArrayProp ? null : undefined;\n      case \"string\":\n        return JSON.stringify(val);\n      default:\n        return isFinite(val) ? val : null;\n    }\n  }\n  fastStableStringify$1 = function (val) {\n    var returnVal = stringify(val, false);\n    if (returnVal !== undefined) {\n      return '' + returnVal;\n    }\n  };\n  return fastStableStringify$1;\n}\nvar fastStableStringifyExports = /*@__PURE__*/requireFastStableStringify();\nvar fastStableStringify = /*@__PURE__*/getDefaultExportFromCjs(fastStableStringifyExports);\nconst MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nclass EpochSchedule {\n  constructor(slotsPerEpoch, leaderScheduleSlotOffset, warmup, firstNormalEpoch, firstNormalSlot) {\n    /** The maximum number of slots in each epoch */\n    this.slotsPerEpoch = void 0;\n    /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n    this.leaderScheduleSlotOffset = void 0;\n    /** Indicates whether epochs start short and grow */\n    this.warmup = void 0;\n    /** The first epoch with `slotsPerEpoch` slots */\n    this.firstNormalEpoch = void 0;\n    /** The first slot of `firstNormalEpoch` */\n    this.firstNormalSlot = void 0;\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n  getEpoch(slot) {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n  getEpochAndSlotIndex(slot) {\n    if (slot < this.firstNormalSlot) {\n      const epoch = trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) - trailingZeros(MINIMUM_SLOT_PER_EPOCH) - 1;\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n  getFirstSlotInEpoch(epoch) {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (epoch - this.firstNormalEpoch) * this.slotsPerEpoch + this.firstNormalSlot;\n    }\n  }\n  getLastSlotInEpoch(epoch) {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n  getSlotsInEpoch(epoch) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\nvar fetchImpl = globalThis.fetch;\nclass RpcWebSocketClient extends CommonClient {\n  constructor(address, options, generate_request_id) {\n    const webSocketFactory = url => {\n      const rpc = WebSocket(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket;\n      } else {\n        this.underlyingSocket = rpc;\n      }\n      return rpc;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n    this.underlyingSocket = void 0;\n  }\n  call(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(new Error('Tried to call a JSON-RPC method `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n  notify(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(new Error('Tried to send a JSON-RPC notification `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n}\n\n/**\n * @internal\n */\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nfunction decodeData(type, data) {\n  let decoded;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(`invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`);\n  }\n  return decoded;\n}\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\nclass AddressLookupTableAccount {\n  constructor(args) {\n    this.key = void 0;\n    this.state = void 0;\n    this.key = args.key;\n    this.state = args.state;\n  }\n  isActive() {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n  static deserialize(accountData) {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {\n      addresses\n    } = BufferLayout.struct([BufferLayout.seq(publicKey(), numSerializedAddresses, 'addresses')]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority: meta.authority.length !== 0 ? new PublicKey(meta.authority[0]) : undefined,\n      addresses: addresses.map(address => new PublicKey(address))\n    };\n  }\n}\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct([BufferLayout.u32('typeIndex'), u64('deactivationSlot'), BufferLayout.nu64('lastExtendedSlot'), BufferLayout.u8('lastExtendedStartIndex'), BufferLayout.u8(),\n  // option\n  BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u8(), -1), 'authority')])\n};\nconst URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\nfunction makeWebsocketUrl(endpoint) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [_,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  hostish, portWithColon, rest] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort = portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explicitly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to agave-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\nconst PublicKeyFromString = coerce(instance(PublicKey), string(), value => new PublicKey(value));\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\nconst BufferFromRawAccountData = coerce(instance(Buffer), RawAccountDataResult, value => Buffer.from(value[0], 'base64'));\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nconst BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\n\n/** @internal */\n/** @internal */\n/** @internal */\n/** @internal */\n\n/** @internal */\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\n\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\n\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\n\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\n\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\n\n/**\n * @internal\n */\n\n/**\n * Extra contextual information for RPC responses\n */\n\n/**\n * Options for sending transactions\n */\n\n/**\n * Options for confirming transactions\n */\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\n\n/**\n * Options for getSignaturesForAddress\n */\n\n/**\n * RPC Response with extra contextual information\n */\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\n\n/**\n * This type represents all transaction confirmation strategies\n */\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig(commitmentOrConfig) {\n  let commitment;\n  let config;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {\n      commitment: specifiedCommitment,\n      ...specifiedConfig\n    } = commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {\n    commitment,\n    config\n  };\n}\n\n/**\n * @internal\n */\nfunction applyDefaultMemcmpEncodingToFilters(filters) {\n  return filters.map(filter => 'memcmp' in filter ? {\n    ...filter,\n    memcmp: {\n      ...filter.memcmp,\n      encoding: filter.memcmp.encoding ?? 'base58'\n    }\n  } : filter);\n}\n\n/**\n * @internal\n */\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(version, response) {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(accountKey => new PublicKey(accountKey)),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data)\n      })),\n      addressTableLookups: response.addressTableLookups\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n// Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\n\n/**\n * Configuration object for changing query behavior\n */\n\n/**\n * Information describing a cluster node\n */\n\n/**\n * Information describing a vote account\n */\n\n/**\n * A collection of cluster vote accounts\n */\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\n\nconst GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n\n/**\n * The inflation reward for an epoch\n */\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(array(nullable(type({\n  epoch: number(),\n  effectiveSlot: number(),\n  amount: number(),\n  postBalance: number(),\n  commission: optional(nullable(number()))\n}))));\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(type({\n  slot: number(),\n  prioritizationFee: number()\n}));\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = type({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number()\n});\n\n/**\n * Information about the current epoch\n */\n\nconst GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\nconst GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([type({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = type({\n  err: TransactionErrorResult\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\n\nconst VersionResult = type({\n  'solana-core': string(),\n  'feature-set': optional(number())\n});\nconst ParsedInstructionStruct = type({\n  program: string(),\n  programId: PublicKeyFromString,\n  parsed: unknown()\n});\nconst PartiallyDecodedInstructionStruct = type({\n  programId: PublicKeyFromString,\n  accounts: array(PublicKeyFromString),\n  data: string()\n});\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(nullable(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  }))))),\n  unitsConsumed: optional(number()),\n  returnData: optional(nullable(type({\n    programId: string(),\n    data: tuple([string(), literal('base64')])\n  }))),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(union([ParsedInstructionStruct, PartiallyDecodedInstructionStruct]))\n  }))))\n}));\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction message from the RPC API\n */\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\n\n/**\n * A partially decoded transaction instruction\n */\n\n/**\n * A parsed transaction message account\n */\n\n/**\n * A parsed transaction instruction\n */\n\n/**\n * A parsed address table lookup\n */\n\n/**\n * A parsed transaction message\n */\n\n/**\n * A parsed transaction\n */\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\n\n/**\n * A parsed transaction on the ledger with meta\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A block with parsed transactions\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\n\n/**\n * A Block on the ledger with signatures only\n */\n\n/**\n * recent block production information\n */\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(type({\n  byIdentity: record(string(), array(number())),\n  range: type({\n    firstSlot: number(),\n    lastSlot: number()\n  })\n}));\n\n/**\n * A performance sample\n */\n\nfunction createRpcClient(url, httpHeaders, customFetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent) {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent;\n  {\n    if (httpAgent != null) {\n      console.warn('You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' + 'It has been ignored; `httpAgent` is only used in Node environments.');\n    }\n  }\n  let fetchWithMiddleware;\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise((resolve, reject) => {\n        try {\n          fetchMiddleware(info, init, (modifiedInfo, modifiedInit) => resolve([modifiedInfo, modifiedInit]));\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign({\n        'Content-Type': 'application/json'\n      }, httpHeaders || {}, COMMON_HTTP_HEADERS)\n    };\n    try {\n      let too_many_requests_retries = 5;\n      let res;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.error(`Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`);\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n  return clientBrowser;\n}\nfunction createRpcRequest(client) {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\nfunction createRpcBatchRequest(client) {\n  return requests => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n      const batch = requests.map(params => {\n        return client.request(params.methodName, params.args);\n      });\n      client.request(batch, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(GetRecentPrioritizationFeesResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = type({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n});\n\n/**\n * Token address and balance.\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nconst ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n\n/**\n * Pair of an account address and its balance\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n\n/**\n * @internal\n */\nconst AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nconst ParsedOrRawAccountData = coerce(union([instance(Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), value => {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nconst KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([type({\n  type: union([literal('firstShredReceived'), literal('completed'), literal('optimisticConfirmation'), literal('root')]),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('createdBank'),\n  parent: number(),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  stats: type({\n    numTransactionEntries: number(),\n    numSuccessfulTransactions: number(),\n    numFailedTransactions: number(),\n    maxTransactionsPerEntry: number()\n  })\n}), type({\n  type: literal('dead'),\n  slot: number(),\n  timestamp: number(),\n  err: string()\n})]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureStatusResult, SignatureReceivedResult]))\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nconst ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nconst VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nconst ConfirmationStatus = union([literal('processed'), literal('confirmed'), literal('finalized')]);\nconst SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus)\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\nconst AddressTableLookupStruct = type({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number())\n});\nconst ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct))\n  })\n});\nconst AnnotatedAccountKey = type({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')]))\n});\nconst ConfirmedTransactionAccountsModeResult = type({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string())\n});\nconst ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nconst RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nconst InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nconst UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nconst ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, value => {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct)))\n  })\n});\nconst TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  programId: optional(string()),\n  uiTokenAmount: TokenAmountResult\n});\nconst LoadedAddressesResult = type({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString)\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = type({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number()))\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ParsedConfirmedTransactionResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  signatures: array(string()),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  meta: nullable(ConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  transaction: ConfirmedTransactionResult,\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  lastValidBlockHeight: number()\n}));\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\nconst PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\n\n/**\n * Parsed account data\n */\n\n/**\n * Stake Activation data\n */\n\n/**\n * Data slice argument for getProgramAccounts\n */\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\n\n/**\n * A filter object for getProgramAccounts\n */\n\n/**\n * Configuration object for getProgramAccounts requests\n */\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\n\n/**\n * Configuration object for getMultipleAccounts\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getNonce`\n */\n\n/**\n * Configuration object for `getNonceAndContext`\n */\n\n/**\n * Information describing an account\n */\n\n/**\n * Account information identified by pubkey\n */\n\n/**\n * Callback function for account change notifications\n */\n\n/**\n * Callback function for program account change notifications\n */\n\n/**\n * Callback function for slot change notifications\n */\n\n/**\n * Callback function for slot update notifications\n */\n\n/**\n * Callback function for signature status notifications\n */\n\n/**\n * Signature status notification with transaction result\n */\n\n/**\n * Signature received notification\n */\n\n/**\n * Callback function for signature notifications\n */\n\n/**\n * Signature subscription options\n */\n\n/**\n * Callback function for root change notifications\n */\n\n/**\n * @internal\n */\nconst LogsResult = type({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string()\n});\n\n/**\n * Logs result.\n */\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = type({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number()\n});\n\n/**\n * Filter for log subscriptions.\n */\n\n/**\n * Callback function for log notifications.\n */\n\n/**\n * Signature result\n */\n\n/**\n * Transaction error\n */\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Signature status\n */\n\n/**\n * A confirmed signature with its status\n */\n\n/**\n * An object defining headers to be passed to the RPC server\n */\n\n/**\n * The type of the JavaScript `fetch()` API\n */\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\n\n/**\n * Configuration for instantiating a Connection\n */\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${\"1.0.0-maintenance\"}`\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nclass Connection {\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(endpoint, _commitmentOrConfig) {\n    /** @internal */\n    this._commitment = void 0;\n    /** @internal */\n    this._confirmTransactionInitialTimeout = void 0;\n    /** @internal */\n    this._rpcEndpoint = void 0;\n    /** @internal */\n    this._rpcWsEndpoint = void 0;\n    /** @internal */\n    this._rpcClient = void 0;\n    /** @internal */\n    this._rpcRequest = void 0;\n    /** @internal */\n    this._rpcBatchRequest = void 0;\n    /** @internal */\n    this._rpcWebSocket = void 0;\n    /** @internal */\n    this._rpcWebSocketConnected = false;\n    /** @internal */\n    this._rpcWebSocketHeartbeat = null;\n    /** @internal */\n    this._rpcWebSocketIdleTimeout = null;\n    /** @internal\n     * A number that we increment every time an active connection closes.\n     * Used to determine whether the same socket connection that was open\n     * when an async operation started is the same one that's active when\n     * its continuation fires.\n     *\n     */\n    this._rpcWebSocketGeneration = 0;\n    /** @internal */\n    this._disableBlockhashCaching = false;\n    /** @internal */\n    this._pollingBlockhash = false;\n    /** @internal */\n    this._blockhashInfo = {\n      latestBlockhash: null,\n      lastFetch: 0,\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    /** @internal */\n    this._nextClientSubscriptionId = 0;\n    /** @internal */\n    this._subscriptionDisposeFunctionsByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionHashByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionStateChangeCallbacksByHash = {};\n    /** @internal */\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    /** @internal */\n    this._subscriptionsByHash = {};\n    /**\n     * Special case.\n     * After a signature is processed, RPCs automatically dispose of the\n     * subscription on the server side. We need to track which of these\n     * subscriptions have been disposed in such a way, so that we know\n     * whether the client is dealing with a not-yet-processed signature\n     * (in which case we must tear down the server subscription) or an\n     * already-processed signature (in which case the client can simply\n     * clear out the subscription locally without telling the server).\n     *\n     * NOTE: There is a proposal to eliminate this special case, here:\n     * https://github.com/solana-labs/solana/issues/18892\n     */\n    /** @internal */\n    this._subscriptionsAutoDisposedByRpc = new Set();\n    /*\n     * Returns the current block height of the node\n     */\n    this.getBlockHeight = (() => {\n      const requestPromises = {};\n      return async commitmentOrConfig => {\n        const {\n          commitment,\n          config\n        } = extractCommitmentFromConfig(commitmentOrConfig);\n        const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n        const requestHash = fastStableStringify(args);\n        requestPromises[requestHash] = requestPromises[requestHash] ?? (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(res.error, 'failed to get block height information');\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n        return await requestPromises[requestHash];\n      };\n    })();\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (_commitmentOrConfig && typeof _commitmentOrConfig === 'string') {\n      this._commitment = _commitmentOrConfig;\n    } else if (_commitmentOrConfig) {\n      this._commitment = _commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout = _commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = _commitmentOrConfig.wsEndpoint;\n      httpHeaders = _commitmentOrConfig.httpHeaders;\n      fetch = _commitmentOrConfig.fetch;\n      fetchMiddleware = _commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = _commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = _commitmentOrConfig.httpAgent;\n    }\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n    this._rpcClient = createRpcClient(endpoint, httpHeaders, fetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent);\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n    this._rpcWebSocket.on('logsNotification', this._wsOnLogsNotification.bind(this));\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment() {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint() {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(publicKey, commitmentOrConfig) {\n    /** @internal */\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get balance for ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(publicKey, commitmentOrConfig) {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot) {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get block time for slot ${slot}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot() {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get minimum ledger slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock() {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get first available block');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(config) {\n    let configArg = {};\n    if (typeof config === 'string') {\n      configArg = {\n        commitment: config\n      };\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: config && config.commitment || this.commitment\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment\n      };\n    }\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(tokenMintAddress, commitment) {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(tokenAddress, commitment) {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token account balance');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(ownerAddress, filter, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(config) {\n    const arg = {\n      ...config,\n      commitment: config && config.commitment || this.commitment\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(mintAddress, commitment) {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(publicKey, commitmentOrConfig) {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + e);\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(publicKeys, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(AccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(publicKeys, commitmentOrConfig) {\n    const res = await this.getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig);\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   *\n   * @deprecated Deprecated since RPC v1.18; will be removed in a future version.\n   */\n  async getStakeActivation(publicKey, commitmentOrConfig, epoch) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get Stake Activation ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const {\n      encoding,\n      ...configWithoutEncoding\n    } = config || {};\n    const args = this._buildArgs([programId.toBase58()], commitment, encoding || 'base64', {\n      ...configWithoutEncoding,\n      ...(configWithoutEncoding.filters ? {\n        filters: applyDefaultMemcmpEncodingToFilters(configWithoutEncoding.filters)\n      } : null)\n    });\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res = configWithoutEncoding.withContext === true ? create(unsafeRes, jsonRpcResultAndContext(baseSchema)) : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(strategy, commitment) {\n    let rawSignature;\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy;\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    }\n  }\n  getCancellationPromise(signal) {\n    return new Promise((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n  getTransactionConfirmationPromise({\n    commitment,\n    signature\n  }) {\n    let signatureSubscriptionId;\n    let disposeSignatureSubscriptionStateChangeObserver;\n    let done = false;\n    const confirmationPromise = new Promise((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(signature, (result, context) => {\n          signatureSubscriptionId = undefined;\n          const response = {\n            context,\n            value: result\n          };\n          resolve({\n            __type: TransactionStatus.PROCESSED,\n            response\n          });\n        }, commitment);\n        const subscriptionSetupPromise = new Promise(resolveSubscriptionSetup => {\n          if (signatureSubscriptionId == null) {\n            resolveSubscriptionSetup();\n          } else {\n            disposeSignatureSubscriptionStateChangeObserver = this._onSubscriptionStateChange(signatureSubscriptionId, nextState => {\n              if (nextState === 'subscribed') {\n                resolveSubscriptionSetup();\n              }\n            });\n          }\n        });\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {\n            context,\n            value\n          } = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip':\n                {\n                  if (value.confirmationStatus === 'processed') {\n                    return;\n                  }\n                  break;\n                }\n              case 'finalized':\n              case 'max':\n              case 'root':\n                {\n                  if (value.confirmationStatus === 'processed' || value.confirmationStatus === 'confirmed') {\n                    return;\n                  }\n                  break;\n                }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value\n              }\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {\n      abortConfirmation,\n      confirmationPromise\n    };\n  }\n  async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      lastValidBlockHeight,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({\n          __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED\n        });\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      let currentNonceValue = nonceValue;\n      let lastCheckedSlot = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {\n            context,\n            value: nonceAccount\n          } = await this.getNonceAndContext(nonceAccountPubkey, {\n            commitment,\n            minContextSlot\n          });\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (status.context.slot < (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {\n            confirmationStatus\n          } = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (confirmationStatus !== 'processed' && confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              (_ => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {\n              err: signatureStatus.value.err\n            }\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip':\n          {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n      }\n      timeoutId = setTimeout(() => resolve({\n        __type: TransactionStatus.TIMED_OUT,\n        timeoutMs\n      }), timeoutMs);\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    let result;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(signature, outcome.timeoutMs / 1000);\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes() {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(startSlot, limit) {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(signature, config) {\n    const {\n      context,\n      value: values\n    } = await this.getSignatureStatuses([signature], config);\n    assert(values.length === 1);\n    const value = values[0];\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(signatures, config) {\n    const params = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction count');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since RPC v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment) {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(addresses, epoch, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([addresses.map(pubkey => pubkey.toBase58())], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate() {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule() {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(epochSchedule.slotsPerEpoch, epochSchedule.leaderScheduleSlotOffset, epochSchedule.warmup, epochSchedule.firstNormalEpoch, epochSchedule.firstNormalSlot);\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule() {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(dataLength, commitment) {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest('getMinimumBalanceForRentExemption', args);\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment) {\n    const {\n      context,\n      value: {\n        blockhash\n      }\n    } = await this.getLatestBlockhashAndContext(commitment);\n    const feeCalculator = {\n      get lamportsPerSignature() {\n        throw new Error('The capability to fetch `lamportsPerSignature` using the `getRecentBlockhash` API is ' + 'no longer offered by the network. Use the `getFeeForMessage` API to obtain the fee ' + 'for a given message.');\n      },\n      toJSON() {\n        return {};\n      }\n    };\n    return {\n      context,\n      value: {\n        blockhash,\n        feeCalculator\n      }\n    };\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(limit) {\n    const unsafeRes = await this._rpcRequest('getRecentPerformanceSamples', limit ? [limit] : []);\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent performance samples');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(blockhash, commitment) {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeCalculatorForBlockhash', args);\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {\n      context,\n      value\n    } = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(message, commitment) {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(config) {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest('getRecentPrioritizationFees', args);\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent prioritization fees');\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since RPC v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(commitment) {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(commitmentOrConfig) {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(blockhash, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs([blockhash], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to determine if the blockhash `' + blockhash + '`is valid');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion() {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash() {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            const {\n              result\n            } = res;\n            return result ? {\n              ...result,\n              transactions: result.transactions.map(({\n                transaction,\n                meta,\n                version\n              }) => ({\n                meta,\n                transaction: {\n                  ...transaction,\n                  message: versionedMessageFromResponse(version, transaction.message)\n                },\n                version\n              }))\n            } : null;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get confirmed block');\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetParsedBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get block');\n    }\n  }\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(configOrCommitment) {\n    let extra;\n    let commitment;\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {\n        commitment: c,\n        ...rest\n      } = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block production information');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(signature, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(result.version, result.transaction.message)\n      }\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(signature, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(result.version, result.transaction.message)\n        }\n      };\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message\n          }\n        };\n      })\n    };\n    return {\n      ...block,\n      transactions: block.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        return {\n          meta,\n          transaction: Transaction.populate(transaction.message, transaction.signatures)\n        };\n      })\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(startSlot, endSlot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed(endSlot !== undefined ? [startSlot, endSlot] : [startSlot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures)\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since RPC v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(address, startSlot, endSlot) {\n    let options = {};\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(startSlot, 'finalized');\n        if (block.signatures.length > 0) {\n          options.until = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(address, options);\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getSignaturesForAddress} instead.\n   */\n  async getConfirmedSignaturesForAddress2(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getConfirmedSignaturesForAddress2', args);\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed signatures for address');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signatures for address');\n    }\n    return res.result;\n  }\n  async getAddressLookupTable(accountKey, config) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(accountKey, config);\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data)\n      });\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(nonceAccount, commitmentOrConfig) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(nonceAccount, commitmentOrConfig);\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(nonceAccount, commitmentOrConfig) {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(to, lamports) {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to.toBase58(), lamports]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `airdrop to ${to.toBase58()} failed`);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(disableCache) {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash() {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash ? cachedLatestBlockhash.blockhash : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: []\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n      throw new Error(`Unable to obtain a new blockhash after ${Date.now() - startTime}ms`);\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(config) {\n    const {\n      commitment,\n      config: configArg\n    } = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get stake minimum delegation`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(transactionOrMessage, configOrSigners, includeAccounts) {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction = Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n      const config = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n      if (configOrSigners && typeof configOrSigners === 'object' && 'innerInstructions' in configOrSigners) {\n        config.innerInstructions = configOrSigners.innerInstructions;\n      }\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        if (!signers) break;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = {\n      encoding: 'base64',\n      commitment: this.commitment\n    };\n    if (includeAccounts) {\n      const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses\n      };\n    }\n    if (signers) {\n      config.sigVerify = true;\n    }\n    if (configOrSigners && typeof configOrSigners === 'object' && 'innerInstructions' in configOrSigners) {\n      config.innerInstructions = configOrSigners.innerInstructions;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError({\n        action: 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(transaction, signersOrOptions, options) {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(rawTransaction, options) {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(encodedTransaction, options);\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(encodedTransaction, options) {\n    const config = {\n      encoding: 'base64'\n    };\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment = skipPreflight === true ? 'processed' // FIXME Remove when https://github.com/anza-xyz/agave/pull/483 is deployed.\n    : options && options.preflightCommitment || this.commitment;\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs = undefined;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError({\n        action: skipPreflight ? 'send' : 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration = (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(this._subscriptionsByHash).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending'\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _setSubscription(hash, nextSubscription) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSubscriptionStateChange(clientSubscriptionId, callback) {\n    const hash = this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash] ||= new Set();\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(`Error when closing socket connection: ${err.message}`);\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n    await Promise.all(\n    // Don't be tempted to change this to `Object.entries`. We call\n    // `_updateSubscriptions` recursively when processing the state,\n    // so it's important that we look up the *current* version of\n    // each subscription, every time we process a hash.\n    Object.keys(this._subscriptionsByHash).map(async hash => {\n      const subscription = this._subscriptionsByHash[hash];\n      if (subscription === undefined) {\n        // This entry has since been deleted. Skip.\n        return;\n      }\n      switch (subscription.state) {\n        case 'pending':\n        case 'unsubscribed':\n          if (subscription.callbacks.size === 0) {\n            /**\n             * You can end up here when:\n             *\n             * - a subscription has recently unsubscribed\n             *   without having new callbacks added to it\n             *   while the unsubscribe was in flight, or\n             * - when a pending subscription has its\n             *   listeners removed before a request was\n             *   sent to the server.\n             *\n             * Being that nobody is interested in this\n             * subscription any longer, delete it.\n             */\n            delete this._subscriptionsByHash[hash];\n            if (subscription.state === 'unsubscribed') {\n              delete this._subscriptionCallbacksByServerSubscriptionId[subscription.serverSubscriptionId];\n            }\n            await this._updateSubscriptions();\n            return;\n          }\n          await (async () => {\n            const {\n              args,\n              method\n            } = subscription;\n            try {\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'subscribing'\n              });\n              const serverSubscriptionId = await this._rpcWebSocket.call(method, args);\n              this._setSubscription(hash, {\n                ...subscription,\n                serverSubscriptionId,\n                state: 'subscribed'\n              });\n              this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId] = subscription.callbacks;\n              await this._updateSubscriptions();\n            } catch (e) {\n              console.error(`Received ${e instanceof Error ? '' : 'JSON-RPC '}error calling \\`${method}\\``, {\n                args,\n                error: e\n              });\n              if (!isCurrentConnectionStillActive()) {\n                return;\n              }\n              // TODO: Maybe add an 'errored' state or a retry limit?\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'pending'\n              });\n              await this._updateSubscriptions();\n            }\n          })();\n          break;\n        case 'subscribed':\n          if (subscription.callbacks.size === 0) {\n            // By the time we successfully set up a subscription\n            // with the server, the client stopped caring about it.\n            // Tear it down now.\n            await (async () => {\n              const {\n                serverSubscriptionId,\n                unsubscribeMethod\n              } = subscription;\n              if (this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)) {\n                /**\n                 * Special case.\n                 * If we're dealing with a subscription that has been auto-\n                 * disposed by the RPC, then we can skip the RPC call to\n                 * tear down the subscription here.\n                 *\n                 * NOTE: There is a proposal to eliminate this special case, here:\n                 * https://github.com/solana-labs/solana/issues/18892\n                 */\n                this._subscriptionsAutoDisposedByRpc.delete(serverSubscriptionId);\n              } else {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                try {\n                  await this._rpcWebSocket.call(unsubscribeMethod, [serverSubscriptionId]);\n                } catch (e) {\n                  if (e instanceof Error) {\n                    console.error(`${unsubscribeMethod} error:`, e.message);\n                  }\n                  if (!isCurrentConnectionStillActive()) {\n                    return;\n                  }\n                  // TODO: Maybe add an 'errored' state or a retry limit?\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'subscribed'\n                  });\n                  await this._updateSubscriptions();\n                  return;\n                }\n              }\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'unsubscribed'\n              });\n              await this._updateSubscriptions();\n            })();\n          }\n          break;\n      }\n    }));\n  }\n\n  /**\n   * @internal\n   */\n  _handleServerNotification(serverSubscriptionId, callbackArgs) {\n    const callbacks = this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n        // I failed to find a way to convince TypeScript that `cb` is of type\n        // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n        // See https://github.com/microsoft/TypeScript/issues/47615\n        // @ts-ignore\n        ...callbackArgs);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, AccountNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _makeSubscription(subscriptionConfig,\n  /**\n   * When preparing `args` for a call to `_makeSubscription`, be sure\n   * to carefully apply a default `commitment` property, if necessary.\n   *\n   * - If the user supplied a `commitment` use that.\n   * - Otherwise, if the `Connection::commitment` is set, use that.\n   * - Otherwise, set it to the RPC server default: `finalized`.\n   *\n   * This is extremely important to ensure that these two fundamentally\n   * identical subscriptions produce the same identifying hash:\n   *\n   * - A subscription made without specifying a commitment.\n   * - A subscription made where the commitment specified is the same\n   *   as the default applied to the subscription above.\n   *\n   * Example; these two subscriptions must produce the same hash:\n   *\n   * - An `accountSubscribe` subscription for `'PUBKEY'`\n   * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n   *   `'finalized'`.\n   *\n   * See the 'making a subscription with defaulted params omitted' test\n   * in `connection-subscriptions.ts` for more.\n   */\n  args) {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify([subscriptionConfig.method, args]);\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending'\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(subscription !== undefined, `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`);\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n\n  /** @deprecated Instead, pass in an {@link AccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  onAccountChange(publicKey, callback, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64', config);\n    return this._makeSubscription({\n      callback,\n      method: 'accountSubscribe',\n      unsubscribeMethod: 'accountUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'account change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, ProgramAccountNotificationResult);\n    this._handleServerNotification(subscription, [{\n      accountId: result.value.pubkey,\n      accountInfo: result.value.account\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n\n  /** @deprecated Instead, pass in a {@link ProgramAccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  onProgramAccountChange(programId, callback, commitmentOrConfig, maybeFilters) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([programId.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64' /* encoding */, config ? config : maybeFilters ? {\n      filters: applyDefaultMemcmpEncodingToFilters(maybeFilters)\n    } : undefined /* extra */);\n    return this._makeSubscription({\n      callback,\n      method: 'programSubscribe',\n      unsubscribeMethod: 'programUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'program account change');\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(filter, callback, commitment) {\n    const args = this._buildArgs([typeof filter === 'object' ? {\n      mentions: [filter.toString()]\n    } : filter], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    return this._makeSubscription({\n      callback,\n      method: 'logsSubscribe',\n      unsubscribeMethod: 'logsUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param clientSubscriptionId client subscription id to deregister.\n   */\n  async removeOnLogsListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, LogsNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotSubscribe',\n      unsubscribeMethod: 'slotUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotUpdateNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotsUpdatesSubscribe',\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotUpdateListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot update');\n  }\n\n  /**\n   * @internal\n   */\n\n  async _unsubscribeClientSubscription(clientSubscriptionId, subscriptionName) {\n    const dispose = this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn('Ignored unsubscribe request because an active subscription with id ' + `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` + 'could not be found.');\n    }\n  }\n  _buildArgs(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error('Using Connection with default commitment: `' + this._commitment + '`, but method requires at least `confirmed`');\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SignatureNotificationResult);\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification(subscription, result.value === 'receivedSignature' ? [{\n      type: 'received'\n    }, result.context] : [{\n      type: 'status',\n      result: result.value\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(signature, callback, commitment) {\n    const args = this._buildArgs([signature], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(signature, callback, options) {\n    const {\n      commitment,\n      ...extra\n    } = {\n      ...options,\n      commitment: options && options.commitment || this._commitment || 'finalized' // Apply connection/server default.\n    };\n    const args = this._buildArgs([signature], commitment, undefined /* encoding */, extra);\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        callback(notification, context);\n        // Signatures subscriptions are auto-removed by the RPC service\n        // so no need to explicitly send an unsubscribe message.\n        try {\n          this.removeSignatureListener(clientSubscriptionId);\n          // eslint-disable-next-line no-empty\n        } catch (_err) {\n          // Already removed.\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSignatureListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'signature result');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, RootNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'rootSubscribe',\n      unsubscribeMethod: 'rootUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeRootChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'root change');\n  }\n}\n\n/**\n * Keypair signer interface\n */\n\n/**\n * An account keypair used for signing transactions.\n */\nclass Keypair {\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair) {\n    this._keypair = void 0;\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate() {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(secretKey, options) {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed) {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey() {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nconst LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('recentSlot'), BufferLayout.u8('bumpSeed')])\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64(), BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u32(), -8), 'addresses')])\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\nclass AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [layoutType, layout] of Object.entries(LOOKUP_TABLE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == index) {\n        type = layoutType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Invalid Instruction. Should be a LookupTable Instruction');\n    }\n    return type;\n  }\n  static decodeCreateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n    const {\n      recentSlot\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable, instruction.data);\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot)\n    };\n  }\n  static decodeExtendLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(`invalid instruction; found ${instruction.keys.length} keys, expected at least 2`);\n    }\n    const {\n      addresses\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable, instruction.data);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer))\n    };\n  }\n  static decodeCloseLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey\n    };\n  }\n  static decodeFreezeLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n  static decodeDeactivateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error('invalid instruction; programId is not AddressLookupTable Program');\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\nclass AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static createLookupTable(params) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync([params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)], this.programId);\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed\n    });\n    const keys = [{\n      pubkey: lookupTableAddress,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.payer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }];\n    return [new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    }), lookupTableAddress];\n  }\n  static freezeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static extendLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes())\n    });\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (params.payer) {\n      keys.push({\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static deactivateLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static closeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.recipient,\n      isSigner: false,\n      isWritable: true\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n}\nAddressLookupTableProgram.programId = new PublicKey('AddressLookupTab1e1111111111111111111111111');\n\n/**\n * Compute Budget Instruction class\n */\nclass ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a ComputeBudgetInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units,\n      additionalFee\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits, instruction.data);\n    return {\n      units,\n      additionalFee\n    };\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      bytes\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame, instruction.data);\n    return {\n      bytes\n    };\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit, instruction.data);\n    return {\n      units\n    };\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      microLamports\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice, instruction.data);\n    return {\n      microLamports\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error('invalid instruction; programId is not ComputeBudgetProgram');\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\n\n/**\n * Request units instruction params\n */\n\n/**\n * Request heap frame instruction params\n */\n\n/**\n * Set compute unit limit instruction params\n */\n\n/**\n * Set compute unit price instruction params\n */\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nconst COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units'), BufferLayout.u32('additionalFee')])\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')])\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units')])\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), u64('microLamports')])\n  }\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nclass ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static requestHeapFrame(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitLimit(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitPrice(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports)\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n}\nComputeBudgetProgram.programId = new PublicKey('ComputeBudget111111111111111111111111111111');\nconst PRIVATE_KEY_BYTES$1 = 64;\nconst PUBLIC_KEY_BYTES$1 = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u8('padding'), BufferLayout.u16('signatureOffset'), BufferLayout.u16('signatureInstructionIndex'), BufferLayout.u16('publicKeyOffset'), BufferLayout.u16('publicKeyInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u16('messageInstructionIndex')]);\nclass Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      instructionIndex\n    } = params;\n    assert(publicKey.length === PUBLIC_KEY_BYTES$1, `Public Key must be ${PUBLIC_KEY_BYTES$1} bytes but received ${publicKey.length} bytes`);\n    assert(signature.length === SIGNATURE_BYTES, `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`);\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n    const index = instructionIndex == null ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n    : instructionIndex;\n    ED25519_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      padding: 0,\n      signatureOffset,\n      signatureInstructionIndex: index,\n      publicKeyOffset,\n      publicKeyInstructionIndex: index,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: index\n    }, instructionData);\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey,\n      message,\n      instructionIndex\n    } = params;\n    assert(privateKey.length === PRIVATE_KEY_BYTES$1, `Private key must be ${PRIVATE_KEY_BYTES$1} bytes but received ${privateKey.length} bytes`);\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nEd25519Program.programId = new PublicKey('Ed25519SigVerify111111111111111111111111111');\nconst ecdsaSign = (msgHash, privKey) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery];\n};\nsecp256k1.utils.isValidPrivateKey;\nconst publicKeyCreate = secp256k1.getPublicKey;\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u16('signatureOffset'), BufferLayout.u8('signatureInstructionIndex'), BufferLayout.u16('ethAddressOffset'), BufferLayout.u8('ethAddressInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u8('messageInstructionIndex'), BufferLayout.blob(20, 'ethAddress'), BufferLayout.blob(64, 'signature'), BufferLayout.u8('recoveryId')]);\nclass Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(publicKey) {\n    assert(publicKey.length === PUBLIC_KEY_BYTES, `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`);\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    } = params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(params) {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0\n    } = params;\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n    assert(ethAddress.length === ETHEREUM_ADDRESS_BYTES, `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`);\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n    SECP256K1_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      ethAddressOffset,\n      ethAddressInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex,\n      signature: toBuffer(signature),\n      ethAddress: toBuffer(ethAddress),\n      recoveryId\n    }, instructionData);\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey: pkey,\n      message,\n      instructionIndex\n    } = params;\n    assert(pkey.length === PRIVATE_KEY_BYTES, `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`);\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false /* isCompressed */).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nSecp256k1Program.programId = new PublicKey('KeccakSecp256k11111111111111111111111111111');\nvar _Lockup;\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nconst STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n\n/**\n * Stake account authority info\n */\nclass Authorized {\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker, withdrawer) {\n    /** stake authority */\n    this.staker = void 0;\n    /** withdraw authority */\n    this.withdrawer = void 0;\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n/**\n * Stake account lockup info\n */\nclass Lockup {\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp, epoch, custodian) {\n    /** Unix timestamp of lockup expiration */\n    this.unixTimestamp = void 0;\n    /** Epoch of lockup expiration */\n    this.epoch = void 0;\n    /** Lockup custodian authority */\n    this.custodian = void 0;\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n}\n_Lockup = Lockup;\nLockup.default = new _Lockup(0, 0, PublicKey.default);\n/**\n * Create stake account transaction params\n */\n/**\n * Create stake account with seed transaction params\n */\n/**\n * Initialize stake instruction params\n */\n/**\n * Delegate stake instruction params\n */\n/**\n * Authorize stake instruction params\n */\n/**\n * Authorize stake instruction params using a derived key\n */\n/**\n * Split stake instruction params\n */\n/**\n * Split with seed transaction params\n */\n/**\n * Withdraw stake instruction params\n */\n/**\n * Deactivate stake instruction params\n */\n/**\n * Merge stake instruction params\n */\n/**\n * Stake Instruction class\n */\nclass StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized,\n      lockup\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n      lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      stakeAuthorizationType\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nconst STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n\n/**\n * Stake authorization type\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nconst StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nclass StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params) {\n    const {\n      stakePubkey,\n      authorized,\n      lockup: maybeLockup\n    } = params;\n    const lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer())\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer())\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccountWithSeed({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      basePubkey: params.basePubkey,\n      seed: params.seed,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      votePubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: STAKE_CONFIG_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer())\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorityBase,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {\n      lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: splitStakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params,\n  // Compute the cost of allocating the new stake account in lamports\n  rentExemptReserve) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.authorizedPubkey,\n      newAccountPubkey: params.splitStakePubkey,\n      lamports: rentExemptReserve,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params,\n  // If this stake account is new, compute the cost of allocating it in lamports\n  rentExemptReserve) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.allocate({\n      accountPubkey: splitStakePubkey,\n      basePubkey,\n      seed,\n      space: this.space,\n      programId: this.programId\n    }));\n    if (rentExemptReserve && rentExemptReserve > 0) {\n      transaction.add(SystemProgram.transfer({\n        fromPubkey: params.authorizedPubkey,\n        toPubkey: splitStakePubkey,\n        lamports: rentExemptReserve\n      }));\n    }\n    return transaction.add(this.splitInstruction({\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    }));\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params) {\n    const {\n      stakePubkey,\n      sourceStakePubKey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: sourceStakePubKey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n}\nStakeProgram.programId = new PublicKey('Stake11111111111111111111111111111111111111');\n/**\n * Max space of a Stake account\n *\n * This is generated from the solana-stake-program StakeState struct as\n * `StakeStateV2::size_of()`:\n * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeStateV2.html\n */\nStakeProgram.space = 200;\n\n/**\n * Vote account info\n */\nclass VoteInit {\n  /** [0, 100] */\n\n  constructor(nodePubkey, authorizedVoter, authorizedWithdrawer, commission) {\n    this.nodePubkey = void 0;\n    this.authorizedVoter = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\n\n/**\n * InitializeAccount instruction params\n */\n\n/**\n * Authorize instruction params\n */\n\n/**\n * AuthorizeWithSeed instruction params\n */\n\n/**\n * Withdraw from vote account transaction params\n */\n\n/**\n * Update validator identity (node pubkey) vote account instruction params.\n */\n\n/**\n * Vote Instruction class\n */\nclass VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n    const {\n      voteInit\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.InitializeAccount, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(new PublicKey(voteInit.nodePubkey), new PublicKey(voteInit.authorizedVoter), new PublicKey(voteInit.authorizedWithdrawer), voteInit.commission)\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      voteAuthorizationType\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      }\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType\n      }\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(currentAuthorityDerivedKeyOwnerPubkey),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      },\n      votePubkey: instruction.keys[0].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\n\n/** @internal */\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteInit()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('voteAuthorizationType')])\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  UpdateValidatorIdentity: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteAuthorizeWithSeedArgs()])\n  }\n});\n\n/**\n * VoteAuthorize type\n */\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nconst VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nclass VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(params) {\n    const {\n      votePubkey,\n      nodePubkey,\n      voteInit\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(voteInit.authorizedWithdrawer.toBuffer()),\n        commission: voteInit.commission\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: nodePubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.votePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.initializeAccount({\n      votePubkey: params.votePubkey,\n      nodePubkey: params.voteInit.nodePubkey,\n      voteInit: params.voteInit\n    }));\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params) {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(currentAuthorityDerivedKeyOwnerPubkey.toBuffer()),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index\n      }\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: currentAuthorityDerivedKeyBasePubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      lamports,\n      toPubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(params, currentVoteAccountBalance, rentExemptMinimum) {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error('Withdraw will leave vote account with insufficient funds.');\n    }\n    return VoteProgram.withdraw(params);\n  }\n\n  /**\n   * Generate a transaction to update the validator identity (node pubkey) of a Vote account.\n   */\n  static updateValidatorIdentity(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      nodePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.UpdateValidatorIdentity;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: nodePubkey,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nVoteProgram.programId = new PublicKey('Vote111111111111111111111111111111111111111');\n/**\n * Max space of a Vote account\n *\n * This is generated from the solana-vote-program VoteState struct as\n * `VoteState::size_of()`:\n * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n *\n * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n */\nVoteProgram.space = 3762;\nconst VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n\n/**\n * @internal\n */\n\n/**\n * Info used to identity validators.\n */\n\nconst InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  iconUrl: optional(string()),\n  keybaseUsername: optional(string())\n});\n\n/**\n * ValidatorInfo class\n */\nclass ValidatorInfo {\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key, info) {\n    /**\n     * validator public key\n     */\n    this.key = void 0;\n    /**\n     * validator information\n     */\n    this.info = void 0;\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(buffer) {\n    let byteArray = [...buffer];\n    const configKeyCount = decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n    const configKeys = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n      const isSigner = guardedShift(byteArray) === 1;\n      configKeys.push({\n        publicKey,\n        isSigner\n      });\n    }\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assert$1(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n    return null;\n  }\n}\nconst VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n\n/**\n * History of how many credits earned by the end of each epoch\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission'), BufferLayout.nu64(),\n// votes.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.u32('confirmationCount')]), BufferLayout.offset(BufferLayout.u32(), -8), 'votes'), BufferLayout.u8('rootSlotValid'), BufferLayout.nu64('rootSlot'), BufferLayout.nu64(),\n// authorizedVoters.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), publicKey('authorizedVoter')]), BufferLayout.offset(BufferLayout.u32(), -8), 'authorizedVoters'), BufferLayout.struct([BufferLayout.seq(BufferLayout.struct([publicKey('authorizedPubkey'), BufferLayout.nu64('epochOfLastAuthorizedSwitch'), BufferLayout.nu64('targetEpoch')]), 32, 'buf'), BufferLayout.nu64('idx'), BufferLayout.u8('isEmpty')], 'priorVoters'), BufferLayout.nu64(),\n// epochCredits.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), BufferLayout.nu64('credits'), BufferLayout.nu64('prevCredits')]), BufferLayout.offset(BufferLayout.u32(), -8), 'epochCredits'), BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')], 'lastTimestamp')]);\n/**\n * VoteAccount class\n */\nclass VoteAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.nodePubkey = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.rootSlot = void 0;\n    this.votes = void 0;\n    this.authorizedVoters = void 0;\n    this.priorVoters = void 0;\n    this.epochCredits = void 0;\n    this.lastTimestamp = void 0;\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(buffer) {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n    let rootSlot = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp\n    });\n  }\n}\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch\n}) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter)\n  };\n}\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch\n}) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch\n  };\n}\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty\n}) {\n  if (isEmpty) {\n    return [];\n  }\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx).map(parsePriorVoters)];\n}\nconst endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/'\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/'\n  }\n};\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nfunction clusterApiUrl(cluster, tls) {\n  const key = tls === false ? 'http' : 'https';\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\n\n// eslint-disable-next-line no-redeclare\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, confirmationStrategyOrConfirmOptions, maybeConfirmOptions) {\n  let confirmationStrategy;\n  let options;\n  if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'lastValidBlockHeight')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'nonceValue')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy ? connection.confirmTransaction(confirmationStrategy, commitment) : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: sendOptions?.skipPreflight ? 'send' : 'simulate',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`\n      });\n    }\n    throw new Error(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n/**\n * There are 1-billion lamports in one SOL\n */\nconst LAMPORTS_PER_SOL = 1000000000;\nexport { Account, AddressLookupTableAccount, AddressLookupTableInstruction, AddressLookupTableProgram, Authorized, BLOCKHASH_CACHE_TIMEOUT_MS, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, COMPUTE_BUDGET_INSTRUCTION_LAYOUTS, ComputeBudgetInstruction, ComputeBudgetProgram, Connection, Ed25519Program, Enum, EpochSchedule, FeeCalculatorLayout, Keypair, LAMPORTS_PER_SOL, LOOKUP_TABLE_INSTRUCTION_LAYOUTS, Loader, Lockup, MAX_SEED_LENGTH, Message, MessageAccountKeys, MessageV0, NONCE_ACCOUNT_LENGTH, NonceAccount, PACKET_DATA_SIZE, PUBLIC_KEY_LENGTH, PublicKey, SIGNATURE_LENGTH_IN_BYTES, SOLANA_SCHEMA, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_EPOCH_SCHEDULE_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_SLOT_HASHES_PUBKEY, SYSVAR_SLOT_HISTORY_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, SendTransactionError, SolanaJSONRPCError, SolanaJSONRPCErrorCode, StakeAuthorizationLayout, StakeInstruction, StakeProgram, Struct, SystemInstruction, SystemProgram, Transaction, TransactionExpiredBlockheightExceededError, TransactionExpiredNonceInvalidError, TransactionExpiredTimeoutError, TransactionInstruction, TransactionMessage, TransactionStatus, VALIDATOR_INFO_KEY, VERSION_PREFIX_MASK, VOTE_PROGRAM_ID, ValidatorInfo, VersionedMessage, VersionedTransaction, VoteAccount, VoteAuthorizationLayout, VoteInit, VoteInstruction, VoteProgram, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { validateBasic, wNAF } from './curve.js';\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0),\n  _1n = BigInt(1),\n  _2n = BigInt(2),\n  _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = {\n  zip215: true\n};\nfunction validateOpts(curve) {\n  const opts = validateBasic(curve);\n  ut.validateObject(curve, {\n    hash: 'function',\n    a: 'bigint',\n    d: 'bigint',\n    randomBytes: 'function'\n  }, {\n    adjustScalarBytes: 'function',\n    domain: 'function',\n    uvRatio: 'function',\n    mapToCurve: 'function'\n  });\n  // Set defaults\n  return Object.freeze({\n    ...opts\n  });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef) {\n  const CURVE = validateOpts(curveDef);\n  const {\n    Fp,\n    n: CURVE_ORDER,\n    prehash: prehash,\n    hash: cHash,\n    randomBytes,\n    nByteLength,\n    h: cofactor\n  } = CURVE;\n  const MASK = _2n << BigInt(nByteLength * 8) - _1n;\n  const modP = Fp.create; // Function overrides\n  // sqrt(u/v)\n  const uvRatio = CURVE.uvRatio || ((u, v) => {\n    try {\n      return {\n        isValid: true,\n        value: Fp.sqrt(u * Fp.inv(v))\n      };\n    } catch (e) {\n      return {\n        isValid: false,\n        value: _0n\n      };\n    }\n  });\n  const adjustScalarBytes = CURVE.adjustScalarBytes || (bytes => bytes); // NOOP\n  const domain = CURVE.domain || ((data, ctx, phflag) => {\n    if (ctx.length || phflag) throw new Error('Contexts/pre-hash are not supported');\n    return data;\n  }); // NOOP\n  const inBig = n => typeof n === 'bigint' && _0n < n; // n in [1..]\n  const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n  const in0MaskRange = n => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n  function assertInRange(n, max) {\n    // n in [1..max-1]\n    if (inRange(n, max)) return n;\n    throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n  }\n  function assertGE0(n) {\n    // n in [0..CURVE_ORDER-1]\n    return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n  }\n  const pointPrecomputes = new Map();\n  function isPoint(other) {\n    if (!(other instanceof Point)) throw new Error('ExtendedPoint expected');\n  }\n  // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n  // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n  class Point {\n    constructor(ex, ey, ez, et) {\n      this.ex = ex;\n      this.ey = ey;\n      this.ez = ez;\n      this.et = et;\n      if (!in0MaskRange(ex)) throw new Error('x required');\n      if (!in0MaskRange(ey)) throw new Error('y required');\n      if (!in0MaskRange(ez)) throw new Error('z required');\n      if (!in0MaskRange(et)) throw new Error('t required');\n    }\n    get x() {\n      return this.toAffine().x;\n    }\n    get y() {\n      return this.toAffine().y;\n    }\n    static fromAffine(p) {\n      if (p instanceof Point) throw new Error('extended point not allowed');\n      const {\n        x,\n        y\n      } = p || {};\n      if (!in0MaskRange(x) || !in0MaskRange(y)) throw new Error('invalid affine point');\n      return new Point(x, y, _1n, modP(x * y));\n    }\n    static normalizeZ(points) {\n      const toInv = Fp.invertBatch(points.map(p => p.ez));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n    // Not required for fromHex(), which always creates valid points.\n    // Could be useful for fromAffine().\n    assertValidity() {\n      const {\n        a,\n        d\n      } = CURVE;\n      if (this.is0()) throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n      // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n      // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n      const {\n        ex: X,\n        ey: Y,\n        ez: Z,\n        et: T\n      } = this;\n      const X2 = modP(X * X); // X²\n      const Y2 = modP(Y * Y); // Y²\n      const Z2 = modP(Z * Z); // Z²\n      const Z4 = modP(Z2 * Z2); // Z⁴\n      const aX2 = modP(X2 * a); // aX²\n      const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n      const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n      if (left !== right) throw new Error('bad point: equation left != right (1)');\n      // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n      const XY = modP(X * Y);\n      const ZT = modP(Z * T);\n      if (XY !== ZT) throw new Error('bad point: equation left != right (2)');\n    }\n    // Compare one point to another.\n    equals(other) {\n      isPoint(other);\n      const {\n        ex: X1,\n        ey: Y1,\n        ez: Z1\n      } = this;\n      const {\n        ex: X2,\n        ey: Y2,\n        ez: Z2\n      } = other;\n      const X1Z2 = modP(X1 * Z2);\n      const X2Z1 = modP(X2 * Z1);\n      const Y1Z2 = modP(Y1 * Z2);\n      const Y2Z1 = modP(Y2 * Z1);\n      return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    is0() {\n      return this.equals(Point.ZERO);\n    }\n    negate() {\n      // Flips point sign to a negative one (-x, y in affine coords)\n      return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n    }\n    // Fast algo for doubling Extended Point.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n    // Cost: 4M + 4S + 1*a + 6add + 1*2.\n    double() {\n      const {\n        a\n      } = CURVE;\n      const {\n        ex: X1,\n        ey: Y1,\n        ez: Z1\n      } = this;\n      const A = modP(X1 * X1); // A = X12\n      const B = modP(Y1 * Y1); // B = Y12\n      const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n      const D = modP(a * A); // D = a*A\n      const x1y1 = X1 + Y1;\n      const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n      const G = D + B; // G = D+B\n      const F = G - C; // F = G-C\n      const H = D - B; // H = D-B\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n      return new Point(X3, Y3, Z3, T3);\n    }\n    // Fast algo for adding 2 Extended Points.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n    // Cost: 9M + 1*a + 1*d + 7add.\n    add(other) {\n      isPoint(other);\n      const {\n        a,\n        d\n      } = CURVE;\n      const {\n        ex: X1,\n        ey: Y1,\n        ez: Z1,\n        et: T1\n      } = this;\n      const {\n        ex: X2,\n        ey: Y2,\n        ez: Z2,\n        et: T2\n      } = other;\n      // Faster algo for adding 2 Extended Points when curve's a=-1.\n      // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n      // Cost: 8M + 8add + 2*2.\n      // Note: It does not check whether the `other` point is valid.\n      if (a === BigInt(-1)) {\n        const A = modP((Y1 - X1) * (Y2 + X2));\n        const B = modP((Y1 + X1) * (Y2 - X2));\n        const F = modP(B - A);\n        if (F === _0n) return this.double(); // Same point. Tests say it doesn't affect timing\n        const C = modP(Z1 * _2n * T2);\n        const D = modP(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = modP(E * F);\n        const Y3 = modP(G * H);\n        const T3 = modP(E * H);\n        const Z3 = modP(F * G);\n        return new Point(X3, Y3, Z3, T3);\n      }\n      const A = modP(X1 * X2); // A = X1*X2\n      const B = modP(Y1 * Y2); // B = Y1*Y2\n      const C = modP(T1 * d * T2); // C = T1*d*T2\n      const D = modP(Z1 * Z2); // D = Z1*Z2\n      const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n      const F = D - C; // F = D-C\n      const G = D + C; // G = D+C\n      const H = modP(B - a * A); // H = B-a*A\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n      return new Point(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n      return this.add(other.negate());\n    }\n    wNAF(n) {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n    }\n    // Constant-time multiplication.\n    multiply(scalar) {\n      const {\n        p,\n        f\n      } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n      return Point.normalizeZ([p, f])[0];\n    }\n    // Non-constant-time multiplication. Uses double-and-add algorithm.\n    // It's faster, but should only be used when you don't care about\n    // an exposed private key e.g. sig verification.\n    // Does NOT allow scalars higher than CURVE.n.\n    multiplyUnsafe(scalar) {\n      let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n      if (n === _0n) return I;\n      if (this.equals(I) || n === _1n) return this;\n      if (this.equals(G)) return this.wNAF(n).p;\n      return wnaf.unsafeLadder(this, n);\n    }\n    // Checks if point is of small order.\n    // If you add something to small order point, you will have \"dirty\"\n    // point with torsion component.\n    // Multiplies point by cofactor and checks if the result is 0.\n    isSmallOrder() {\n      return this.multiplyUnsafe(cofactor).is0();\n    }\n    // Multiplies point by curve order and checks if the result is 0.\n    // Returns `false` is the point is dirty.\n    isTorsionFree() {\n      return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n    }\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    toAffine(iz) {\n      const {\n        ex: x,\n        ey: y,\n        ez: z\n      } = this;\n      const is0 = this.is0();\n      if (iz == null) iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n      const ax = modP(x * iz);\n      const ay = modP(y * iz);\n      const zz = modP(z * iz);\n      if (is0) return {\n        x: _0n,\n        y: _1n\n      };\n      if (zz !== _1n) throw new Error('invZ was invalid');\n      return {\n        x: ax,\n        y: ay\n      };\n    }\n    clearCofactor() {\n      const {\n        h: cofactor\n      } = CURVE;\n      if (cofactor === _1n) return this;\n      return this.multiplyUnsafe(cofactor);\n    }\n    // Converts hash string or Uint8Array to Point.\n    // Uses algo from RFC8032 5.1.3.\n    static fromHex(hex, zip215 = false) {\n      const {\n        d,\n        a\n      } = CURVE;\n      const len = Fp.BYTES;\n      hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n      const normed = hex.slice(); // copy again, we'll manipulate it\n      const lastByte = hex[len - 1]; // select last byte\n      normed[len - 1] = lastByte & ~0x80; // clear last bit\n      const y = ut.bytesToNumberLE(normed);\n      if (y === _0n) {\n        // y=0 is allowed\n      } else {\n        // RFC8032 prohibits >= p, but ZIP215 doesn't\n        if (zip215) assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n        else assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n      }\n      // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n      // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n      const y2 = modP(y * y); // denominator is always non-0 mod p.\n      const u = modP(y2 - _1n); // u = y² - 1\n      const v = modP(d * y2 - a); // v = d y² + 1.\n      let {\n        isValid,\n        value: x\n      } = uvRatio(u, v); // √(u/v)\n      if (!isValid) throw new Error('Point.fromHex: invalid y coordinate');\n      const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n      const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n      if (!zip215 && x === _0n && isLastByteOdd)\n        // if x=0 and x_0 = 1, fail\n        throw new Error('Point.fromHex: x=0 and x_0=1');\n      if (isLastByteOdd !== isXOdd) x = modP(-x); // if x_0 != x mod 2, set x = p-x\n      return Point.fromAffine({\n        x,\n        y\n      });\n    }\n    static fromPrivateKey(privKey) {\n      return getExtendedPublicKey(privKey).point;\n    }\n    toRawBytes() {\n      const {\n        x,\n        y\n      } = this.toAffine();\n      const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n      bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n      return bytes; // and use the last byte to encode sign of x\n    }\n    toHex() {\n      return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n    }\n  }\n  Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n  Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n  const {\n    BASE: G,\n    ZERO: I\n  } = Point;\n  const wnaf = wNAF(Point, nByteLength * 8);\n  function modN(a) {\n    return mod(a, CURVE_ORDER);\n  }\n  // Little-endian SHA512 with modulo n\n  function modN_LE(hash) {\n    return modN(ut.bytesToNumberLE(hash));\n  }\n  /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n  function getExtendedPublicKey(key) {\n    const len = nByteLength;\n    key = ensureBytes('private key', key, len);\n    // Hash private key with curve's hash function to produce uniformingly random input\n    // Check byte lengths: ensure(64, h(ensure(32, key)))\n    const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n    const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n    const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n    const scalar = modN_LE(head); // The actual private scalar\n    const point = G.multiply(scalar); // Point on Edwards curve aka public key\n    const pointBytes = point.toRawBytes(); // Uint8Array representation\n    return {\n      head,\n      prefix,\n      scalar,\n      point,\n      pointBytes\n    };\n  }\n  // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n  function getPublicKey(privKey) {\n    return getExtendedPublicKey(privKey).pointBytes;\n  }\n  // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n  function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n    const msg = ut.concatBytes(...msgs);\n    return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n  }\n  /** Signs message with privateKey. RFC8032 5.1.6 */\n  function sign(msg, privKey, options = {}) {\n    msg = ensureBytes('message', msg);\n    if (prehash) msg = prehash(msg); // for ed25519ph etc.\n    const {\n      prefix,\n      scalar,\n      pointBytes\n    } = getExtendedPublicKey(privKey);\n    const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n    const R = G.multiply(r).toRawBytes(); // R = rG\n    const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n    const s = modN(r + k * scalar); // S = (r + k * s) mod L\n    assertGE0(s); // 0 <= s < l\n    const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n    return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n  }\n  const verifyOpts = VERIFY_DEFAULT;\n  function verify(sig, msg, publicKey, options = verifyOpts) {\n    const {\n      context,\n      zip215\n    } = options;\n    const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n    sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n    msg = ensureBytes('message', msg);\n    if (prehash) msg = prehash(msg); // for ed25519ph, etc\n    const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n    // zip215: true is good for consensus-critical apps and allows points < 2^256\n    // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n    let A, R, SB;\n    try {\n      A = Point.fromHex(publicKey, zip215);\n      R = Point.fromHex(sig.slice(0, len), zip215);\n      SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n    } catch (error) {\n      return false;\n    }\n    if (!zip215 && A.isSmallOrder()) return false;\n    const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n    const RkA = R.add(A.multiplyUnsafe(k));\n    // [8][S]B = [8]R + [8][k]A'\n    return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n  }\n  G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n  const utils = {\n    getExtendedPublicKey,\n    // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n    randomPrivateKey: () => randomBytes(Fp.BYTES),\n    /**\n     * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n     * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n     * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n     * @param windowSize 2, 4, 8, 16\n     */\n    precompute(windowSize = 8, point = Point.BASE) {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3));\n      return point;\n    }\n  };\n  return {\n    CURVE,\n    getPublicKey,\n    sign,\n    verify,\n    ExtendedPoint: Point,\n    utils\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { mod, pow } from './modular.js';\nimport { bytesToNumberLE, ensureBytes, numberToBytesLE, validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction validateOpts(curve) {\n  validateObject(curve, {\n    a: 'bigint'\n  }, {\n    montgomeryBits: 'isSafeInteger',\n    nByteLength: 'isSafeInteger',\n    adjustScalarBytes: 'function',\n    domain: 'function',\n    powPminus2: 'function',\n    Gu: 'bigint'\n  });\n  // Set defaults\n  return Object.freeze({\n    ...curve\n  });\n}\n// NOTE: not really montgomery curve, just bunch of very specific methods for X25519/X448 (RFC 7748, https://www.rfc-editor.org/rfc/rfc7748)\n// Uses only one coordinate instead of two\nexport function montgomery(curveDef) {\n  const CURVE = validateOpts(curveDef);\n  const {\n    P\n  } = CURVE;\n  const modP = n => mod(n, P);\n  const montgomeryBits = CURVE.montgomeryBits;\n  const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n  const fieldLen = CURVE.nByteLength;\n  const adjustScalarBytes = CURVE.adjustScalarBytes || (bytes => bytes);\n  const powPminus2 = CURVE.powPminus2 || (x => pow(x, P - BigInt(2), P));\n  // cswap from RFC7748. But it is not from RFC7748!\n  /*\n    cswap(swap, x_2, x_3):\n         dummy = mask(swap) AND (x_2 XOR x_3)\n         x_2 = x_2 XOR dummy\n         x_3 = x_3 XOR dummy\n         Return (x_2, x_3)\n  Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n   and x_3, computed, e.g., as mask(swap) = 0 - swap.\n  */\n  function cswap(swap, x_2, x_3) {\n    const dummy = modP(swap * (x_2 - x_3));\n    x_2 = modP(x_2 - dummy);\n    x_3 = modP(x_3 + dummy);\n    return [x_2, x_3];\n  }\n  // Accepts 0 as well\n  function assertFieldElement(n) {\n    if (typeof n === 'bigint' && _0n <= n && n < P) return n;\n    throw new Error('Expected valid scalar 0 < scalar < CURVE.P');\n  }\n  // x25519 from 4\n  // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n  const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n  /**\n   *\n   * @param pointU u coordinate (x) on Montgomery Curve 25519\n   * @param scalar by which the point would be multiplied\n   * @returns new Point on Montgomery curve\n   */\n  function montgomeryLadder(pointU, scalar) {\n    const u = assertFieldElement(pointU);\n    // Section 5: Implementations MUST accept non-canonical values and process them as\n    // if they had been reduced modulo the field prime.\n    const k = assertFieldElement(scalar);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n      const k_t = k >> t & _1n;\n      swap ^= k_t;\n      sw = cswap(swap, x_2, x_3);\n      x_2 = sw[0];\n      x_3 = sw[1];\n      sw = cswap(swap, z_2, z_3);\n      z_2 = sw[0];\n      z_3 = sw[1];\n      swap = k_t;\n      const A = x_2 + z_2;\n      const AA = modP(A * A);\n      const B = x_2 - z_2;\n      const BB = modP(B * B);\n      const E = AA - BB;\n      const C = x_3 + z_3;\n      const D = x_3 - z_3;\n      const DA = modP(D * A);\n      const CB = modP(C * B);\n      const dacb = DA + CB;\n      const da_cb = DA - CB;\n      x_3 = modP(dacb * dacb);\n      z_3 = modP(x_1 * modP(da_cb * da_cb));\n      x_2 = modP(AA * BB);\n      z_2 = modP(E * (AA + modP(a24 * E)));\n    }\n    // (x_2, x_3) = cswap(swap, x_2, x_3)\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    // (z_2, z_3) = cswap(swap, z_2, z_3)\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    // z_2^(p - 2)\n    const z2 = powPminus2(z_2);\n    // Return x_2 * (z_2^(p - 2))\n    return modP(x_2 * z2);\n  }\n  function encodeUCoordinate(u) {\n    return numberToBytesLE(modP(u), montgomeryBytes);\n  }\n  function decodeUCoordinate(uEnc) {\n    // Section 5: When receiving such an array, implementations of X25519\n    // MUST mask the most significant bit in the final byte.\n    const u = ensureBytes('u coordinate', uEnc, montgomeryBytes);\n    if (fieldLen === 32) u[31] &= 127; // 0b0111_1111\n    return bytesToNumberLE(u);\n  }\n  function decodeScalar(n) {\n    const bytes = ensureBytes('scalar', n);\n    const len = bytes.length;\n    if (len !== montgomeryBytes && len !== fieldLen) throw new Error(`Expected ${montgomeryBytes} or ${fieldLen} bytes, got ${len}`);\n    return bytesToNumberLE(adjustScalarBytes(bytes));\n  }\n  function scalarMult(scalar, u) {\n    const pointU = decodeUCoordinate(u);\n    const _scalar = decodeScalar(scalar);\n    const pu = montgomeryLadder(pointU, _scalar);\n    // The result was not contributory\n    // https://cr.yp.to/ecdh.html#validate\n    if (pu === _0n) throw new Error('Invalid private or public key received');\n    return encodeUCoordinate(pu);\n  }\n  // Computes public key from private. By doing scalar multiplication of base point.\n  const GuBytes = encodeUCoordinate(CURVE.Gu);\n  function scalarMultBase(scalar) {\n    return scalarMult(scalar, GuBytes);\n  }\n  return {\n    scalarMult,\n    scalarMultBase,\n    getSharedSecret: (privateKey, publicKey) => scalarMult(privateKey, publicKey),\n    getPublicKey: privateKey => scalarMultBase(privateKey),\n    utils: {\n      randomPrivateKey: () => CURVE.randomBytes(CURVE.nByteLength)\n    },\n    GuBytes: GuBytes\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { createHasher, expand_message_xmd } from './abstract/hash-to-curve.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE } from './abstract/utils.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = /* @__PURE__ */BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0),\n  _1n = BigInt(1),\n  _2n = BigInt(2),\n  _3n = BigInt(3);\n// prettier-ignore\nconst _5n = BigInt(5),\n  _8n = BigInt(8);\nfunction ed25519_pow_2_252_3(x) {\n  // prettier-ignore\n  const _10n = BigInt(10),\n    _20n = BigInt(20),\n    _40n = BigInt(40),\n    _80n = BigInt(80);\n  const P = ED25519_P;\n  const x2 = x * x % P;\n  const b2 = x2 * x % P; // x^3, 11\n  const b4 = pow2(b2, _2n, P) * b2 % P; // x^15, 1111\n  const b5 = pow2(b4, _1n, P) * x % P; // x^31\n  const b10 = pow2(b5, _5n, P) * b5 % P;\n  const b20 = pow2(b10, _10n, P) * b10 % P;\n  const b40 = pow2(b20, _20n, P) * b20 % P;\n  const b80 = pow2(b40, _40n, P) * b40 % P;\n  const b160 = pow2(b80, _80n, P) * b80 % P;\n  const b240 = pow2(b160, _80n, P) * b80 % P;\n  const b250 = pow2(b240, _10n, P) * b10 % P;\n  const pow_p_5_8 = pow2(b250, _2n, P) * x % P;\n  // ^ To pow to (p+3)/8, multiply it by x.\n  return {\n    pow_p_5_8,\n    b2\n  };\n}\nfunction adjustScalarBytes(bytes) {\n  // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n  // set the three least significant bits of the first byte\n  bytes[0] &= 248; // 0b1111_1000\n  // and the most significant bit of the last to zero,\n  bytes[31] &= 127; // 0b0111_1111\n  // set the second most significant bit of the last byte to 1\n  bytes[31] |= 64; // 0b0100_0000\n  return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n  const P = ED25519_P;\n  const v3 = mod(v * v * v, P); // v³\n  const v7 = mod(v3 * v3 * v, P); // v⁷\n  // (p+3)/8 and (p-5)/8\n  const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n  let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n  const vx2 = mod(v * x * x, P); // vx²\n  const root1 = x; // First root candidate\n  const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n  const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n  const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n  const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n  if (useRoot1) x = root1;\n  if (useRoot2 || noRoot) x = root2; // We return root2 anyway, for const-time\n  if (isNegativeLE(x, P)) x = mod(-x, P);\n  return {\n    isValid: useRoot1 || useRoot2,\n    value: x\n  };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = ['0100000000000000000000000000000000000000000000000000000000000000', 'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a', '0000000000000000000000000000000000000000000000000000000000000080', '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05', 'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f', '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85', '0000000000000000000000000000000000000000000000000000000000000000', 'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa'];\nconst Fp = /* @__PURE__ */(() => Field(ED25519_P, undefined, true))();\nconst ed25519Defaults = /* @__PURE__ */(() => ({\n  // Param: a\n  a: BigInt(-1),\n  // Fp.create(-1) is proper; our way still works and is faster\n  // d is equal to -121665/121666 over finite field.\n  // Negative number is P - number, and division is invert(number, P)\n  d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n  // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n  Fp,\n  // Subgroup order: how many points curve has\n  // 2n**252n + 27742317777372353535851937790883648493n;\n  n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n  // Cofactor\n  h: _8n,\n  // Base point (x, y) aka generator point\n  Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n  Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n  hash: sha512,\n  randomBytes,\n  adjustScalarBytes,\n  // dom2\n  // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n  // Constant-time, u/√v\n  uvRatio\n}))();\nexport const ed25519 = /* @__PURE__ */(() => twistedEdwards(ed25519Defaults))();\nfunction ed25519_domain(data, ctx, phflag) {\n  if (ctx.length > 255) throw new Error('Context is too big');\n  return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */(() => twistedEdwards({\n  ...ed25519Defaults,\n  domain: ed25519_domain\n}))();\nexport const ed25519ph = /* @__PURE__ */(() => twistedEdwards(Object.assign({}, ed25519Defaults, {\n  domain: ed25519_domain,\n  prehash: sha512\n})))();\nexport const x25519 = /* @__PURE__ */(() => montgomery({\n  P: ED25519_P,\n  a: BigInt(486662),\n  montgomeryBits: 255,\n  // n is 253 bits\n  nByteLength: 32,\n  Gu: BigInt(9),\n  powPminus2: x => {\n    const P = ED25519_P;\n    // x^(p-2) aka x^(2^255-21)\n    const {\n      pow_p_5_8,\n      b2\n    } = ed25519_pow_2_252_3(x);\n    return mod(pow2(pow_p_5_8, _3n, P) * b2, P);\n  },\n  adjustScalarBytes,\n  randomBytes\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n  const {\n    y\n  } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n  const _1n = BigInt(1);\n  return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n  const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n  return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = /* @__PURE__ */(() => (Fp.ORDER + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = /* @__PURE__ */(() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\nconst ELL2_C3 = /* @__PURE__ */(() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n  const ELL2_C4 = (Fp.ORDER - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n  const ELL2_J = BigInt(486662);\n  let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n  tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n  let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n  let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n  let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n  let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n  let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n  gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n  gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n  gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n  let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n  tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n  tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n  tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n  tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n  let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n  y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n  let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n  tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n  tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n  let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n  let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n  let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n  let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n  y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n  let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n  let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n  tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n  tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n  let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n  let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n  tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n  tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n  let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n  let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n  let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n  let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n  y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n  return {\n    xMn: xn,\n    xMd: xd,\n    yMn: y,\n    yMd: _1n\n  }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = /* @__PURE__ */(() => FpSqrtEven(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n  const {\n    xMn,\n    xMd,\n    yMn,\n    yMd\n  } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n  // map_to_curve_elligator2_curve25519(u)\n  let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n  xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n  let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n  let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n  let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n  let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n  let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n  xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n  xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n  yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n  yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n  const inv = Fp.invertBatch([xd, yd]); // batch division\n  return {\n    x: Fp.mul(xn, inv[0]),\n    y: Fp.mul(yn, inv[1])\n  }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */(() => createHasher(ed25519.ExtendedPoint, scalars => map_to_curve_elligator2_edwards25519(scalars[0]), {\n  DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n  encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n  p: Fp.ORDER,\n  m: 1,\n  k: 128,\n  expand: 'xmd',\n  hash: sha512\n}))();\nexport const hashToCurve = /* @__PURE__ */(() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */(() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n  if (!(other instanceof RistPoint)) throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = /* @__PURE__ */BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = /* @__PURE__ */BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = /* @__PURE__ */BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = /* @__PURE__ */BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = number => uvRatio(_1n, number);\nconst MAX_255B = /* @__PURE__ */BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = bytes => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n  const {\n    d\n  } = ed25519.CURVE;\n  const P = ed25519.CURVE.Fp.ORDER;\n  const mod = ed25519.CURVE.Fp.create;\n  const r = mod(SQRT_M1 * r0 * r0); // 1\n  const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n  let c = BigInt(-1); // 3\n  const D = mod((c - d * r) * mod(r + d)); // 4\n  let {\n    isValid: Ns_D_is_sq,\n    value: s\n  } = uvRatio(Ns, D); // 5\n  let s_ = mod(s * r0); // 6\n  if (!isNegativeLE(s_, P)) s_ = mod(-s_);\n  if (!Ns_D_is_sq) s = s_; // 7\n  if (!Ns_D_is_sq) c = r; // 8\n  const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n  const s2 = s * s;\n  const W0 = mod((s + s) * D); // 10\n  const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n  const W2 = mod(_1n - s2); // 12\n  const W3 = mod(_1n + s2); // 13\n  return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n  // Private property to discourage combining ExtendedPoint + RistrettoPoint\n  // Always use Ristretto encoding/decoding instead.\n  constructor(ep) {\n    this.ep = ep;\n  }\n  static fromAffine(ap) {\n    return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n  }\n  /**\n   * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n   * The hash-to-group operation applies Elligator twice and adds the results.\n   * **Note:** this is one-way map, there is no conversion from point to hash.\n   * https://ristretto.group/formulas/elligator.html\n   * @param hex 64-byte output of a hash function\n   */\n  static hashToCurve(hex) {\n    hex = ensureBytes('ristrettoHash', hex, 64);\n    const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n    const R1 = calcElligatorRistrettoMap(r1);\n    const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n    const R2 = calcElligatorRistrettoMap(r2);\n    return new RistPoint(R1.add(R2));\n  }\n  /**\n   * Converts ristretto-encoded string to ristretto point.\n   * https://ristretto.group/formulas/decoding.html\n   * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n   */\n  static fromHex(hex) {\n    hex = ensureBytes('ristrettoHex', hex, 32);\n    const {\n      a,\n      d\n    } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n    const s = bytes255ToNumberLE(hex);\n    // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n    // 3. Check that s is non-negative, or else abort\n    if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P)) throw new Error(emsg);\n    const s2 = mod(s * s);\n    const u1 = mod(_1n + a * s2); // 4 (a is -1)\n    const u2 = mod(_1n - a * s2); // 5\n    const u1_2 = mod(u1 * u1);\n    const u2_2 = mod(u2 * u2);\n    const v = mod(a * d * u1_2 - u2_2); // 6\n    const {\n      isValid,\n      value: I\n    } = invertSqrt(mod(v * u2_2)); // 7\n    const Dx = mod(I * u2); // 8\n    const Dy = mod(I * Dx * v); // 9\n    let x = mod((s + s) * Dx); // 10\n    if (isNegativeLE(x, P)) x = mod(-x); // 10\n    const y = mod(u1 * Dy); // 11\n    const t = mod(x * y); // 12\n    if (!isValid || isNegativeLE(t, P) || y === _0n) throw new Error(emsg);\n    return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n  }\n  /**\n   * Encodes ristretto point to Uint8Array.\n   * https://ristretto.group/formulas/encoding.html\n   */\n  toRawBytes() {\n    let {\n      ex: x,\n      ey: y,\n      ez: z,\n      et: t\n    } = this.ep;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const u1 = mod(mod(z + y) * mod(z - y)); // 1\n    const u2 = mod(x * y); // 2\n    // Square root always exists\n    const u2sq = mod(u2 * u2);\n    const {\n      value: invsqrt\n    } = invertSqrt(mod(u1 * u2sq)); // 3\n    const D1 = mod(invsqrt * u1); // 4\n    const D2 = mod(invsqrt * u2); // 5\n    const zInv = mod(D1 * D2 * t); // 6\n    let D; // 7\n    if (isNegativeLE(t * zInv, P)) {\n      let _x = mod(y * SQRT_M1);\n      let _y = mod(x * SQRT_M1);\n      x = _x;\n      y = _y;\n      D = mod(D1 * INVSQRT_A_MINUS_D);\n    } else {\n      D = D2; // 8\n    }\n    if (isNegativeLE(x * zInv, P)) y = mod(-y); // 9\n    let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n    if (isNegativeLE(s, P)) s = mod(-s);\n    return numberToBytesLE(s, 32); // 11\n  }\n  toHex() {\n    return bytesToHex(this.toRawBytes());\n  }\n  toString() {\n    return this.toHex();\n  }\n  // Compare one point to another.\n  equals(other) {\n    assertRstPoint(other);\n    const {\n      ex: X1,\n      ey: Y1\n    } = this.ep;\n    const {\n      ex: X2,\n      ey: Y2\n    } = other.ep;\n    const mod = ed25519.CURVE.Fp.create;\n    // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n    const one = mod(X1 * Y2) === mod(Y1 * X2);\n    const two = mod(Y1 * Y2) === mod(X1 * X2);\n    return one || two;\n  }\n  add(other) {\n    assertRstPoint(other);\n    return new RistPoint(this.ep.add(other.ep));\n  }\n  subtract(other) {\n    assertRstPoint(other);\n    return new RistPoint(this.ep.subtract(other.ep));\n  }\n  multiply(scalar) {\n    return new RistPoint(this.ep.multiply(scalar));\n  }\n  multiplyUnsafe(scalar) {\n    return new RistPoint(this.ep.multiplyUnsafe(scalar));\n  }\n  double() {\n    return new RistPoint(this.ep.double());\n  }\n  negate() {\n    return new RistPoint(this.ep.negate());\n  }\n}\nexport const RistrettoPoint = /* @__PURE__ */(() => {\n  if (!RistPoint.BASE) RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n  if (!RistPoint.ZERO) RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n  return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n  const d = options.DST;\n  const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n  const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n  const P = RistPoint.hashToCurve(uniform_bytes);\n  return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n", "/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      explanation,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n    super(explanation ?? msg);\n    if (explanation != null) this.cause = msg;\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n    this.failures = () => {\n      return cached ?? (cached = [failure, ...failures()]);\n    };\n  }\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a non-array object.\n */\nfunction isNonArrayObject(x) {\n  return isObject(x) && !Array.isArray(x);\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\nfunction print(value) {\n  if (typeof value === 'symbol') {\n    return value.toString();\n  }\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${refinement ? ` with refinement \\`${refinement}\\`` : ''}, but received: \\`${print(value)}\\``\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\nfunction* run(value, struct, options = {}) {\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch,\n    mask\n  };\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n  }\n  let status = 'valid';\n  for (const failure of struct.validator(value, ctx)) {\n    failure.explanation = options.message;\n    status = 'not_valid';\n    yield [failure, undefined];\n  }\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n      message: options.message\n    });\n    for (const t of ts) {\n      if (t[0]) {\n        status = t[0].refinement != null ? 'not_refined' : 'not_valid';\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          if (v !== undefined || k in value) value[k] = v;\n        }\n      }\n    }\n  }\n  if (status !== 'not_valid') {\n    for (const failure of struct.refiner(value, ctx)) {\n      failure.explanation = options.message;\n      status = 'not_refined';\n      yield [failure, undefined];\n    }\n  }\n  if (status === 'valid') {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n  assert(value, message) {\n    return assert(value, this, message);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n  create(value, message) {\n    return create(value, this, message);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema. Masking applies recursively to\n   * props of `object` structs only.\n   */\n  mask(value, message) {\n    return mask(value, this, message);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `coerce` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful. Also, `mask` will turn on\n   * masking of the unknown `object` props recursively if passed.\n   */\n  validate(value, options = {}) {\n    return validate(value, this, options);\n  }\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\nfunction assert(value, struct, message) {\n  const result = validate(value, struct, {\n    message\n  });\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\nfunction create(value, struct, message) {\n  const result = validate(value, struct, {\n    coerce: true,\n    message\n  });\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\nfunction mask(value, struct, message) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true,\n    message\n  });\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\nfunction validate(value, struct, options = {}) {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\nfunction assign(...Structs) {\n  const isType = Structs[0].type === 'type';\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return isType ? type(schema) : object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\nfunction deprecated(struct, log) {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    },\n    refiner(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.refiner(value, ctx);\n    }\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ?? (struct = fn());\n      yield* struct.entries(value, ctx);\n    },\n    validator(value, ctx) {\n      struct ?? (struct = fn());\n      return struct.validator(value, ctx);\n    },\n    coercer(value, ctx) {\n      struct ?? (struct = fn());\n      return struct.coercer(value, ctx);\n    },\n    refiner(value, ctx) {\n      struct ?? (struct = fn());\n      return struct.refiner(value, ctx);\n    }\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {\n    ...schema\n  };\n  for (const key of keys) {\n    delete subschema[key];\n  }\n  switch (struct.type) {\n    case 'type':\n      return type(subschema);\n    default:\n      return object(subschema);\n  }\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\nfunction partial(struct) {\n  const isStruct = struct instanceof Struct;\n  const schema = isStruct ? {\n    ...struct.schema\n  } : {\n    ...struct\n  };\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n  if (isStruct && struct.type === 'type') {\n    return type(schema);\n  }\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n  switch (struct.type) {\n    case 'type':\n      return type(subschema);\n    default:\n      return object(subschema);\n  }\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n    validator(value) {\n      return Array.isArray(value) || `Expected an array value, but received: ${print(value)}`;\n    }\n  });\n}\n/**\n * Ensure that a value is a bigint.\n */\nfunction bigint() {\n  return define('bigint', value => {\n    return typeof value === 'bigint';\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || `Expected a valid \\`Date\\` object, but received: ${print(value)}`;\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n  for (const key of values) {\n    schema[key] = key;\n  }\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return values.includes(value) || `Expected one of \\`${description}\\`, but received: ${print(value)}`;\n    }\n  });\n}\n/**\n * Ensure that a value is a function.\n */\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || `Expected a function, but received: ${print(value)}`;\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`;\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || `Expected an integer, but received: ${print(value)}`;\n  });\n}\n/**\n * Ensure that a value matches all of a set of types.\n */\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return value === constant || `Expected the literal \\`${description}\\`, but received: ${print(value)}`;\n    }\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n    validator(value) {\n      return value instanceof Map || `Expected a \\`Map\\` object, but received: ${print(value)}`;\n    }\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\nfunction nullable(struct) {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || `Expected a number, but received: ${print(value)}`;\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n    validator(value) {\n      return isNonArrayObject(value) || `Expected an object, but received: ${print(value)}`;\n    },\n    coercer(value, ctx) {\n      if (!isNonArrayObject(value)) {\n        return value;\n      }\n      const coerced = {\n        ...value\n      };\n      // The `object` struct has special behaviour enabled by the mask flag.\n      // When masking, properties that are not in the schema are deleted from\n      // the coerced object instead of eventually failing validaiton.\n      if (ctx.mask && schema) {\n        for (const key in coerced) {\n          if (schema[key] === undefined) {\n            delete coerced[key];\n          }\n        }\n      }\n      return coerced;\n    }\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\nfunction optional(struct) {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n    validator(value) {\n      return isNonArrayObject(value) || `Expected an object, but received: ${print(value)}`;\n    },\n    coercer(value) {\n      return isNonArrayObject(value) ? {\n        ...value\n      } : value;\n    }\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n    validator(value) {\n      return value instanceof Set || `Expected a \\`Set\\` object, but received: ${print(value)}`;\n    }\n  });\n}\n/**\n * Ensure that a value is a string.\n */\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || `Expected a string, but received: ${print(value)}`;\n  });\n}\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\nfunction tuple(Structs) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Structs.length, value.length);\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Structs[i] || Never];\n        }\n      }\n    },\n    validator(value) {\n      return Array.isArray(value) || `Expected an array, but received: ${print(value)}`;\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    }\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n    validator(value) {\n      return isNonArrayObject(value) || `Expected an object, but received: ${print(value)}`;\n    },\n    coercer(value) {\n      return isNonArrayObject(value) ? {\n        ...value\n      } : value;\n    }\n  });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n    coercer(value, ctx) {\n      for (const S of Structs) {\n        const [error, coerced] = S.validate(value, {\n          coerce: true,\n          mask: ctx.mask\n        });\n        if (!error) {\n          return coerced;\n        }\n      }\n      return value;\n    },\n    validator(value, ctx) {\n      const failures = [];\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n      return [`Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(value)}`, ...failures];\n    }\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction coerce(struct, condition, coercer) {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction defaulted(struct, fallback, options = {}) {\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n    if (x === undefined) {\n      return f;\n    }\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = {\n        ...x\n      };\n      let changed = false;\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n      if (changed) {\n        return ret;\n      }\n    }\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\nfunction empty(struct) {\n  return refine(struct, 'empty', value => {\n    const size = getSize(value);\n    return size === 0 || `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``;\n  });\n}\nfunction getSize(value) {\n  if (value instanceof Map || value instanceof Set) {\n    return value.size;\n  } else {\n    return value.length;\n  }\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\nfunction max(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || `Expected a ${struct.type} less than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\nfunction min(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || `Expected a ${struct.type} greater than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n  });\n}\n/**\n * Ensure that a string, array, map or set is not empty.\n */\nfunction nonempty(struct) {\n  return refine(struct, 'nonempty', value => {\n    const size = getSize(value);\n    return size > 0 || `Expected a nonempty ${struct.type} but received an empty one`;\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`;\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\nfunction size(struct, min, max = min) {\n  const expected = `Expected a ${struct.type}`;\n  const of = min === max ? `of \\`${min}\\`` : `between \\`${min}\\` and \\`${max}\\``;\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || `${expected} ${of} but received \\`${value}\\``;\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || `${expected} with a size ${of} but received one with a size of \\`${size}\\``;\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || `${expected} with a length ${of} but received one with a length of \\`${length}\\``;\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\nfunction refine(struct, name, refiner) {\n  return new Struct({\n    ...struct,\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n      for (const failure of failures) {\n        yield {\n          ...failure,\n          refinement: name\n        };\n      }\n    }\n  });\n}\nexport { Struct, StructError, any, array, assert, assign, bigint, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nonempty, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n", "import { Buffer } from 'buffer';\nimport { EventEmitter } from 'eventemitter3';\n\n// node_modules/esbuild-plugin-polyfill-node/polyfills/buffer.js\nvar WebSocketBrowserImpl = class extends EventEmitter {\n  socket;\n  /** Instantiate a WebSocket class\n  * @constructor\n  * @param {String} address - url to a websocket server\n  * @param {(Object)} options - websocket options\n  * @param {(String|Array)} protocols - a list of protocols\n  * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n  */\n  constructor(address, options, protocols) {\n    super();\n    this.socket = new window.WebSocket(address, protocols);\n    this.socket.onopen = () => this.emit(\"open\");\n    this.socket.onmessage = event => this.emit(\"message\", event.data);\n    this.socket.onerror = error => this.emit(\"error\", error);\n    this.socket.onclose = event => {\n      this.emit(\"close\", event.code, event.reason);\n    };\n  }\n  /**\n  * Sends data through a websocket connection\n  * @method\n  * @param {(String|Object)} data - data to be sent via websocket\n  * @param {Object} optionsOrCallback - ws options\n  * @param {Function} callback - a callback called once the data is sent\n  * @return {Undefined}\n  */\n  send(data, optionsOrCallback, callback) {\n    const cb = callback || optionsOrCallback;\n    try {\n      this.socket.send(data);\n      cb();\n    } catch (error) {\n      cb(error);\n    }\n  }\n  /**\n  * Closes an underlying socket\n  * @method\n  * @param {Number} code - status code explaining why the connection is being closed\n  * @param {String} reason - a description why the connection is closing\n  * @return {Undefined}\n  * @throws {Error}\n  */\n  close(code, reason) {\n    this.socket.close(code, reason);\n  }\n  addEventListener(type, listener, options) {\n    this.socket.addEventListener(type, listener, options);\n  }\n};\nfunction WebSocket(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}\n\n// src/lib/utils.ts\nvar DefaultDataPack = class {\n  encode(value) {\n    return JSON.stringify(value);\n  }\n  decode(value) {\n    return JSON.parse(value);\n  }\n};\n\n// src/lib/client.ts\nvar CommonClient = class extends EventEmitter {\n  address;\n  rpc_id;\n  queue;\n  options;\n  autoconnect;\n  ready;\n  reconnect;\n  reconnect_timer_id;\n  reconnect_interval;\n  max_reconnects;\n  rest_options;\n  current_reconnects;\n  generate_request_id;\n  socket;\n  webSocketFactory;\n  dataPack;\n  /**\n  * Instantiate a Client class.\n  * @constructor\n  * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n  * @param {String} address - url to a websocket server\n  * @param {Object} options - ws options object with reconnect parameters\n  * @param {Function} generate_request_id - custom generation request Id\n  * @param {DataPack} dataPack - data pack contains encoder and decoder\n  * @return {CommonClient}\n  */\n  constructor(webSocketFactory, address = \"ws://localhost:8080\", {\n    autoconnect = true,\n    reconnect = true,\n    reconnect_interval = 1e3,\n    max_reconnects = 5,\n    ...rest_options\n  } = {}, generate_request_id, dataPack) {\n    super();\n    this.webSocketFactory = webSocketFactory;\n    this.queue = {};\n    this.rpc_id = 0;\n    this.address = address;\n    this.autoconnect = autoconnect;\n    this.ready = false;\n    this.reconnect = reconnect;\n    this.reconnect_timer_id = void 0;\n    this.reconnect_interval = reconnect_interval;\n    this.max_reconnects = max_reconnects;\n    this.rest_options = rest_options;\n    this.current_reconnects = 0;\n    this.generate_request_id = generate_request_id || (() => ++this.rpc_id);\n    if (!dataPack) this.dataPack = new DefaultDataPack();else this.dataPack = dataPack;\n    if (this.autoconnect) this._connect(this.address, {\n      autoconnect: this.autoconnect,\n      reconnect: this.reconnect,\n      reconnect_interval: this.reconnect_interval,\n      max_reconnects: this.max_reconnects,\n      ...this.rest_options\n    });\n  }\n  /**\n  * Connects to a defined server if not connected already.\n  * @method\n  * @return {Undefined}\n  */\n  connect() {\n    if (this.socket) return;\n    this._connect(this.address, {\n      autoconnect: this.autoconnect,\n      reconnect: this.reconnect,\n      reconnect_interval: this.reconnect_interval,\n      max_reconnects: this.max_reconnects,\n      ...this.rest_options\n    });\n  }\n  /**\n  * Calls a registered RPC method on server.\n  * @method\n  * @param {String} method - RPC method name\n  * @param {Object|Array} params - optional method parameters\n  * @param {Number} timeout - RPC reply timeout value\n  * @param {Object} ws_opts - options passed to ws\n  * @return {Promise}\n  */\n  call(method, params, timeout, ws_opts) {\n    if (!ws_opts && \"object\" === typeof timeout) {\n      ws_opts = timeout;\n      timeout = null;\n    }\n    return new Promise((resolve, reject) => {\n      if (!this.ready) return reject(new Error(\"socket not ready\"));\n      const rpc_id = this.generate_request_id(method, params);\n      const message = {\n        jsonrpc: \"2.0\",\n        method,\n        params: params || void 0,\n        id: rpc_id\n      };\n      this.socket.send(this.dataPack.encode(message), ws_opts, error => {\n        if (error) return reject(error);\n        this.queue[rpc_id] = {\n          promise: [resolve, reject]\n        };\n        if (timeout) {\n          this.queue[rpc_id].timeout = setTimeout(() => {\n            delete this.queue[rpc_id];\n            reject(new Error(\"reply timeout\"));\n          }, timeout);\n        }\n      });\n    });\n  }\n  /**\n  * Logins with the other side of the connection.\n  * @method\n  * @param {Object} params - Login credentials object\n  * @return {Promise}\n  */\n  async login(params) {\n    const resp = await this.call(\"rpc.login\", params);\n    if (!resp) throw new Error(\"authentication failed\");\n    return resp;\n  }\n  /**\n  * Fetches a list of client's methods registered on server.\n  * @method\n  * @return {Array}\n  */\n  async listMethods() {\n    return await this.call(\"__listMethods\");\n  }\n  /**\n  * Sends a JSON-RPC 2.0 notification to server.\n  * @method\n  * @param {String} method - RPC method name\n  * @param {Object} params - optional method parameters\n  * @return {Promise}\n  */\n  notify(method, params) {\n    return new Promise((resolve, reject) => {\n      if (!this.ready) return reject(new Error(\"socket not ready\"));\n      const message = {\n        jsonrpc: \"2.0\",\n        method,\n        params\n      };\n      this.socket.send(this.dataPack.encode(message), error => {\n        if (error) return reject(error);\n        resolve();\n      });\n    });\n  }\n  /**\n  * Subscribes for a defined event.\n  * @method\n  * @param {String|Array} event - event name\n  * @return {Undefined}\n  * @throws {Error}\n  */\n  async subscribe(event) {\n    if (typeof event === \"string\") event = [event];\n    const result = await this.call(\"rpc.on\", event);\n    if (typeof event === \"string\" && result[event] !== \"ok\") throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n    return result;\n  }\n  /**\n  * Unsubscribes from a defined event.\n  * @method\n  * @param {String|Array} event - event name\n  * @return {Undefined}\n  * @throws {Error}\n  */\n  async unsubscribe(event) {\n    if (typeof event === \"string\") event = [event];\n    const result = await this.call(\"rpc.off\", event);\n    if (typeof event === \"string\" && result[event] !== \"ok\") throw new Error(\"Failed unsubscribing from an event with: \" + result);\n    return result;\n  }\n  /**\n  * Closes a WebSocket connection gracefully.\n  * @method\n  * @param {Number} code - socket close code\n  * @param {String} data - optional data to be sent before closing\n  * @return {Undefined}\n  */\n  close(code, data) {\n    this.socket.close(code || 1e3, data);\n  }\n  /**\n  * Enable / disable automatic reconnection.\n  * @method\n  * @param {Boolean} reconnect - enable / disable reconnection\n  * @return {Undefined}\n  */\n  setAutoReconnect(reconnect) {\n    this.reconnect = reconnect;\n  }\n  /**\n  * Set the interval between reconnection attempts.\n  * @method\n  * @param {Number} interval - reconnection interval in milliseconds\n  * @return {Undefined}\n  */\n  setReconnectInterval(interval) {\n    this.reconnect_interval = interval;\n  }\n  /**\n  * Set the maximum number of reconnection attempts.\n  * @method\n  * @param {Number} max_reconnects - maximum reconnection attempts\n  * @return {Undefined}\n  */\n  setMaxReconnects(max_reconnects) {\n    this.max_reconnects = max_reconnects;\n  }\n  /**\n  * Connection/Message handler.\n  * @method\n  * @private\n  * @param {String} address - WebSocket API address\n  * @param {Object} options - ws options object\n  * @return {Undefined}\n  */\n  _connect(address, options) {\n    clearTimeout(this.reconnect_timer_id);\n    this.socket = this.webSocketFactory(address, options);\n    this.socket.addEventListener(\"open\", () => {\n      this.ready = true;\n      this.emit(\"open\");\n      this.current_reconnects = 0;\n    });\n    this.socket.addEventListener(\"message\", ({\n      data: message\n    }) => {\n      if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n      try {\n        message = this.dataPack.decode(message);\n      } catch (error) {\n        return;\n      }\n      if (message.notification && this.listeners(message.notification).length) {\n        if (!Object.keys(message.params).length) return this.emit(message.notification);\n        const args = [message.notification];\n        if (message.params.constructor === Object) args.push(message.params);else for (let i = 0; i < message.params.length; i++) args.push(message.params[i]);\n        return Promise.resolve().then(() => {\n          this.emit.apply(this, args);\n        });\n      }\n      if (!this.queue[message.id]) {\n        if (message.method) {\n          return Promise.resolve().then(() => {\n            this.emit(message.method, message?.params);\n          });\n        }\n        return;\n      }\n      if (\"error\" in message === \"result\" in message) this.queue[message.id].promise[1](new Error('Server response malformed. Response must include either \"result\" or \"error\", but not both.'));\n      if (this.queue[message.id].timeout) clearTimeout(this.queue[message.id].timeout);\n      if (message.error) this.queue[message.id].promise[1](message.error);else this.queue[message.id].promise[0](message.result);\n      delete this.queue[message.id];\n    });\n    this.socket.addEventListener(\"error\", error => this.emit(\"error\", error));\n    this.socket.addEventListener(\"close\", ({\n      code,\n      reason\n    }) => {\n      if (this.ready) setTimeout(() => this.emit(\"close\", code, reason), 0);\n      this.ready = false;\n      this.socket = void 0;\n      if (code === 1e3) return;\n      this.current_reconnects++;\n      if (this.reconnect && (this.max_reconnects > this.current_reconnects || this.max_reconnects === 0)) this.reconnect_timer_id = setTimeout(() => this._connect(address, options), this.reconnect_interval);\n    });\n  }\n};\n\n// src/index.browser.ts\nvar Client = class extends CommonClient {\n  constructor(address = \"ws://localhost:8080\", {\n    autoconnect = true,\n    reconnect = true,\n    reconnect_interval = 1e3,\n    max_reconnects = 5\n  } = {}, generate_request_id) {\n    super(WebSocket, address, {\n      autoconnect,\n      reconnect,\n      reconnect_interval,\n      max_reconnects\n    }, generate_request_id);\n  }\n};\nexport { Client, CommonClient, DefaultDataPack, WebSocket };\n\n", "import EventEmitter from './index.js';\nexport { EventEmitter };\nexport default EventEmitter;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAEA,YAAQ,aAAa;AACrB,YAAQ,cAAc;AACtB,YAAQ,gBAAgB;AACxB,QAAI,SAAS,CAAC;AACd,QAAI,YAAY,CAAC;AACjB,QAAI,MAAM,OAAO,eAAe,cAAc,aAAa;AAC3D,QAAI,OAAO;AACX,SAAS,IAAI,GAAG,MAAM,KAAK,QAAQ,IAAI,KAAK,EAAE,GAAG;AAC/C,aAAO,CAAC,IAAI,KAAK,CAAC;AAClB,gBAAU,KAAK,WAAW,CAAC,CAAC,IAAI;AAAA,IAClC;AAHS;AAAO;AAOhB,cAAU,IAAI,WAAW,CAAC,CAAC,IAAI;AAC/B,cAAU,IAAI,WAAW,CAAC,CAAC,IAAI;AAC/B,aAAS,QAAQ,KAAK;AACpB,UAAIA,OAAM,IAAI;AACd,UAAIA,OAAM,IAAI,GAAG;AACf,cAAM,IAAI,MAAM,gDAAgD;AAAA,MAClE;AAIA,UAAI,WAAW,IAAI,QAAQ,GAAG;AAC9B,UAAI,aAAa,GAAI,YAAWA;AAChC,UAAI,kBAAkB,aAAaA,OAAM,IAAI,IAAI,WAAW;AAC5D,aAAO,CAAC,UAAU,eAAe;AAAA,IACnC;AAGA,aAAS,WAAW,KAAK;AACvB,UAAI,OAAO,QAAQ,GAAG;AACtB,UAAI,WAAW,KAAK,CAAC;AACrB,UAAI,kBAAkB,KAAK,CAAC;AAC5B,cAAQ,WAAW,mBAAmB,IAAI,IAAI;AAAA,IAChD;AACA,aAAS,YAAY,KAAK,UAAU,iBAAiB;AACnD,cAAQ,WAAW,mBAAmB,IAAI,IAAI;AAAA,IAChD;AACA,aAAS,YAAY,KAAK;AACxB,UAAI;AACJ,UAAI,OAAO,QAAQ,GAAG;AACtB,UAAI,WAAW,KAAK,CAAC;AACrB,UAAI,kBAAkB,KAAK,CAAC;AAC5B,UAAI,MAAM,IAAI,IAAI,YAAY,KAAK,UAAU,eAAe,CAAC;AAC7D,UAAI,UAAU;AAGd,UAAIA,OAAM,kBAAkB,IAAI,WAAW,IAAI;AAC/C,UAAIC;AACJ,WAAKA,KAAI,GAAGA,KAAID,MAAKC,MAAK,GAAG;AAC3B,cAAM,UAAU,IAAI,WAAWA,EAAC,CAAC,KAAK,KAAK,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC,KAAK,KAAK,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC,KAAK,IAAI,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC;AAC3J,YAAI,SAAS,IAAI,OAAO,KAAK;AAC7B,YAAI,SAAS,IAAI,OAAO,IAAI;AAC5B,YAAI,SAAS,IAAI,MAAM;AAAA,MACzB;AACA,UAAI,oBAAoB,GAAG;AACzB,cAAM,UAAU,IAAI,WAAWA,EAAC,CAAC,KAAK,IAAI,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC,KAAK;AAC9E,YAAI,SAAS,IAAI,MAAM;AAAA,MACzB;AACA,UAAI,oBAAoB,GAAG;AACzB,cAAM,UAAU,IAAI,WAAWA,EAAC,CAAC,KAAK,KAAK,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC,KAAK,IAAI,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC,KAAK;AACvH,YAAI,SAAS,IAAI,OAAO,IAAI;AAC5B,YAAI,SAAS,IAAI,MAAM;AAAA,MACzB;AACA,aAAO;AAAA,IACT;AACA,aAAS,gBAAgB,KAAK;AAC5B,aAAO,OAAO,OAAO,KAAK,EAAI,IAAI,OAAO,OAAO,KAAK,EAAI,IAAI,OAAO,OAAO,IAAI,EAAI,IAAI,OAAO,MAAM,EAAI;AAAA,IAC1G;AACA,aAAS,YAAY,OAAO,OAAO,KAAK;AACtC,UAAI;AACJ,UAAI,SAAS,CAAC;AACd,eAASA,KAAI,OAAOA,KAAI,KAAKA,MAAK,GAAG;AACnC,eAAO,MAAMA,EAAC,KAAK,KAAK,aAAa,MAAMA,KAAI,CAAC,KAAK,IAAI,UAAW,MAAMA,KAAI,CAAC,IAAI;AACnF,eAAO,KAAK,gBAAgB,GAAG,CAAC;AAAA,MAClC;AACA,aAAO,OAAO,KAAK,EAAE;AAAA,IACvB;AACA,aAAS,cAAc,OAAO;AAC5B,UAAI;AACJ,UAAID,OAAM,MAAM;AAChB,UAAI,aAAaA,OAAM;AACvB,UAAI,QAAQ,CAAC;AACb,UAAI,iBAAiB;AAGrB,eAASC,KAAI,GAAGC,QAAOF,OAAM,YAAYC,KAAIC,OAAMD,MAAK,gBAAgB;AACtE,cAAM,KAAK,YAAY,OAAOA,IAAGA,KAAI,iBAAiBC,QAAOA,QAAOD,KAAI,cAAc,CAAC;AAAA,MACzF;AAGA,UAAI,eAAe,GAAG;AACpB,cAAM,MAAMD,OAAM,CAAC;AACnB,cAAM,KAAK,OAAO,OAAO,CAAC,IAAI,OAAO,OAAO,IAAI,EAAI,IAAI,IAAI;AAAA,MAC9D,WAAW,eAAe,GAAG;AAC3B,eAAO,MAAMA,OAAM,CAAC,KAAK,KAAK,MAAMA,OAAM,CAAC;AAC3C,cAAM,KAAK,OAAO,OAAO,EAAE,IAAI,OAAO,OAAO,IAAI,EAAI,IAAI,OAAO,OAAO,IAAI,EAAI,IAAI,GAAG;AAAA,MACxF;AACA,aAAO,MAAM,KAAK,EAAE;AAAA,IACtB;AAAA;AAAA;;;ACvGA;AAAA;AACA,YAAQ,OAAO,SAAU,QAAQG,SAAQ,MAAM,MAAM,QAAQ;AAC3D,UAAI,GAAG;AACP,UAAI,OAAO,SAAS,IAAI,OAAO;AAC/B,UAAI,QAAQ,KAAK,QAAQ;AACzB,UAAI,QAAQ,QAAQ;AACpB,UAAI,QAAQ;AACZ,UAAI,IAAI,OAAO,SAAS,IAAI;AAC5B,UAAI,IAAI,OAAO,KAAK;AACpB,UAAI,IAAI,OAAOA,UAAS,CAAC;AACzB,WAAK;AACL,UAAI,KAAK,KAAK,CAAC,SAAS;AACxB,YAAM,CAAC;AACP,eAAS;AACT,aAAO,QAAQ,GAAG,IAAI,IAAI,MAAM,OAAOA,UAAS,CAAC,GAAG,KAAK,GAAG,SAAS,GAAG;AAAA,MAAC;AACzE,UAAI,KAAK,KAAK,CAAC,SAAS;AACxB,YAAM,CAAC;AACP,eAAS;AACT,aAAO,QAAQ,GAAG,IAAI,IAAI,MAAM,OAAOA,UAAS,CAAC,GAAG,KAAK,GAAG,SAAS,GAAG;AAAA,MAAC;AACzE,UAAI,MAAM,GAAG;AACX,YAAI,IAAI;AAAA,MACV,WAAW,MAAM,MAAM;AACrB,eAAO,IAAI,OAAO,IAAI,KAAK,KAAK;AAAA,MAClC,OAAO;AACL,YAAI,IAAI,KAAK,IAAI,GAAG,IAAI;AACxB,YAAI,IAAI;AAAA,MACV;AACA,cAAQ,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI;AAAA,IAChD;AACA,YAAQ,QAAQ,SAAU,QAAQ,OAAOA,SAAQ,MAAM,MAAM,QAAQ;AACnE,UAAI,GAAG,GAAG;AACV,UAAI,OAAO,SAAS,IAAI,OAAO;AAC/B,UAAI,QAAQ,KAAK,QAAQ;AACzB,UAAI,QAAQ,QAAQ;AACpB,UAAI,KAAK,SAAS,KAAK,KAAK,IAAI,GAAG,GAAG,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI;AAC7D,UAAI,IAAI,OAAO,IAAI,SAAS;AAC5B,UAAI,IAAI,OAAO,IAAI;AACnB,UAAI,IAAI,QAAQ,KAAK,UAAU,KAAK,IAAI,QAAQ,IAAI,IAAI;AACxD,cAAQ,KAAK,IAAI,KAAK;AACtB,UAAI,MAAM,KAAK,KAAK,UAAU,UAAU;AACtC,YAAI,MAAM,KAAK,IAAI,IAAI;AACvB,YAAI;AAAA,MACN,OAAO;AACL,YAAI,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG;AACzC,YAAI,SAAS,IAAI,KAAK,IAAI,GAAG,CAAC,CAAC,KAAK,GAAG;AACrC;AACA,eAAK;AAAA,QACP;AACA,YAAI,IAAI,SAAS,GAAG;AAClB,mBAAS,KAAK;AAAA,QAChB,OAAO;AACL,mBAAS,KAAK,KAAK,IAAI,GAAG,IAAI,KAAK;AAAA,QACrC;AACA,YAAI,QAAQ,KAAK,GAAG;AAClB;AACA,eAAK;AAAA,QACP;AACA,YAAI,IAAI,SAAS,MAAM;AACrB,cAAI;AACJ,cAAI;AAAA,QACN,WAAW,IAAI,SAAS,GAAG;AACzB,eAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,GAAG,IAAI;AACtC,cAAI,IAAI;AAAA,QACV,OAAO;AACL,cAAI,QAAQ,KAAK,IAAI,GAAG,QAAQ,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI;AACrD,cAAI;AAAA,QACN;AAAA,MACF;AACA,aAAO,QAAQ,GAAG,OAAOA,UAAS,CAAC,IAAI,IAAI,KAAM,KAAK,GAAG,KAAK,KAAK,QAAQ,GAAG;AAAA,MAAC;AAC/E,UAAI,KAAK,OAAO;AAChB,cAAQ;AACR,aAAO,OAAO,GAAG,OAAOA,UAAS,CAAC,IAAI,IAAI,KAAM,KAAK,GAAG,KAAK,KAAK,QAAQ,GAAG;AAAA,MAAC;AAC9E,aAAOA,UAAS,IAAI,CAAC,KAAK,IAAI;AAAA,IAChC;AAAA;AAAA;;;ACzEA;AAAA;AAAA;AAUA,QAAM,SAAS;AACf,QAAM,UAAU;AAChB,QAAM,sBAAsB,OAAO,WAAW,cAAc,OAAO,OAAO,KAAK,MAAM,aACnF,OAAO,KAAK,EAAE,4BAA4B,IAC1C;AACF,YAAQ,SAASC;AACjB,YAAQ,aAAa;AACrB,YAAQ,oBAAoB;AAC5B,QAAM,eAAe;AACrB,YAAQ,aAAa;AAgBrB,IAAAA,QAAO,sBAAsB,kBAAkB;AAC/C,QAAI,CAACA,QAAO,uBAAuB,OAAO,YAAY,eAAe,OAAO,QAAQ,UAAU,YAAY;AACxG,cAAQ,MAAM,+IAAoJ;AAAA,IACpK;AACA,aAAS,oBAAoB;AAE3B,UAAI;AACF,cAAM,MAAM,IAAI,WAAW,CAAC;AAC5B,cAAM,QAAQ;AAAA,UACZ,KAAK,WAAY;AACf,mBAAO;AAAA,UACT;AAAA,QACF;AACA,eAAO,eAAe,OAAO,WAAW,SAAS;AACjD,eAAO,eAAe,KAAK,KAAK;AAChC,eAAO,IAAI,IAAI,MAAM;AAAA,MACvB,SAAS,GAAG;AACV,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO,eAAeA,QAAO,WAAW,UAAU;AAAA,MAChD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,YAAI,CAACA,QAAO,SAAS,IAAI,EAAG,QAAO;AACnC,eAAO,KAAK;AAAA,MACd;AAAA,IACF,CAAC;AACD,WAAO,eAAeA,QAAO,WAAW,UAAU;AAAA,MAChD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,YAAI,CAACA,QAAO,SAAS,IAAI,EAAG,QAAO;AACnC,eAAO,KAAK;AAAA,MACd;AAAA,IACF,CAAC;AACD,aAAS,aAAa,QAAQ;AAC5B,UAAI,SAAS,cAAc;AACzB,cAAM,IAAI,WAAW,gBAAgB,SAAS,gCAAgC;AAAA,MAChF;AAEA,YAAM,MAAM,IAAI,WAAW,MAAM;AACjC,aAAO,eAAe,KAAKA,QAAO,SAAS;AAC3C,aAAO;AAAA,IACT;AAYA,aAASA,QAAO,KAAK,kBAAkB,QAAQ;AAE7C,UAAI,OAAO,QAAQ,UAAU;AAC3B,YAAI,OAAO,qBAAqB,UAAU;AACxC,gBAAM,IAAI,UAAU,oEAAoE;AAAA,QAC1F;AACA,eAAO,YAAY,GAAG;AAAA,MACxB;AACA,aAAO,KAAK,KAAK,kBAAkB,MAAM;AAAA,IAC3C;AACA,IAAAA,QAAO,WAAW;AAElB,aAAS,KAAK,OAAO,kBAAkB,QAAQ;AAC7C,UAAI,OAAO,UAAU,UAAU;AAC7B,eAAO,WAAW,OAAO,gBAAgB;AAAA,MAC3C;AACA,UAAI,YAAY,OAAO,KAAK,GAAG;AAC7B,eAAO,cAAc,KAAK;AAAA,MAC5B;AACA,UAAI,SAAS,MAAM;AACjB,cAAM,IAAI,UAAU,oHAAyH,OAAO,KAAK;AAAA,MAC3J;AACA,UAAI,WAAW,OAAO,WAAW,KAAK,SAAS,WAAW,MAAM,QAAQ,WAAW,GAAG;AACpF,eAAO,gBAAgB,OAAO,kBAAkB,MAAM;AAAA,MACxD;AACA,UAAI,OAAO,sBAAsB,gBAAgB,WAAW,OAAO,iBAAiB,KAAK,SAAS,WAAW,MAAM,QAAQ,iBAAiB,IAAI;AAC9I,eAAO,gBAAgB,OAAO,kBAAkB,MAAM;AAAA,MACxD;AACA,UAAI,OAAO,UAAU,UAAU;AAC7B,cAAM,IAAI,UAAU,uEAAuE;AAAA,MAC7F;AACA,YAAM,UAAU,MAAM,WAAW,MAAM,QAAQ;AAC/C,UAAI,WAAW,QAAQ,YAAY,OAAO;AACxC,eAAOA,QAAO,KAAK,SAAS,kBAAkB,MAAM;AAAA,MACtD;AACA,YAAM,IAAI,WAAW,KAAK;AAC1B,UAAI,EAAG,QAAO;AACd,UAAI,OAAO,WAAW,eAAe,OAAO,eAAe,QAAQ,OAAO,MAAM,OAAO,WAAW,MAAM,YAAY;AAClH,eAAOA,QAAO,KAAK,MAAM,OAAO,WAAW,EAAE,QAAQ,GAAG,kBAAkB,MAAM;AAAA,MAClF;AACA,YAAM,IAAI,UAAU,oHAAyH,OAAO,KAAK;AAAA,IAC3J;AAUA,IAAAA,QAAO,OAAO,SAAU,OAAO,kBAAkB,QAAQ;AACvD,aAAO,KAAK,OAAO,kBAAkB,MAAM;AAAA,IAC7C;AAIA,WAAO,eAAeA,QAAO,WAAW,WAAW,SAAS;AAC5D,WAAO,eAAeA,SAAQ,UAAU;AACxC,aAAS,WAAW,MAAM;AACxB,UAAI,OAAO,SAAS,UAAU;AAC5B,cAAM,IAAI,UAAU,wCAAwC;AAAA,MAC9D,WAAW,OAAO,GAAG;AACnB,cAAM,IAAI,WAAW,gBAAgB,OAAO,gCAAgC;AAAA,MAC9E;AAAA,IACF;AACA,aAAS,MAAM,MAAM,MAAM,UAAU;AACnC,iBAAW,IAAI;AACf,UAAI,QAAQ,GAAG;AACb,eAAO,aAAa,IAAI;AAAA,MAC1B;AACA,UAAI,SAAS,QAAW;AAItB,eAAO,OAAO,aAAa,WAAW,aAAa,IAAI,EAAE,KAAK,MAAM,QAAQ,IAAI,aAAa,IAAI,EAAE,KAAK,IAAI;AAAA,MAC9G;AACA,aAAO,aAAa,IAAI;AAAA,IAC1B;AAMA,IAAAA,QAAO,QAAQ,SAAU,MAAM,MAAM,UAAU;AAC7C,aAAO,MAAM,MAAM,MAAM,QAAQ;AAAA,IACnC;AACA,aAAS,YAAY,MAAM;AACzB,iBAAW,IAAI;AACf,aAAO,aAAa,OAAO,IAAI,IAAI,QAAQ,IAAI,IAAI,CAAC;AAAA,IACtD;AAKA,IAAAA,QAAO,cAAc,SAAU,MAAM;AACnC,aAAO,YAAY,IAAI;AAAA,IACzB;AAIA,IAAAA,QAAO,kBAAkB,SAAU,MAAM;AACvC,aAAO,YAAY,IAAI;AAAA,IACzB;AACA,aAAS,WAAWC,SAAQ,UAAU;AACpC,UAAI,OAAO,aAAa,YAAY,aAAa,IAAI;AACnD,mBAAW;AAAA,MACb;AACA,UAAI,CAACD,QAAO,WAAW,QAAQ,GAAG;AAChC,cAAM,IAAI,UAAU,uBAAuB,QAAQ;AAAA,MACrD;AACA,YAAM,SAAS,WAAWC,SAAQ,QAAQ,IAAI;AAC9C,UAAI,MAAM,aAAa,MAAM;AAC7B,YAAM,SAAS,IAAI,MAAMA,SAAQ,QAAQ;AACzC,UAAI,WAAW,QAAQ;AAIrB,cAAM,IAAI,MAAM,GAAG,MAAM;AAAA,MAC3B;AACA,aAAO;AAAA,IACT;AACA,aAAS,cAAcC,QAAO;AAC5B,YAAM,SAASA,OAAM,SAAS,IAAI,IAAI,QAAQA,OAAM,MAAM,IAAI;AAC9D,YAAM,MAAM,aAAa,MAAM;AAC/B,eAAS,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG;AAClC,YAAI,CAAC,IAAIA,OAAM,CAAC,IAAI;AAAA,MACtB;AACA,aAAO;AAAA,IACT;AACA,aAAS,cAAc,WAAW;AAChC,UAAI,WAAW,WAAW,UAAU,GAAG;AACrC,cAAM,OAAO,IAAI,WAAW,SAAS;AACrC,eAAO,gBAAgB,KAAK,QAAQ,KAAK,YAAY,KAAK,UAAU;AAAA,MACtE;AACA,aAAO,cAAc,SAAS;AAAA,IAChC;AACA,aAAS,gBAAgBA,QAAO,YAAY,QAAQ;AAClD,UAAI,aAAa,KAAKA,OAAM,aAAa,YAAY;AACnD,cAAM,IAAI,WAAW,sCAAsC;AAAA,MAC7D;AACA,UAAIA,OAAM,aAAa,cAAc,UAAU,IAAI;AACjD,cAAM,IAAI,WAAW,sCAAsC;AAAA,MAC7D;AACA,UAAI;AACJ,UAAI,eAAe,UAAa,WAAW,QAAW;AACpD,cAAM,IAAI,WAAWA,MAAK;AAAA,MAC5B,WAAW,WAAW,QAAW;AAC/B,cAAM,IAAI,WAAWA,QAAO,UAAU;AAAA,MACxC,OAAO;AACL,cAAM,IAAI,WAAWA,QAAO,YAAY,MAAM;AAAA,MAChD;AAGA,aAAO,eAAe,KAAKF,QAAO,SAAS;AAC3C,aAAO;AAAA,IACT;AACA,aAAS,WAAW,KAAK;AACvB,UAAIA,QAAO,SAAS,GAAG,GAAG;AACxB,cAAM,MAAM,QAAQ,IAAI,MAAM,IAAI;AAClC,cAAM,MAAM,aAAa,GAAG;AAC5B,YAAI,IAAI,WAAW,GAAG;AACpB,iBAAO;AAAA,QACT;AACA,YAAI,KAAK,KAAK,GAAG,GAAG,GAAG;AACvB,eAAO;AAAA,MACT;AACA,UAAI,IAAI,WAAW,QAAW;AAC5B,YAAI,OAAO,IAAI,WAAW,YAAY,YAAY,IAAI,MAAM,GAAG;AAC7D,iBAAO,aAAa,CAAC;AAAA,QACvB;AACA,eAAO,cAAc,GAAG;AAAA,MAC1B;AACA,UAAI,IAAI,SAAS,YAAY,MAAM,QAAQ,IAAI,IAAI,GAAG;AACpD,eAAO,cAAc,IAAI,IAAI;AAAA,MAC/B;AAAA,IACF;AACA,aAAS,QAAQ,QAAQ;AAGvB,UAAI,UAAU,cAAc;AAC1B,cAAM,IAAI,WAAW,4DAAiE,aAAa,SAAS,EAAE,IAAI,QAAQ;AAAA,MAC5H;AACA,aAAO,SAAS;AAAA,IAClB;AACA,aAAS,WAAW,QAAQ;AAC1B,UAAI,CAAC,UAAU,QAAQ;AAErB,iBAAS;AAAA,MACX;AACA,aAAOA,QAAO,MAAM,CAAC,MAAM;AAAA,IAC7B;AACA,IAAAA,QAAO,WAAW,SAAS,SAAS,GAAG;AACrC,aAAO,KAAK,QAAQ,EAAE,cAAc,QAAQ,MAAMA,QAAO;AAAA,IAC3D;AACA,IAAAA,QAAO,UAAU,SAAS,QAAQ,GAAG,GAAG;AACtC,UAAI,WAAW,GAAG,UAAU,EAAG,KAAIA,QAAO,KAAK,GAAG,EAAE,QAAQ,EAAE,UAAU;AACxE,UAAI,WAAW,GAAG,UAAU,EAAG,KAAIA,QAAO,KAAK,GAAG,EAAE,QAAQ,EAAE,UAAU;AACxE,UAAI,CAACA,QAAO,SAAS,CAAC,KAAK,CAACA,QAAO,SAAS,CAAC,GAAG;AAC9C,cAAM,IAAI,UAAU,uEAAuE;AAAA,MAC7F;AACA,UAAI,MAAM,EAAG,QAAO;AACpB,UAAI,IAAI,EAAE;AACV,UAAI,IAAI,EAAE;AACV,eAAS,IAAI,GAAG,MAAM,KAAK,IAAI,GAAG,CAAC,GAAG,IAAI,KAAK,EAAE,GAAG;AAClD,YAAI,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG;AACjB,cAAI,EAAE,CAAC;AACP,cAAI,EAAE,CAAC;AACP;AAAA,QACF;AAAA,MACF;AACA,UAAI,IAAI,EAAG,QAAO;AAClB,UAAI,IAAI,EAAG,QAAO;AAClB,aAAO;AAAA,IACT;AACA,IAAAA,QAAO,aAAa,SAAS,WAAW,UAAU;AAChD,cAAQ,OAAO,QAAQ,EAAE,YAAY,GAAG;AAAA,QACtC,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT;AACE,iBAAO;AAAA,MACX;AAAA,IACF;AACA,IAAAA,QAAO,SAAS,SAAS,OAAO,MAAM,QAAQ;AAC5C,UAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AACxB,cAAM,IAAI,UAAU,6CAA6C;AAAA,MACnE;AACA,UAAI,KAAK,WAAW,GAAG;AACrB,eAAOA,QAAO,MAAM,CAAC;AAAA,MACvB;AACA,UAAI;AACJ,UAAI,WAAW,QAAW;AACxB,iBAAS;AACT,aAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAChC,oBAAU,KAAK,CAAC,EAAE;AAAA,QACpB;AAAA,MACF;AACA,YAAM,SAASA,QAAO,YAAY,MAAM;AACxC,UAAI,MAAM;AACV,WAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAChC,YAAI,MAAM,KAAK,CAAC;AAChB,YAAI,WAAW,KAAK,UAAU,GAAG;AAC/B,cAAI,MAAM,IAAI,SAAS,OAAO,QAAQ;AACpC,gBAAI,CAACA,QAAO,SAAS,GAAG,EAAG,OAAMA,QAAO,KAAK,GAAG;AAChD,gBAAI,KAAK,QAAQ,GAAG;AAAA,UACtB,OAAO;AACL,uBAAW,UAAU,IAAI,KAAK,QAAQ,KAAK,GAAG;AAAA,UAChD;AAAA,QACF,WAAW,CAACA,QAAO,SAAS,GAAG,GAAG;AAChC,gBAAM,IAAI,UAAU,6CAA6C;AAAA,QACnE,OAAO;AACL,cAAI,KAAK,QAAQ,GAAG;AAAA,QACtB;AACA,eAAO,IAAI;AAAA,MACb;AACA,aAAO;AAAA,IACT;AACA,aAAS,WAAWC,SAAQ,UAAU;AACpC,UAAID,QAAO,SAASC,OAAM,GAAG;AAC3B,eAAOA,QAAO;AAAA,MAChB;AACA,UAAI,YAAY,OAAOA,OAAM,KAAK,WAAWA,SAAQ,WAAW,GAAG;AACjE,eAAOA,QAAO;AAAA,MAChB;AACA,UAAI,OAAOA,YAAW,UAAU;AAC9B,cAAM,IAAI,UAAU,6FAAkG,OAAOA,OAAM;AAAA,MACrI;AACA,YAAM,MAAMA,QAAO;AACnB,YAAM,YAAY,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM;AAC3D,UAAI,CAAC,aAAa,QAAQ,EAAG,QAAO;AAGpC,UAAI,cAAc;AAClB,iBAAS;AACP,gBAAQ,UAAU;AAAA,UAChB,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AAAA,UACL,KAAK;AACH,mBAAOE,aAAYF,OAAM,EAAE;AAAA,UAC7B,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,MAAM;AAAA,UACf,KAAK;AACH,mBAAO,QAAQ;AAAA,UACjB,KAAK;AACH,mBAAO,cAAcA,OAAM,EAAE;AAAA,UAC/B;AACE,gBAAI,aAAa;AACf,qBAAO,YAAY,KAAKE,aAAYF,OAAM,EAAE;AAAA,YAC9C;AACA,wBAAY,KAAK,UAAU,YAAY;AACvC,0BAAc;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AACA,IAAAD,QAAO,aAAa;AACpB,aAAS,aAAa,UAAU,OAAO,KAAK;AAC1C,UAAI,cAAc;AASlB,UAAI,UAAU,UAAa,QAAQ,GAAG;AACpC,gBAAQ;AAAA,MACV;AAGA,UAAI,QAAQ,KAAK,QAAQ;AACvB,eAAO;AAAA,MACT;AACA,UAAI,QAAQ,UAAa,MAAM,KAAK,QAAQ;AAC1C,cAAM,KAAK;AAAA,MACb;AACA,UAAI,OAAO,GAAG;AACZ,eAAO;AAAA,MACT;AAGA,eAAS;AACT,iBAAW;AACX,UAAI,OAAO,OAAO;AAChB,eAAO;AAAA,MACT;AACA,UAAI,CAAC,SAAU,YAAW;AAC1B,aAAO,MAAM;AACX,gBAAQ,UAAU;AAAA,UAChB,KAAK;AACH,mBAAO,SAAS,MAAM,OAAO,GAAG;AAAA,UAClC,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,UAAU,MAAM,OAAO,GAAG;AAAA,UACnC,KAAK;AACH,mBAAO,WAAW,MAAM,OAAO,GAAG;AAAA,UACpC,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,YAAY,MAAM,OAAO,GAAG;AAAA,UACrC,KAAK;AACH,mBAAO,YAAY,MAAM,OAAO,GAAG;AAAA,UACrC,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,aAAa,MAAM,OAAO,GAAG;AAAA,UACtC;AACE,gBAAI,YAAa,OAAM,IAAI,UAAU,uBAAuB,QAAQ;AACpE,wBAAY,WAAW,IAAI,YAAY;AACvC,0BAAc;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AAQA,IAAAA,QAAO,UAAU,YAAY;AAC7B,aAAS,KAAK,GAAG,GAAG,GAAG;AACrB,YAAM,IAAI,EAAE,CAAC;AACb,QAAE,CAAC,IAAI,EAAE,CAAC;AACV,QAAE,CAAC,IAAI;AAAA,IACT;AACA,IAAAA,QAAO,UAAU,SAAS,SAAS,SAAS;AAC1C,YAAM,MAAM,KAAK;AACjB,UAAI,MAAM,MAAM,GAAG;AACjB,cAAM,IAAI,WAAW,2CAA2C;AAAA,MAClE;AACA,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,aAAK,MAAM,GAAG,IAAI,CAAC;AAAA,MACrB;AACA,aAAO;AAAA,IACT;AACA,IAAAA,QAAO,UAAU,SAAS,SAAS,SAAS;AAC1C,YAAM,MAAM,KAAK;AACjB,UAAI,MAAM,MAAM,GAAG;AACjB,cAAM,IAAI,WAAW,2CAA2C;AAAA,MAClE;AACA,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,aAAK,MAAM,GAAG,IAAI,CAAC;AACnB,aAAK,MAAM,IAAI,GAAG,IAAI,CAAC;AAAA,MACzB;AACA,aAAO;AAAA,IACT;AACA,IAAAA,QAAO,UAAU,SAAS,SAAS,SAAS;AAC1C,YAAM,MAAM,KAAK;AACjB,UAAI,MAAM,MAAM,GAAG;AACjB,cAAM,IAAI,WAAW,2CAA2C;AAAA,MAClE;AACA,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,aAAK,MAAM,GAAG,IAAI,CAAC;AACnB,aAAK,MAAM,IAAI,GAAG,IAAI,CAAC;AACvB,aAAK,MAAM,IAAI,GAAG,IAAI,CAAC;AACvB,aAAK,MAAM,IAAI,GAAG,IAAI,CAAC;AAAA,MACzB;AACA,aAAO;AAAA,IACT;AACA,IAAAA,QAAO,UAAU,WAAW,SAAS,WAAW;AAC9C,YAAM,SAAS,KAAK;AACpB,UAAI,WAAW,EAAG,QAAO;AACzB,UAAI,UAAU,WAAW,EAAG,QAAO,UAAU,MAAM,GAAG,MAAM;AAC5D,aAAO,aAAa,MAAM,MAAM,SAAS;AAAA,IAC3C;AACA,IAAAA,QAAO,UAAU,iBAAiBA,QAAO,UAAU;AACnD,IAAAA,QAAO,UAAU,SAAS,SAAS,OAAO,GAAG;AAC3C,UAAI,CAACA,QAAO,SAAS,CAAC,EAAG,OAAM,IAAI,UAAU,2BAA2B;AACxE,UAAI,SAAS,EAAG,QAAO;AACvB,aAAOA,QAAO,QAAQ,MAAM,CAAC,MAAM;AAAA,IACrC;AACA,IAAAA,QAAO,UAAU,UAAU,SAAS,UAAU;AAC5C,UAAI,MAAM;AACV,YAAM,MAAM,QAAQ;AACpB,YAAM,KAAK,SAAS,OAAO,GAAG,GAAG,EAAE,QAAQ,WAAW,KAAK,EAAE,KAAK;AAClE,UAAI,KAAK,SAAS,IAAK,QAAO;AAC9B,aAAO,aAAa,MAAM;AAAA,IAC5B;AACA,QAAI,qBAAqB;AACvB,MAAAA,QAAO,UAAU,mBAAmB,IAAIA,QAAO,UAAU;AAAA,IAC3D;AACA,IAAAA,QAAO,UAAU,UAAU,SAAS,QAAQ,QAAQ,OAAO,KAAK,WAAW,SAAS;AAClF,UAAI,WAAW,QAAQ,UAAU,GAAG;AAClC,iBAASA,QAAO,KAAK,QAAQ,OAAO,QAAQ,OAAO,UAAU;AAAA,MAC/D;AACA,UAAI,CAACA,QAAO,SAAS,MAAM,GAAG;AAC5B,cAAM,IAAI,UAAU,mFAAwF,OAAO,MAAM;AAAA,MAC3H;AACA,UAAI,UAAU,QAAW;AACvB,gBAAQ;AAAA,MACV;AACA,UAAI,QAAQ,QAAW;AACrB,cAAM,SAAS,OAAO,SAAS;AAAA,MACjC;AACA,UAAI,cAAc,QAAW;AAC3B,oBAAY;AAAA,MACd;AACA,UAAI,YAAY,QAAW;AACzB,kBAAU,KAAK;AAAA,MACjB;AACA,UAAI,QAAQ,KAAK,MAAM,OAAO,UAAU,YAAY,KAAK,UAAU,KAAK,QAAQ;AAC9E,cAAM,IAAI,WAAW,oBAAoB;AAAA,MAC3C;AACA,UAAI,aAAa,WAAW,SAAS,KAAK;AACxC,eAAO;AAAA,MACT;AACA,UAAI,aAAa,SAAS;AACxB,eAAO;AAAA,MACT;AACA,UAAI,SAAS,KAAK;AAChB,eAAO;AAAA,MACT;AACA,iBAAW;AACX,eAAS;AACT,qBAAe;AACf,mBAAa;AACb,UAAI,SAAS,OAAQ,QAAO;AAC5B,UAAI,IAAI,UAAU;AAClB,UAAI,IAAI,MAAM;AACd,YAAM,MAAM,KAAK,IAAI,GAAG,CAAC;AACzB,YAAM,WAAW,KAAK,MAAM,WAAW,OAAO;AAC9C,YAAM,aAAa,OAAO,MAAM,OAAO,GAAG;AAC1C,eAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,YAAI,SAAS,CAAC,MAAM,WAAW,CAAC,GAAG;AACjC,cAAI,SAAS,CAAC;AACd,cAAI,WAAW,CAAC;AAChB;AAAA,QACF;AAAA,MACF;AACA,UAAI,IAAI,EAAG,QAAO;AAClB,UAAI,IAAI,EAAG,QAAO;AAClB,aAAO;AAAA,IACT;AAWA,aAAS,qBAAqB,QAAQ,KAAK,YAAY,UAAU,KAAK;AAEpE,UAAI,OAAO,WAAW,EAAG,QAAO;AAGhC,UAAI,OAAO,eAAe,UAAU;AAClC,mBAAW;AACX,qBAAa;AAAA,MACf,WAAW,aAAa,YAAY;AAClC,qBAAa;AAAA,MACf,WAAW,aAAa,aAAa;AACnC,qBAAa;AAAA,MACf;AACA,mBAAa,CAAC;AACd,UAAI,YAAY,UAAU,GAAG;AAE3B,qBAAa,MAAM,IAAI,OAAO,SAAS;AAAA,MACzC;AAGA,UAAI,aAAa,EAAG,cAAa,OAAO,SAAS;AACjD,UAAI,cAAc,OAAO,QAAQ;AAC/B,YAAI,IAAK,QAAO;AAAA,YAAQ,cAAa,OAAO,SAAS;AAAA,MACvD,WAAW,aAAa,GAAG;AACzB,YAAI,IAAK,cAAa;AAAA,YAAO,QAAO;AAAA,MACtC;AAGA,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAMA,QAAO,KAAK,KAAK,QAAQ;AAAA,MACjC;AAGA,UAAIA,QAAO,SAAS,GAAG,GAAG;AAExB,YAAI,IAAI,WAAW,GAAG;AACpB,iBAAO;AAAA,QACT;AACA,eAAO,aAAa,QAAQ,KAAK,YAAY,UAAU,GAAG;AAAA,MAC5D,WAAW,OAAO,QAAQ,UAAU;AAClC,cAAM,MAAM;AACZ,YAAI,OAAO,WAAW,UAAU,YAAY,YAAY;AACtD,cAAI,KAAK;AACP,mBAAO,WAAW,UAAU,QAAQ,KAAK,QAAQ,KAAK,UAAU;AAAA,UAClE,OAAO;AACL,mBAAO,WAAW,UAAU,YAAY,KAAK,QAAQ,KAAK,UAAU;AAAA,UACtE;AAAA,QACF;AACA,eAAO,aAAa,QAAQ,CAAC,GAAG,GAAG,YAAY,UAAU,GAAG;AAAA,MAC9D;AACA,YAAM,IAAI,UAAU,sCAAsC;AAAA,IAC5D;AACA,aAAS,aAAa,KAAK,KAAK,YAAY,UAAU,KAAK;AACzD,UAAI,YAAY;AAChB,UAAI,YAAY,IAAI;AACpB,UAAI,YAAY,IAAI;AACpB,UAAI,aAAa,QAAW;AAC1B,mBAAW,OAAO,QAAQ,EAAE,YAAY;AACxC,YAAI,aAAa,UAAU,aAAa,WAAW,aAAa,aAAa,aAAa,YAAY;AACpG,cAAI,IAAI,SAAS,KAAK,IAAI,SAAS,GAAG;AACpC,mBAAO;AAAA,UACT;AACA,sBAAY;AACZ,uBAAa;AACb,uBAAa;AACb,wBAAc;AAAA,QAChB;AAAA,MACF;AACA,eAAS,KAAK,KAAKI,IAAG;AACpB,YAAI,cAAc,GAAG;AACnB,iBAAO,IAAIA,EAAC;AAAA,QACd,OAAO;AACL,iBAAO,IAAI,aAAaA,KAAI,SAAS;AAAA,QACvC;AAAA,MACF;AACA,UAAI;AACJ,UAAI,KAAK;AACP,YAAI,aAAa;AACjB,aAAK,IAAI,YAAY,IAAI,WAAW,KAAK;AACvC,cAAI,KAAK,KAAK,CAAC,MAAM,KAAK,KAAK,eAAe,KAAK,IAAI,IAAI,UAAU,GAAG;AACtE,gBAAI,eAAe,GAAI,cAAa;AACpC,gBAAI,IAAI,aAAa,MAAM,UAAW,QAAO,aAAa;AAAA,UAC5D,OAAO;AACL,gBAAI,eAAe,GAAI,MAAK,IAAI;AAChC,yBAAa;AAAA,UACf;AAAA,QACF;AAAA,MACF,OAAO;AACL,YAAI,aAAa,YAAY,UAAW,cAAa,YAAY;AACjE,aAAK,IAAI,YAAY,KAAK,GAAG,KAAK;AAChC,cAAI,QAAQ;AACZ,mBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,gBAAI,KAAK,KAAK,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,GAAG;AACrC,sBAAQ;AACR;AAAA,YACF;AAAA,UACF;AACA,cAAI,MAAO,QAAO;AAAA,QACpB;AAAA,MACF;AACA,aAAO;AAAA,IACT;AACA,IAAAJ,QAAO,UAAU,WAAW,SAAS,SAAS,KAAK,YAAY,UAAU;AACvE,aAAO,KAAK,QAAQ,KAAK,YAAY,QAAQ,MAAM;AAAA,IACrD;AACA,IAAAA,QAAO,UAAU,UAAU,SAAS,QAAQ,KAAK,YAAY,UAAU;AACrE,aAAO,qBAAqB,MAAM,KAAK,YAAY,UAAU,IAAI;AAAA,IACnE;AACA,IAAAA,QAAO,UAAU,cAAc,SAAS,YAAY,KAAK,YAAY,UAAU;AAC7E,aAAO,qBAAqB,MAAM,KAAK,YAAY,UAAU,KAAK;AAAA,IACpE;AACA,aAAS,SAAS,KAAKC,SAAQI,SAAQ,QAAQ;AAC7C,MAAAA,UAAS,OAAOA,OAAM,KAAK;AAC3B,YAAM,YAAY,IAAI,SAASA;AAC/B,UAAI,CAAC,QAAQ;AACX,iBAAS;AAAA,MACX,OAAO;AACL,iBAAS,OAAO,MAAM;AACtB,YAAI,SAAS,WAAW;AACtB,mBAAS;AAAA,QACX;AAAA,MACF;AACA,YAAM,SAASJ,QAAO;AACtB,UAAI,SAAS,SAAS,GAAG;AACvB,iBAAS,SAAS;AAAA,MACpB;AACA,UAAI;AACJ,WAAK,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC3B,cAAM,SAAS,SAASA,QAAO,OAAO,IAAI,GAAG,CAAC,GAAG,EAAE;AACnD,YAAI,YAAY,MAAM,EAAG,QAAO;AAChC,YAAII,UAAS,CAAC,IAAI;AAAA,MACpB;AACA,aAAO;AAAA,IACT;AACA,aAAS,UAAU,KAAKJ,SAAQI,SAAQ,QAAQ;AAC9C,aAAO,WAAWF,aAAYF,SAAQ,IAAI,SAASI,OAAM,GAAG,KAAKA,SAAQ,MAAM;AAAA,IACjF;AACA,aAAS,WAAW,KAAKJ,SAAQI,SAAQ,QAAQ;AAC/C,aAAO,WAAW,aAAaJ,OAAM,GAAG,KAAKI,SAAQ,MAAM;AAAA,IAC7D;AACA,aAAS,YAAY,KAAKJ,SAAQI,SAAQ,QAAQ;AAChD,aAAO,WAAW,cAAcJ,OAAM,GAAG,KAAKI,SAAQ,MAAM;AAAA,IAC9D;AACA,aAAS,UAAU,KAAKJ,SAAQI,SAAQ,QAAQ;AAC9C,aAAO,WAAW,eAAeJ,SAAQ,IAAI,SAASI,OAAM,GAAG,KAAKA,SAAQ,MAAM;AAAA,IACpF;AACA,IAAAL,QAAO,UAAU,QAAQ,SAAS,MAAMC,SAAQI,SAAQ,QAAQ,UAAU;AAExE,UAAIA,YAAW,QAAW;AACxB,mBAAW;AACX,iBAAS,KAAK;AACd,QAAAA,UAAS;AAAA,MAEX,WAAW,WAAW,UAAa,OAAOA,YAAW,UAAU;AAC7D,mBAAWA;AACX,iBAAS,KAAK;AACd,QAAAA,UAAS;AAAA,MAEX,WAAW,SAASA,OAAM,GAAG;AAC3B,QAAAA,UAASA,YAAW;AACpB,YAAI,SAAS,MAAM,GAAG;AACpB,mBAAS,WAAW;AACpB,cAAI,aAAa,OAAW,YAAW;AAAA,QACzC,OAAO;AACL,qBAAW;AACX,mBAAS;AAAA,QACX;AAAA,MACF,OAAO;AACL,cAAM,IAAI,MAAM,yEAAyE;AAAA,MAC3F;AACA,YAAM,YAAY,KAAK,SAASA;AAChC,UAAI,WAAW,UAAa,SAAS,UAAW,UAAS;AACzD,UAAIJ,QAAO,SAAS,MAAM,SAAS,KAAKI,UAAS,MAAMA,UAAS,KAAK,QAAQ;AAC3E,cAAM,IAAI,WAAW,wCAAwC;AAAA,MAC/D;AACA,UAAI,CAAC,SAAU,YAAW;AAC1B,UAAI,cAAc;AAClB,iBAAS;AACP,gBAAQ,UAAU;AAAA,UAChB,KAAK;AACH,mBAAO,SAAS,MAAMJ,SAAQI,SAAQ,MAAM;AAAA,UAC9C,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,UAAU,MAAMJ,SAAQI,SAAQ,MAAM;AAAA,UAC/C,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,WAAW,MAAMJ,SAAQI,SAAQ,MAAM;AAAA,UAChD,KAAK;AAEH,mBAAO,YAAY,MAAMJ,SAAQI,SAAQ,MAAM;AAAA,UACjD,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,UAAU,MAAMJ,SAAQI,SAAQ,MAAM;AAAA,UAC/C;AACE,gBAAI,YAAa,OAAM,IAAI,UAAU,uBAAuB,QAAQ;AACpE,wBAAY,KAAK,UAAU,YAAY;AACvC,0BAAc;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AACA,IAAAL,QAAO,UAAU,SAAS,SAAS,SAAS;AAC1C,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM,MAAM,UAAU,MAAM,KAAK,KAAK,QAAQ,MAAM,CAAC;AAAA,MACvD;AAAA,IACF;AACA,aAAS,YAAY,KAAK,OAAO,KAAK;AACpC,UAAI,UAAU,KAAK,QAAQ,IAAI,QAAQ;AACrC,eAAO,OAAO,cAAc,GAAG;AAAA,MACjC,OAAO;AACL,eAAO,OAAO,cAAc,IAAI,MAAM,OAAO,GAAG,CAAC;AAAA,MACnD;AAAA,IACF;AACA,aAAS,UAAU,KAAK,OAAO,KAAK;AAClC,YAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAC9B,YAAM,MAAM,CAAC;AACb,UAAI,IAAI;AACR,aAAO,IAAI,KAAK;AACd,cAAM,YAAY,IAAI,CAAC;AACvB,YAAI,YAAY;AAChB,YAAI,mBAAmB,YAAY,MAAO,IAAI,YAAY,MAAO,IAAI,YAAY,MAAO,IAAI;AAC5F,YAAI,IAAI,oBAAoB,KAAK;AAC/B,cAAI,YAAY,WAAW,YAAY;AACvC,kBAAQ,kBAAkB;AAAA,YACxB,KAAK;AACH,kBAAI,YAAY,KAAM;AACpB,4BAAY;AAAA,cACd;AACA;AAAA,YACF,KAAK;AACH,2BAAa,IAAI,IAAI,CAAC;AACtB,mBAAK,aAAa,SAAU,KAAM;AAChC,iCAAiB,YAAY,OAAS,IAAM,aAAa;AACzD,oBAAI,gBAAgB,KAAM;AACxB,8BAAY;AAAA,gBACd;AAAA,cACF;AACA;AAAA,YACF,KAAK;AACH,2BAAa,IAAI,IAAI,CAAC;AACtB,0BAAY,IAAI,IAAI,CAAC;AACrB,mBAAK,aAAa,SAAU,QAAS,YAAY,SAAU,KAAM;AAC/D,iCAAiB,YAAY,OAAQ,MAAO,aAAa,OAAS,IAAM,YAAY;AACpF,oBAAI,gBAAgB,SAAU,gBAAgB,SAAU,gBAAgB,QAAS;AAC/E,8BAAY;AAAA,gBACd;AAAA,cACF;AACA;AAAA,YACF,KAAK;AACH,2BAAa,IAAI,IAAI,CAAC;AACtB,0BAAY,IAAI,IAAI,CAAC;AACrB,2BAAa,IAAI,IAAI,CAAC;AACtB,mBAAK,aAAa,SAAU,QAAS,YAAY,SAAU,QAAS,aAAa,SAAU,KAAM;AAC/F,iCAAiB,YAAY,OAAQ,MAAQ,aAAa,OAAS,MAAO,YAAY,OAAS,IAAM,aAAa;AAClH,oBAAI,gBAAgB,SAAU,gBAAgB,SAAU;AACtD,8BAAY;AAAA,gBACd;AAAA,cACF;AAAA,UACJ;AAAA,QACF;AACA,YAAI,cAAc,MAAM;AAGtB,sBAAY;AACZ,6BAAmB;AAAA,QACrB,WAAW,YAAY,OAAQ;AAE7B,uBAAa;AACb,cAAI,KAAK,cAAc,KAAK,OAAQ,KAAM;AAC1C,sBAAY,QAAS,YAAY;AAAA,QACnC;AACA,YAAI,KAAK,SAAS;AAClB,aAAK;AAAA,MACP;AACA,aAAO,sBAAsB,GAAG;AAAA,IAClC;AAKA,QAAM,uBAAuB;AAC7B,aAAS,sBAAsB,YAAY;AACzC,YAAM,MAAM,WAAW;AACvB,UAAI,OAAO,sBAAsB;AAC/B,eAAO,OAAO,aAAa,MAAM,QAAQ,UAAU;AAAA,MACrD;AAGA,UAAI,MAAM;AACV,UAAI,IAAI;AACR,aAAO,IAAI,KAAK;AACd,eAAO,OAAO,aAAa,MAAM,QAAQ,WAAW,MAAM,GAAG,KAAK,oBAAoB,CAAC;AAAA,MACzF;AACA,aAAO;AAAA,IACT;AACA,aAAS,WAAW,KAAK,OAAO,KAAK;AACnC,UAAI,MAAM;AACV,YAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAC9B,eAAS,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAChC,eAAO,OAAO,aAAa,IAAI,CAAC,IAAI,GAAI;AAAA,MAC1C;AACA,aAAO;AAAA,IACT;AACA,aAAS,YAAY,KAAK,OAAO,KAAK;AACpC,UAAI,MAAM;AACV,YAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAC9B,eAAS,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAChC,eAAO,OAAO,aAAa,IAAI,CAAC,CAAC;AAAA,MACnC;AACA,aAAO;AAAA,IACT;AACA,aAAS,SAAS,KAAK,OAAO,KAAK;AACjC,YAAM,MAAM,IAAI;AAChB,UAAI,CAAC,SAAS,QAAQ,EAAG,SAAQ;AACjC,UAAI,CAAC,OAAO,MAAM,KAAK,MAAM,IAAK,OAAM;AACxC,UAAI,MAAM;AACV,eAAS,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAChC,eAAO,oBAAoB,IAAI,CAAC,CAAC;AAAA,MACnC;AACA,aAAO;AAAA,IACT;AACA,aAAS,aAAa,KAAK,OAAO,KAAK;AACrC,YAAM,QAAQ,IAAI,MAAM,OAAO,GAAG;AAClC,UAAI,MAAM;AAEV,eAAS,IAAI,GAAG,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG;AAC5C,eAAO,OAAO,aAAa,MAAM,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,GAAG;AAAA,MAC1D;AACA,aAAO;AAAA,IACT;AACA,IAAAA,QAAO,UAAU,QAAQ,SAAS,MAAM,OAAO,KAAK;AAClD,YAAM,MAAM,KAAK;AACjB,cAAQ,CAAC,CAAC;AACV,YAAM,QAAQ,SAAY,MAAM,CAAC,CAAC;AAClC,UAAI,QAAQ,GAAG;AACb,iBAAS;AACT,YAAI,QAAQ,EAAG,SAAQ;AAAA,MACzB,WAAW,QAAQ,KAAK;AACtB,gBAAQ;AAAA,MACV;AACA,UAAI,MAAM,GAAG;AACX,eAAO;AACP,YAAI,MAAM,EAAG,OAAM;AAAA,MACrB,WAAW,MAAM,KAAK;AACpB,cAAM;AAAA,MACR;AACA,UAAI,MAAM,MAAO,OAAM;AACvB,YAAM,SAAS,KAAK,SAAS,OAAO,GAAG;AAEvC,aAAO,eAAe,QAAQA,QAAO,SAAS;AAC9C,aAAO;AAAA,IACT;AAKA,aAAS,YAAYK,SAAQ,KAAK,QAAQ;AACxC,UAAIA,UAAS,MAAM,KAAKA,UAAS,EAAG,OAAM,IAAI,WAAW,oBAAoB;AAC7E,UAAIA,UAAS,MAAM,OAAQ,OAAM,IAAI,WAAW,uCAAuC;AAAA,IACzF;AACA,IAAAL,QAAO,UAAU,aAAaA,QAAO,UAAU,aAAa,SAAS,WAAWK,SAAQC,aAAY,UAAU;AAC5G,MAAAD,UAASA,YAAW;AACpB,MAAAC,cAAaA,gBAAe;AAC5B,UAAI,CAAC,SAAU,aAAYD,SAAQC,aAAY,KAAK,MAAM;AAC1D,UAAI,MAAM,KAAKD,OAAM;AACrB,UAAI,MAAM;AACV,UAAI,IAAI;AACR,aAAO,EAAE,IAAIC,gBAAe,OAAO,MAAQ;AACzC,eAAO,KAAKD,UAAS,CAAC,IAAI;AAAA,MAC5B;AACA,aAAO;AAAA,IACT;AACA,IAAAL,QAAO,UAAU,aAAaA,QAAO,UAAU,aAAa,SAAS,WAAWK,SAAQC,aAAY,UAAU;AAC5G,MAAAD,UAASA,YAAW;AACpB,MAAAC,cAAaA,gBAAe;AAC5B,UAAI,CAAC,UAAU;AACb,oBAAYD,SAAQC,aAAY,KAAK,MAAM;AAAA,MAC7C;AACA,UAAI,MAAM,KAAKD,UAAS,EAAEC,WAAU;AACpC,UAAI,MAAM;AACV,aAAOA,cAAa,MAAM,OAAO,MAAQ;AACvC,eAAO,KAAKD,UAAS,EAAEC,WAAU,IAAI;AAAA,MACvC;AACA,aAAO;AAAA,IACT;AACA,IAAAN,QAAO,UAAU,YAAYA,QAAO,UAAU,YAAY,SAAS,UAAUK,SAAQ,UAAU;AAC7F,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,aAAYA,SAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,KAAKA,OAAM;AAAA,IACpB;AACA,IAAAL,QAAO,UAAU,eAAeA,QAAO,UAAU,eAAe,SAAS,aAAaK,SAAQ,UAAU;AACtG,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,aAAYA,SAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,KAAKA,OAAM,IAAI,KAAKA,UAAS,CAAC,KAAK;AAAA,IAC5C;AACA,IAAAL,QAAO,UAAU,eAAeA,QAAO,UAAU,eAAe,SAAS,aAAaK,SAAQ,UAAU;AACtG,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,aAAYA,SAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,KAAKA,OAAM,KAAK,IAAI,KAAKA,UAAS,CAAC;AAAA,IAC5C;AACA,IAAAL,QAAO,UAAU,eAAeA,QAAO,UAAU,eAAe,SAAS,aAAaK,SAAQ,UAAU;AACtG,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,aAAYA,SAAQ,GAAG,KAAK,MAAM;AACjD,cAAQ,KAAKA,OAAM,IAAI,KAAKA,UAAS,CAAC,KAAK,IAAI,KAAKA,UAAS,CAAC,KAAK,MAAM,KAAKA,UAAS,CAAC,IAAI;AAAA,IAC9F;AACA,IAAAL,QAAO,UAAU,eAAeA,QAAO,UAAU,eAAe,SAAS,aAAaK,SAAQ,UAAU;AACtG,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,aAAYA,SAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,KAAKA,OAAM,IAAI,YAAa,KAAKA,UAAS,CAAC,KAAK,KAAK,KAAKA,UAAS,CAAC,KAAK,IAAI,KAAKA,UAAS,CAAC;AAAA,IACrG;AACA,IAAAL,QAAO,UAAU,kBAAkB,mBAAmB,SAAS,gBAAgBK,SAAQ;AACrF,MAAAA,UAASA,YAAW;AACpB,qBAAeA,SAAQ,QAAQ;AAC/B,YAAM,QAAQ,KAAKA,OAAM;AACzB,YAAM,OAAO,KAAKA,UAAS,CAAC;AAC5B,UAAI,UAAU,UAAa,SAAS,QAAW;AAC7C,oBAAYA,SAAQ,KAAK,SAAS,CAAC;AAAA,MACrC;AACA,YAAM,KAAK,QAAQ,KAAK,EAAEA,OAAM,IAAI,KAAK,IAAI,KAAK,EAAEA,OAAM,IAAI,KAAK,KAAK,KAAK,EAAEA,OAAM,IAAI,KAAK;AAC9F,YAAM,KAAK,KAAK,EAAEA,OAAM,IAAI,KAAK,EAAEA,OAAM,IAAI,KAAK,IAAI,KAAK,EAAEA,OAAM,IAAI,KAAK,KAAK,OAAO,KAAK;AAC7F,aAAO,OAAO,EAAE,KAAK,OAAO,EAAE,KAAK,OAAO,EAAE;AAAA,IAC9C,CAAC;AACD,IAAAL,QAAO,UAAU,kBAAkB,mBAAmB,SAAS,gBAAgBK,SAAQ;AACrF,MAAAA,UAASA,YAAW;AACpB,qBAAeA,SAAQ,QAAQ;AAC/B,YAAM,QAAQ,KAAKA,OAAM;AACzB,YAAM,OAAO,KAAKA,UAAS,CAAC;AAC5B,UAAI,UAAU,UAAa,SAAS,QAAW;AAC7C,oBAAYA,SAAQ,KAAK,SAAS,CAAC;AAAA,MACrC;AACA,YAAM,KAAK,QAAQ,KAAK,KAAK,KAAK,EAAEA,OAAM,IAAI,KAAK,KAAK,KAAK,EAAEA,OAAM,IAAI,KAAK,IAAI,KAAK,EAAEA,OAAM;AAC/F,YAAM,KAAK,KAAK,EAAEA,OAAM,IAAI,KAAK,KAAK,KAAK,EAAEA,OAAM,IAAI,KAAK,KAAK,KAAK,EAAEA,OAAM,IAAI,KAAK,IAAI;AAC3F,cAAQ,OAAO,EAAE,KAAK,OAAO,EAAE,KAAK,OAAO,EAAE;AAAA,IAC/C,CAAC;AACD,IAAAL,QAAO,UAAU,YAAY,SAAS,UAAUK,SAAQC,aAAY,UAAU;AAC5E,MAAAD,UAASA,YAAW;AACpB,MAAAC,cAAaA,gBAAe;AAC5B,UAAI,CAAC,SAAU,aAAYD,SAAQC,aAAY,KAAK,MAAM;AAC1D,UAAI,MAAM,KAAKD,OAAM;AACrB,UAAI,MAAM;AACV,UAAI,IAAI;AACR,aAAO,EAAE,IAAIC,gBAAe,OAAO,MAAQ;AACzC,eAAO,KAAKD,UAAS,CAAC,IAAI;AAAA,MAC5B;AACA,aAAO;AACP,UAAI,OAAO,IAAK,QAAO,KAAK,IAAI,GAAG,IAAIC,WAAU;AACjD,aAAO;AAAA,IACT;AACA,IAAAN,QAAO,UAAU,YAAY,SAAS,UAAUK,SAAQC,aAAY,UAAU;AAC5E,MAAAD,UAASA,YAAW;AACpB,MAAAC,cAAaA,gBAAe;AAC5B,UAAI,CAAC,SAAU,aAAYD,SAAQC,aAAY,KAAK,MAAM;AAC1D,UAAI,IAAIA;AACR,UAAI,MAAM;AACV,UAAI,MAAM,KAAKD,UAAS,EAAE,CAAC;AAC3B,aAAO,IAAI,MAAM,OAAO,MAAQ;AAC9B,eAAO,KAAKA,UAAS,EAAE,CAAC,IAAI;AAAA,MAC9B;AACA,aAAO;AACP,UAAI,OAAO,IAAK,QAAO,KAAK,IAAI,GAAG,IAAIC,WAAU;AACjD,aAAO;AAAA,IACT;AACA,IAAAN,QAAO,UAAU,WAAW,SAAS,SAASK,SAAQ,UAAU;AAC9D,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,aAAYA,SAAQ,GAAG,KAAK,MAAM;AACjD,UAAI,EAAE,KAAKA,OAAM,IAAI,KAAO,QAAO,KAAKA,OAAM;AAC9C,cAAQ,MAAO,KAAKA,OAAM,IAAI,KAAK;AAAA,IACrC;AACA,IAAAL,QAAO,UAAU,cAAc,SAAS,YAAYK,SAAQ,UAAU;AACpE,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,aAAYA,SAAQ,GAAG,KAAK,MAAM;AACjD,YAAM,MAAM,KAAKA,OAAM,IAAI,KAAKA,UAAS,CAAC,KAAK;AAC/C,aAAO,MAAM,QAAS,MAAM,aAAa;AAAA,IAC3C;AACA,IAAAL,QAAO,UAAU,cAAc,SAAS,YAAYK,SAAQ,UAAU;AACpE,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,aAAYA,SAAQ,GAAG,KAAK,MAAM;AACjD,YAAM,MAAM,KAAKA,UAAS,CAAC,IAAI,KAAKA,OAAM,KAAK;AAC/C,aAAO,MAAM,QAAS,MAAM,aAAa;AAAA,IAC3C;AACA,IAAAL,QAAO,UAAU,cAAc,SAAS,YAAYK,SAAQ,UAAU;AACpE,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,aAAYA,SAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,KAAKA,OAAM,IAAI,KAAKA,UAAS,CAAC,KAAK,IAAI,KAAKA,UAAS,CAAC,KAAK,KAAK,KAAKA,UAAS,CAAC,KAAK;AAAA,IAC7F;AACA,IAAAL,QAAO,UAAU,cAAc,SAAS,YAAYK,SAAQ,UAAU;AACpE,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,aAAYA,SAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,KAAKA,OAAM,KAAK,KAAK,KAAKA,UAAS,CAAC,KAAK,KAAK,KAAKA,UAAS,CAAC,KAAK,IAAI,KAAKA,UAAS,CAAC;AAAA,IAC9F;AACA,IAAAL,QAAO,UAAU,iBAAiB,mBAAmB,SAAS,eAAeK,SAAQ;AACnF,MAAAA,UAASA,YAAW;AACpB,qBAAeA,SAAQ,QAAQ;AAC/B,YAAM,QAAQ,KAAKA,OAAM;AACzB,YAAM,OAAO,KAAKA,UAAS,CAAC;AAC5B,UAAI,UAAU,UAAa,SAAS,QAAW;AAC7C,oBAAYA,SAAQ,KAAK,SAAS,CAAC;AAAA,MACrC;AACA,YAAM,MAAM,KAAKA,UAAS,CAAC,IAAI,KAAKA,UAAS,CAAC,IAAI,KAAK,IAAI,KAAKA,UAAS,CAAC,IAAI,KAAK,MAAM,QAAQ;AAEjG,cAAQ,OAAO,GAAG,KAAK,OAAO,EAAE,KAAK,OAAO,QAAQ,KAAK,EAAEA,OAAM,IAAI,KAAK,IAAI,KAAK,EAAEA,OAAM,IAAI,KAAK,KAAK,KAAK,EAAEA,OAAM,IAAI,KAAK,EAAE;AAAA,IACnI,CAAC;AACD,IAAAL,QAAO,UAAU,iBAAiB,mBAAmB,SAAS,eAAeK,SAAQ;AACnF,MAAAA,UAASA,YAAW;AACpB,qBAAeA,SAAQ,QAAQ;AAC/B,YAAM,QAAQ,KAAKA,OAAM;AACzB,YAAM,OAAO,KAAKA,UAAS,CAAC;AAC5B,UAAI,UAAU,UAAa,SAAS,QAAW;AAC7C,oBAAYA,SAAQ,KAAK,SAAS,CAAC;AAAA,MACrC;AACA,YAAM,OAAO,SAAS;AAAA,MAEtB,KAAK,EAAEA,OAAM,IAAI,KAAK,KAAK,KAAK,EAAEA,OAAM,IAAI,KAAK,IAAI,KAAK,EAAEA,OAAM;AAClE,cAAQ,OAAO,GAAG,KAAK,OAAO,EAAE,KAAK,OAAO,KAAK,EAAEA,OAAM,IAAI,KAAK,KAAK,KAAK,EAAEA,OAAM,IAAI,KAAK,KAAK,KAAK,EAAEA,OAAM,IAAI,KAAK,IAAI,IAAI;AAAA,IAClI,CAAC;AACD,IAAAL,QAAO,UAAU,cAAc,SAAS,YAAYK,SAAQ,UAAU;AACpE,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,aAAYA,SAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,QAAQ,KAAK,MAAMA,SAAQ,MAAM,IAAI,CAAC;AAAA,IAC/C;AACA,IAAAL,QAAO,UAAU,cAAc,SAAS,YAAYK,SAAQ,UAAU;AACpE,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,aAAYA,SAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,QAAQ,KAAK,MAAMA,SAAQ,OAAO,IAAI,CAAC;AAAA,IAChD;AACA,IAAAL,QAAO,UAAU,eAAe,SAAS,aAAaK,SAAQ,UAAU;AACtE,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,aAAYA,SAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,QAAQ,KAAK,MAAMA,SAAQ,MAAM,IAAI,CAAC;AAAA,IAC/C;AACA,IAAAL,QAAO,UAAU,eAAe,SAAS,aAAaK,SAAQ,UAAU;AACtE,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,aAAYA,SAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,QAAQ,KAAK,MAAMA,SAAQ,OAAO,IAAI,CAAC;AAAA,IAChD;AACA,aAAS,SAAS,KAAK,OAAOA,SAAQ,KAAK,KAAK,KAAK;AACnD,UAAI,CAACL,QAAO,SAAS,GAAG,EAAG,OAAM,IAAI,UAAU,6CAA6C;AAC5F,UAAI,QAAQ,OAAO,QAAQ,IAAK,OAAM,IAAI,WAAW,mCAAmC;AACxF,UAAIK,UAAS,MAAM,IAAI,OAAQ,OAAM,IAAI,WAAW,oBAAoB;AAAA,IAC1E;AACA,IAAAL,QAAO,UAAU,cAAcA,QAAO,UAAU,cAAc,SAAS,YAAY,OAAOK,SAAQC,aAAY,UAAU;AACtH,cAAQ,CAAC;AACT,MAAAD,UAASA,YAAW;AACpB,MAAAC,cAAaA,gBAAe;AAC5B,UAAI,CAAC,UAAU;AACb,cAAM,WAAW,KAAK,IAAI,GAAG,IAAIA,WAAU,IAAI;AAC/C,iBAAS,MAAM,OAAOD,SAAQC,aAAY,UAAU,CAAC;AAAA,MACvD;AACA,UAAI,MAAM;AACV,UAAI,IAAI;AACR,WAAKD,OAAM,IAAI,QAAQ;AACvB,aAAO,EAAE,IAAIC,gBAAe,OAAO,MAAQ;AACzC,aAAKD,UAAS,CAAC,IAAI,QAAQ,MAAM;AAAA,MACnC;AACA,aAAOA,UAASC;AAAA,IAClB;AACA,IAAAN,QAAO,UAAU,cAAcA,QAAO,UAAU,cAAc,SAAS,YAAY,OAAOK,SAAQC,aAAY,UAAU;AACtH,cAAQ,CAAC;AACT,MAAAD,UAASA,YAAW;AACpB,MAAAC,cAAaA,gBAAe;AAC5B,UAAI,CAAC,UAAU;AACb,cAAM,WAAW,KAAK,IAAI,GAAG,IAAIA,WAAU,IAAI;AAC/C,iBAAS,MAAM,OAAOD,SAAQC,aAAY,UAAU,CAAC;AAAA,MACvD;AACA,UAAI,IAAIA,cAAa;AACrB,UAAI,MAAM;AACV,WAAKD,UAAS,CAAC,IAAI,QAAQ;AAC3B,aAAO,EAAE,KAAK,MAAM,OAAO,MAAQ;AACjC,aAAKA,UAAS,CAAC,IAAI,QAAQ,MAAM;AAAA,MACnC;AACA,aAAOA,UAASC;AAAA,IAClB;AACA,IAAAN,QAAO,UAAU,aAAaA,QAAO,UAAU,aAAa,SAAS,WAAW,OAAOK,SAAQ,UAAU;AACvG,cAAQ,CAAC;AACT,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAOA,SAAQ,GAAG,KAAM,CAAC;AACvD,WAAKA,OAAM,IAAI,QAAQ;AACvB,aAAOA,UAAS;AAAA,IAClB;AACA,IAAAL,QAAO,UAAU,gBAAgBA,QAAO,UAAU,gBAAgB,SAAS,cAAc,OAAOK,SAAQ,UAAU;AAChH,cAAQ,CAAC;AACT,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAOA,SAAQ,GAAG,OAAQ,CAAC;AACzD,WAAKA,OAAM,IAAI,QAAQ;AACvB,WAAKA,UAAS,CAAC,IAAI,UAAU;AAC7B,aAAOA,UAAS;AAAA,IAClB;AACA,IAAAL,QAAO,UAAU,gBAAgBA,QAAO,UAAU,gBAAgB,SAAS,cAAc,OAAOK,SAAQ,UAAU;AAChH,cAAQ,CAAC;AACT,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAOA,SAAQ,GAAG,OAAQ,CAAC;AACzD,WAAKA,OAAM,IAAI,UAAU;AACzB,WAAKA,UAAS,CAAC,IAAI,QAAQ;AAC3B,aAAOA,UAAS;AAAA,IAClB;AACA,IAAAL,QAAO,UAAU,gBAAgBA,QAAO,UAAU,gBAAgB,SAAS,cAAc,OAAOK,SAAQ,UAAU;AAChH,cAAQ,CAAC;AACT,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAOA,SAAQ,GAAG,YAAY,CAAC;AAC7D,WAAKA,UAAS,CAAC,IAAI,UAAU;AAC7B,WAAKA,UAAS,CAAC,IAAI,UAAU;AAC7B,WAAKA,UAAS,CAAC,IAAI,UAAU;AAC7B,WAAKA,OAAM,IAAI,QAAQ;AACvB,aAAOA,UAAS;AAAA,IAClB;AACA,IAAAL,QAAO,UAAU,gBAAgBA,QAAO,UAAU,gBAAgB,SAAS,cAAc,OAAOK,SAAQ,UAAU;AAChH,cAAQ,CAAC;AACT,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAOA,SAAQ,GAAG,YAAY,CAAC;AAC7D,WAAKA,OAAM,IAAI,UAAU;AACzB,WAAKA,UAAS,CAAC,IAAI,UAAU;AAC7B,WAAKA,UAAS,CAAC,IAAI,UAAU;AAC7B,WAAKA,UAAS,CAAC,IAAI,QAAQ;AAC3B,aAAOA,UAAS;AAAA,IAClB;AACA,aAAS,eAAe,KAAK,OAAOA,SAAQ,KAAK,KAAK;AACpD,iBAAW,OAAO,KAAK,KAAK,KAAKA,SAAQ,CAAC;AAC1C,UAAI,KAAK,OAAO,QAAQ,OAAO,UAAU,CAAC;AAC1C,UAAIA,SAAQ,IAAI;AAChB,WAAK,MAAM;AACX,UAAIA,SAAQ,IAAI;AAChB,WAAK,MAAM;AACX,UAAIA,SAAQ,IAAI;AAChB,WAAK,MAAM;AACX,UAAIA,SAAQ,IAAI;AAChB,UAAI,KAAK,OAAO,SAAS,OAAO,EAAE,IAAI,OAAO,UAAU,CAAC;AACxD,UAAIA,SAAQ,IAAI;AAChB,WAAK,MAAM;AACX,UAAIA,SAAQ,IAAI;AAChB,WAAK,MAAM;AACX,UAAIA,SAAQ,IAAI;AAChB,WAAK,MAAM;AACX,UAAIA,SAAQ,IAAI;AAChB,aAAOA;AAAA,IACT;AACA,aAAS,eAAe,KAAK,OAAOA,SAAQ,KAAK,KAAK;AACpD,iBAAW,OAAO,KAAK,KAAK,KAAKA,SAAQ,CAAC;AAC1C,UAAI,KAAK,OAAO,QAAQ,OAAO,UAAU,CAAC;AAC1C,UAAIA,UAAS,CAAC,IAAI;AAClB,WAAK,MAAM;AACX,UAAIA,UAAS,CAAC,IAAI;AAClB,WAAK,MAAM;AACX,UAAIA,UAAS,CAAC,IAAI;AAClB,WAAK,MAAM;AACX,UAAIA,UAAS,CAAC,IAAI;AAClB,UAAI,KAAK,OAAO,SAAS,OAAO,EAAE,IAAI,OAAO,UAAU,CAAC;AACxD,UAAIA,UAAS,CAAC,IAAI;AAClB,WAAK,MAAM;AACX,UAAIA,UAAS,CAAC,IAAI;AAClB,WAAK,MAAM;AACX,UAAIA,UAAS,CAAC,IAAI;AAClB,WAAK,MAAM;AACX,UAAIA,OAAM,IAAI;AACd,aAAOA,UAAS;AAAA,IAClB;AACA,IAAAL,QAAO,UAAU,mBAAmB,mBAAmB,SAAS,iBAAiB,OAAOK,UAAS,GAAG;AAClG,aAAO,eAAe,MAAM,OAAOA,SAAQ,OAAO,CAAC,GAAG,OAAO,oBAAoB,CAAC;AAAA,IACpF,CAAC;AACD,IAAAL,QAAO,UAAU,mBAAmB,mBAAmB,SAAS,iBAAiB,OAAOK,UAAS,GAAG;AAClG,aAAO,eAAe,MAAM,OAAOA,SAAQ,OAAO,CAAC,GAAG,OAAO,oBAAoB,CAAC;AAAA,IACpF,CAAC;AACD,IAAAL,QAAO,UAAU,aAAa,SAAS,WAAW,OAAOK,SAAQC,aAAY,UAAU;AACrF,cAAQ,CAAC;AACT,MAAAD,UAASA,YAAW;AACpB,UAAI,CAAC,UAAU;AACb,cAAM,QAAQ,KAAK,IAAI,GAAG,IAAIC,cAAa,CAAC;AAC5C,iBAAS,MAAM,OAAOD,SAAQC,aAAY,QAAQ,GAAG,CAAC,KAAK;AAAA,MAC7D;AACA,UAAI,IAAI;AACR,UAAI,MAAM;AACV,UAAI,MAAM;AACV,WAAKD,OAAM,IAAI,QAAQ;AACvB,aAAO,EAAE,IAAIC,gBAAe,OAAO,MAAQ;AACzC,YAAI,QAAQ,KAAK,QAAQ,KAAK,KAAKD,UAAS,IAAI,CAAC,MAAM,GAAG;AACxD,gBAAM;AAAA,QACR;AACA,aAAKA,UAAS,CAAC,KAAK,QAAQ,OAAO,KAAK,MAAM;AAAA,MAChD;AACA,aAAOA,UAASC;AAAA,IAClB;AACA,IAAAN,QAAO,UAAU,aAAa,SAAS,WAAW,OAAOK,SAAQC,aAAY,UAAU;AACrF,cAAQ,CAAC;AACT,MAAAD,UAASA,YAAW;AACpB,UAAI,CAAC,UAAU;AACb,cAAM,QAAQ,KAAK,IAAI,GAAG,IAAIC,cAAa,CAAC;AAC5C,iBAAS,MAAM,OAAOD,SAAQC,aAAY,QAAQ,GAAG,CAAC,KAAK;AAAA,MAC7D;AACA,UAAI,IAAIA,cAAa;AACrB,UAAI,MAAM;AACV,UAAI,MAAM;AACV,WAAKD,UAAS,CAAC,IAAI,QAAQ;AAC3B,aAAO,EAAE,KAAK,MAAM,OAAO,MAAQ;AACjC,YAAI,QAAQ,KAAK,QAAQ,KAAK,KAAKA,UAAS,IAAI,CAAC,MAAM,GAAG;AACxD,gBAAM;AAAA,QACR;AACA,aAAKA,UAAS,CAAC,KAAK,QAAQ,OAAO,KAAK,MAAM;AAAA,MAChD;AACA,aAAOA,UAASC;AAAA,IAClB;AACA,IAAAN,QAAO,UAAU,YAAY,SAAS,UAAU,OAAOK,SAAQ,UAAU;AACvE,cAAQ,CAAC;AACT,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAOA,SAAQ,GAAG,KAAM,IAAK;AAC3D,UAAI,QAAQ,EAAG,SAAQ,MAAO,QAAQ;AACtC,WAAKA,OAAM,IAAI,QAAQ;AACvB,aAAOA,UAAS;AAAA,IAClB;AACA,IAAAL,QAAO,UAAU,eAAe,SAAS,aAAa,OAAOK,SAAQ,UAAU;AAC7E,cAAQ,CAAC;AACT,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAOA,SAAQ,GAAG,OAAQ,MAAO;AAC/D,WAAKA,OAAM,IAAI,QAAQ;AACvB,WAAKA,UAAS,CAAC,IAAI,UAAU;AAC7B,aAAOA,UAAS;AAAA,IAClB;AACA,IAAAL,QAAO,UAAU,eAAe,SAAS,aAAa,OAAOK,SAAQ,UAAU;AAC7E,cAAQ,CAAC;AACT,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAOA,SAAQ,GAAG,OAAQ,MAAO;AAC/D,WAAKA,OAAM,IAAI,UAAU;AACzB,WAAKA,UAAS,CAAC,IAAI,QAAQ;AAC3B,aAAOA,UAAS;AAAA,IAClB;AACA,IAAAL,QAAO,UAAU,eAAe,SAAS,aAAa,OAAOK,SAAQ,UAAU;AAC7E,cAAQ,CAAC;AACT,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAOA,SAAQ,GAAG,YAAY,WAAW;AACvE,WAAKA,OAAM,IAAI,QAAQ;AACvB,WAAKA,UAAS,CAAC,IAAI,UAAU;AAC7B,WAAKA,UAAS,CAAC,IAAI,UAAU;AAC7B,WAAKA,UAAS,CAAC,IAAI,UAAU;AAC7B,aAAOA,UAAS;AAAA,IAClB;AACA,IAAAL,QAAO,UAAU,eAAe,SAAS,aAAa,OAAOK,SAAQ,UAAU;AAC7E,cAAQ,CAAC;AACT,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAOA,SAAQ,GAAG,YAAY,WAAW;AACvE,UAAI,QAAQ,EAAG,SAAQ,aAAa,QAAQ;AAC5C,WAAKA,OAAM,IAAI,UAAU;AACzB,WAAKA,UAAS,CAAC,IAAI,UAAU;AAC7B,WAAKA,UAAS,CAAC,IAAI,UAAU;AAC7B,WAAKA,UAAS,CAAC,IAAI,QAAQ;AAC3B,aAAOA,UAAS;AAAA,IAClB;AACA,IAAAL,QAAO,UAAU,kBAAkB,mBAAmB,SAAS,gBAAgB,OAAOK,UAAS,GAAG;AAChG,aAAO,eAAe,MAAM,OAAOA,SAAQ,CAAC,OAAO,oBAAoB,GAAG,OAAO,oBAAoB,CAAC;AAAA,IACxG,CAAC;AACD,IAAAL,QAAO,UAAU,kBAAkB,mBAAmB,SAAS,gBAAgB,OAAOK,UAAS,GAAG;AAChG,aAAO,eAAe,MAAM,OAAOA,SAAQ,CAAC,OAAO,oBAAoB,GAAG,OAAO,oBAAoB,CAAC;AAAA,IACxG,CAAC;AACD,aAAS,aAAa,KAAK,OAAOA,SAAQ,KAAK,KAAK,KAAK;AACvD,UAAIA,UAAS,MAAM,IAAI,OAAQ,OAAM,IAAI,WAAW,oBAAoB;AACxE,UAAIA,UAAS,EAAG,OAAM,IAAI,WAAW,oBAAoB;AAAA,IAC3D;AACA,aAAS,WAAW,KAAK,OAAOA,SAAQ,cAAc,UAAU;AAC9D,cAAQ,CAAC;AACT,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,UAAU;AACb,qBAAa,KAAK,OAAOA,SAAQ,GAAG,sBAAwB,qBAAuB;AAAA,MACrF;AACA,cAAQ,MAAM,KAAK,OAAOA,SAAQ,cAAc,IAAI,CAAC;AACrD,aAAOA,UAAS;AAAA,IAClB;AACA,IAAAL,QAAO,UAAU,eAAe,SAAS,aAAa,OAAOK,SAAQ,UAAU;AAC7E,aAAO,WAAW,MAAM,OAAOA,SAAQ,MAAM,QAAQ;AAAA,IACvD;AACA,IAAAL,QAAO,UAAU,eAAe,SAAS,aAAa,OAAOK,SAAQ,UAAU;AAC7E,aAAO,WAAW,MAAM,OAAOA,SAAQ,OAAO,QAAQ;AAAA,IACxD;AACA,aAAS,YAAY,KAAK,OAAOA,SAAQ,cAAc,UAAU;AAC/D,cAAQ,CAAC;AACT,MAAAA,UAASA,YAAW;AACpB,UAAI,CAAC,UAAU;AACb,qBAAa,KAAK,OAAOA,SAAQ,GAAG,uBAAyB,sBAAwB;AAAA,MACvF;AACA,cAAQ,MAAM,KAAK,OAAOA,SAAQ,cAAc,IAAI,CAAC;AACrD,aAAOA,UAAS;AAAA,IAClB;AACA,IAAAL,QAAO,UAAU,gBAAgB,SAAS,cAAc,OAAOK,SAAQ,UAAU;AAC/E,aAAO,YAAY,MAAM,OAAOA,SAAQ,MAAM,QAAQ;AAAA,IACxD;AACA,IAAAL,QAAO,UAAU,gBAAgB,SAAS,cAAc,OAAOK,SAAQ,UAAU;AAC/E,aAAO,YAAY,MAAM,OAAOA,SAAQ,OAAO,QAAQ;AAAA,IACzD;AAGA,IAAAL,QAAO,UAAU,OAAO,SAAS,KAAK,QAAQ,aAAa,OAAO,KAAK;AACrE,UAAI,CAACA,QAAO,SAAS,MAAM,EAAG,OAAM,IAAI,UAAU,6BAA6B;AAC/E,UAAI,CAAC,MAAO,SAAQ;AACpB,UAAI,CAAC,OAAO,QAAQ,EAAG,OAAM,KAAK;AAClC,UAAI,eAAe,OAAO,OAAQ,eAAc,OAAO;AACvD,UAAI,CAAC,YAAa,eAAc;AAChC,UAAI,MAAM,KAAK,MAAM,MAAO,OAAM;AAGlC,UAAI,QAAQ,MAAO,QAAO;AAC1B,UAAI,OAAO,WAAW,KAAK,KAAK,WAAW,EAAG,QAAO;AAGrD,UAAI,cAAc,GAAG;AACnB,cAAM,IAAI,WAAW,2BAA2B;AAAA,MAClD;AACA,UAAI,QAAQ,KAAK,SAAS,KAAK,OAAQ,OAAM,IAAI,WAAW,oBAAoB;AAChF,UAAI,MAAM,EAAG,OAAM,IAAI,WAAW,yBAAyB;AAG3D,UAAI,MAAM,KAAK,OAAQ,OAAM,KAAK;AAClC,UAAI,OAAO,SAAS,cAAc,MAAM,OAAO;AAC7C,cAAM,OAAO,SAAS,cAAc;AAAA,MACtC;AACA,YAAM,MAAM,MAAM;AAClB,UAAI,SAAS,UAAU,OAAO,WAAW,UAAU,eAAe,YAAY;AAE5E,aAAK,WAAW,aAAa,OAAO,GAAG;AAAA,MACzC,OAAO;AACL,mBAAW,UAAU,IAAI,KAAK,QAAQ,KAAK,SAAS,OAAO,GAAG,GAAG,WAAW;AAAA,MAC9E;AACA,aAAO;AAAA,IACT;AAMA,IAAAA,QAAO,UAAU,OAAO,SAAS,KAAK,KAAK,OAAO,KAAK,UAAU;AAE/D,UAAI,OAAO,QAAQ,UAAU;AAC3B,YAAI,OAAO,UAAU,UAAU;AAC7B,qBAAW;AACX,kBAAQ;AACR,gBAAM,KAAK;AAAA,QACb,WAAW,OAAO,QAAQ,UAAU;AAClC,qBAAW;AACX,gBAAM,KAAK;AAAA,QACb;AACA,YAAI,aAAa,UAAa,OAAO,aAAa,UAAU;AAC1D,gBAAM,IAAI,UAAU,2BAA2B;AAAA,QACjD;AACA,YAAI,OAAO,aAAa,YAAY,CAACA,QAAO,WAAW,QAAQ,GAAG;AAChE,gBAAM,IAAI,UAAU,uBAAuB,QAAQ;AAAA,QACrD;AACA,YAAI,IAAI,WAAW,GAAG;AACpB,gBAAM,OAAO,IAAI,WAAW,CAAC;AAC7B,cAAI,aAAa,UAAU,OAAO,OAAO,aAAa,UAAU;AAE9D,kBAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF,WAAW,OAAO,QAAQ,UAAU;AAClC,cAAM,MAAM;AAAA,MACd,WAAW,OAAO,QAAQ,WAAW;AACnC,cAAM,OAAO,GAAG;AAAA,MAClB;AAGA,UAAI,QAAQ,KAAK,KAAK,SAAS,SAAS,KAAK,SAAS,KAAK;AACzD,cAAM,IAAI,WAAW,oBAAoB;AAAA,MAC3C;AACA,UAAI,OAAO,OAAO;AAChB,eAAO;AAAA,MACT;AACA,cAAQ,UAAU;AAClB,YAAM,QAAQ,SAAY,KAAK,SAAS,QAAQ;AAChD,UAAI,CAAC,IAAK,OAAM;AAChB,UAAI;AACJ,UAAI,OAAO,QAAQ,UAAU;AAC3B,aAAK,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAC5B,eAAK,CAAC,IAAI;AAAA,QACZ;AAAA,MACF,OAAO;AACL,cAAM,QAAQA,QAAO,SAAS,GAAG,IAAI,MAAMA,QAAO,KAAK,KAAK,QAAQ;AACpE,cAAM,MAAM,MAAM;AAClB,YAAI,QAAQ,GAAG;AACb,gBAAM,IAAI,UAAU,gBAAgB,MAAM,mCAAmC;AAAA,QAC/E;AACA,aAAK,IAAI,GAAG,IAAI,MAAM,OAAO,EAAE,GAAG;AAChC,eAAK,IAAI,KAAK,IAAI,MAAM,IAAI,GAAG;AAAA,QACjC;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAMA,QAAM,SAAS,CAAC;AAChB,aAAS,EAAE,KAAK,YAAY,MAAM;AAChC,aAAO,GAAG,IAAI,MAAM,kBAAkB,KAAK;AAAA,QACzC,cAAc;AACZ,gBAAM;AACN,iBAAO,eAAe,MAAM,WAAW;AAAA,YACrC,OAAO,WAAW,MAAM,MAAM,SAAS;AAAA,YACvC,UAAU;AAAA,YACV,cAAc;AAAA,UAChB,CAAC;AAGD,eAAK,OAAO,GAAG,KAAK,IAAI,KAAK,GAAG;AAGhC,eAAK;AAEL,iBAAO,KAAK;AAAA,QACd;AAAA,QACA,IAAI,OAAO;AACT,iBAAO;AAAA,QACT;AAAA,QACA,IAAI,KAAK,OAAO;AACd,iBAAO,eAAe,MAAM,QAAQ;AAAA,YAClC,cAAc;AAAA,YACd,YAAY;AAAA,YACZ;AAAA,YACA,UAAU;AAAA,UACZ,CAAC;AAAA,QACH;AAAA,QACA,WAAW;AACT,iBAAO,GAAG,KAAK,IAAI,KAAK,GAAG,MAAM,KAAK,OAAO;AAAA,QAC/C;AAAA,MACF;AAAA,IACF;AACA,MAAE,4BAA4B,SAAU,MAAM;AAC5C,UAAI,MAAM;AACR,eAAO,GAAG,IAAI;AAAA,MAChB;AACA,aAAO;AAAA,IACT,GAAG,UAAU;AACb,MAAE,wBAAwB,SAAU,MAAM,QAAQ;AAChD,aAAO,QAAQ,IAAI,oDAAoD,OAAO,MAAM;AAAA,IACtF,GAAG,SAAS;AACZ,MAAE,oBAAoB,SAAU,KAAK,OAAO,OAAO;AACjD,UAAI,MAAM,iBAAiB,GAAG;AAC9B,UAAI,WAAW;AACf,UAAI,OAAO,UAAU,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI;AACxD,mBAAW,sBAAsB,OAAO,KAAK,CAAC;AAAA,MAChD,WAAW,OAAO,UAAU,UAAU;AACpC,mBAAW,OAAO,KAAK;AACvB,YAAI,QAAQ,OAAO,CAAC,KAAK,OAAO,EAAE,KAAK,QAAQ,EAAE,OAAO,CAAC,KAAK,OAAO,EAAE,IAAI;AACzE,qBAAW,sBAAsB,QAAQ;AAAA,QAC3C;AACA,oBAAY;AAAA,MACd;AACA,aAAO,eAAe,KAAK,cAAc,QAAQ;AACjD,aAAO;AAAA,IACT,GAAG,UAAU;AACb,aAAS,sBAAsB,KAAK;AAClC,UAAI,MAAM;AACV,UAAI,IAAI,IAAI;AACZ,YAAM,QAAQ,IAAI,CAAC,MAAM,MAAM,IAAI;AACnC,aAAO,KAAK,QAAQ,GAAG,KAAK,GAAG;AAC7B,cAAM,IAAI,IAAI,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG;AAAA,MACrC;AACA,aAAO,GAAG,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG;AAAA,IACjC;AAKA,aAAS,YAAY,KAAKK,SAAQC,aAAY;AAC5C,qBAAeD,SAAQ,QAAQ;AAC/B,UAAI,IAAIA,OAAM,MAAM,UAAa,IAAIA,UAASC,WAAU,MAAM,QAAW;AACvE,oBAAYD,SAAQ,IAAI,UAAUC,cAAa,EAAE;AAAA,MACnD;AAAA,IACF;AACA,aAAS,WAAW,OAAO,KAAK,KAAK,KAAKD,SAAQC,aAAY;AAC5D,UAAI,QAAQ,OAAO,QAAQ,KAAK;AAC9B,cAAM,IAAI,OAAO,QAAQ,WAAW,MAAM;AAC1C,YAAI;AACJ,YAAIA,cAAa,GAAG;AAClB,cAAI,QAAQ,KAAK,QAAQ,OAAO,CAAC,GAAG;AAClC,oBAAQ,OAAO,CAAC,WAAW,CAAC,QAAQA,cAAa,KAAK,CAAC,GAAG,CAAC;AAAA,UAC7D,OAAO;AACL,oBAAQ,SAAS,CAAC,QAAQA,cAAa,KAAK,IAAI,CAAC,GAAG,CAAC,iBAAsBA,cAAa,KAAK,IAAI,CAAC,GAAG,CAAC;AAAA,UACxG;AAAA,QACF,OAAO;AACL,kBAAQ,MAAM,GAAG,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;AAAA,QACzC;AACA,cAAM,IAAI,OAAO,iBAAiB,SAAS,OAAO,KAAK;AAAA,MACzD;AACA,kBAAY,KAAKD,SAAQC,WAAU;AAAA,IACrC;AACA,aAAS,eAAe,OAAO,MAAM;AACnC,UAAI,OAAO,UAAU,UAAU;AAC7B,cAAM,IAAI,OAAO,qBAAqB,MAAM,UAAU,KAAK;AAAA,MAC7D;AAAA,IACF;AACA,aAAS,YAAY,OAAO,QAAQC,OAAM;AACxC,UAAI,KAAK,MAAM,KAAK,MAAM,OAAO;AAC/B,uBAAe,OAAOA,KAAI;AAC1B,cAAM,IAAI,OAAO,iBAAiBA,SAAQ,UAAU,cAAc,KAAK;AAAA,MACzE;AACA,UAAI,SAAS,GAAG;AACd,cAAM,IAAI,OAAO,yBAAyB;AAAA,MAC5C;AACA,YAAM,IAAI,OAAO,iBAAiBA,SAAQ,UAAU,MAAMA,QAAO,IAAI,CAAC,WAAW,MAAM,IAAI,KAAK;AAAA,IAClG;AAKA,QAAM,oBAAoB;AAC1B,aAAS,YAAY,KAAK;AAExB,YAAM,IAAI,MAAM,GAAG,EAAE,CAAC;AAEtB,YAAM,IAAI,KAAK,EAAE,QAAQ,mBAAmB,EAAE;AAE9C,UAAI,IAAI,SAAS,EAAG,QAAO;AAE3B,aAAO,IAAI,SAAS,MAAM,GAAG;AAC3B,cAAM,MAAM;AAAA,MACd;AACA,aAAO;AAAA,IACT;AACA,aAASJ,aAAYF,SAAQ,OAAO;AAClC,cAAQ,SAAS;AACjB,UAAI;AACJ,YAAM,SAASA,QAAO;AACtB,UAAI,gBAAgB;AACpB,YAAM,QAAQ,CAAC;AACf,eAAS,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC/B,oBAAYA,QAAO,WAAW,CAAC;AAG/B,YAAI,YAAY,SAAU,YAAY,OAAQ;AAE5C,cAAI,CAAC,eAAe;AAElB,gBAAI,YAAY,OAAQ;AAEtB,mBAAK,SAAS,KAAK,GAAI,OAAM,KAAK,KAAM,KAAM,GAAI;AAClD;AAAA,YACF,WAAW,IAAI,MAAM,QAAQ;AAE3B,mBAAK,SAAS,KAAK,GAAI,OAAM,KAAK,KAAM,KAAM,GAAI;AAClD;AAAA,YACF;AAGA,4BAAgB;AAChB;AAAA,UACF;AAGA,cAAI,YAAY,OAAQ;AACtB,iBAAK,SAAS,KAAK,GAAI,OAAM,KAAK,KAAM,KAAM,GAAI;AAClD,4BAAgB;AAChB;AAAA,UACF;AAGA,uBAAa,gBAAgB,SAAU,KAAK,YAAY,SAAU;AAAA,QACpE,WAAW,eAAe;AAExB,eAAK,SAAS,KAAK,GAAI,OAAM,KAAK,KAAM,KAAM,GAAI;AAAA,QACpD;AACA,wBAAgB;AAGhB,YAAI,YAAY,KAAM;AACpB,eAAK,SAAS,KAAK,EAAG;AACtB,gBAAM,KAAK,SAAS;AAAA,QACtB,WAAW,YAAY,MAAO;AAC5B,eAAK,SAAS,KAAK,EAAG;AACtB,gBAAM,KAAK,aAAa,IAAM,KAAM,YAAY,KAAO,GAAI;AAAA,QAC7D,WAAW,YAAY,OAAS;AAC9B,eAAK,SAAS,KAAK,EAAG;AACtB,gBAAM,KAAK,aAAa,KAAM,KAAM,aAAa,IAAM,KAAO,KAAM,YAAY,KAAO,GAAI;AAAA,QAC7F,WAAW,YAAY,SAAU;AAC/B,eAAK,SAAS,KAAK,EAAG;AACtB,gBAAM,KAAK,aAAa,KAAO,KAAM,aAAa,KAAM,KAAO,KAAM,aAAa,IAAM,KAAO,KAAM,YAAY,KAAO,GAAI;AAAA,QAC9H,OAAO;AACL,gBAAM,IAAI,MAAM,oBAAoB;AAAA,QACtC;AAAA,MACF;AACA,aAAO;AAAA,IACT;AACA,aAAS,aAAa,KAAK;AACzB,YAAM,YAAY,CAAC;AACnB,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AAEnC,kBAAU,KAAK,IAAI,WAAW,CAAC,IAAI,GAAI;AAAA,MACzC;AACA,aAAO;AAAA,IACT;AACA,aAAS,eAAe,KAAK,OAAO;AAClC,UAAI,GAAG,IAAI;AACX,YAAM,YAAY,CAAC;AACnB,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,aAAK,SAAS,KAAK,EAAG;AACtB,YAAI,IAAI,WAAW,CAAC;AACpB,aAAK,KAAK;AACV,aAAK,IAAI;AACT,kBAAU,KAAK,EAAE;AACjB,kBAAU,KAAK,EAAE;AAAA,MACnB;AACA,aAAO;AAAA,IACT;AACA,aAAS,cAAc,KAAK;AAC1B,aAAO,OAAO,YAAY,YAAY,GAAG,CAAC;AAAA,IAC5C;AACA,aAAS,WAAW,KAAK,KAAKI,SAAQ,QAAQ;AAC5C,UAAI;AACJ,WAAK,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC3B,YAAI,IAAIA,WAAU,IAAI,UAAU,KAAK,IAAI,OAAQ;AACjD,YAAI,IAAIA,OAAM,IAAI,IAAI,CAAC;AAAA,MACzB;AACA,aAAO;AAAA,IACT;AAKA,aAAS,WAAW,KAAKE,OAAM;AAC7B,aAAO,eAAeA,SAAQ,OAAO,QAAQ,IAAI,eAAe,QAAQ,IAAI,YAAY,QAAQ,QAAQ,IAAI,YAAY,SAASA,MAAK;AAAA,IACxI;AACA,aAAS,YAAY,KAAK;AAExB,aAAO,QAAQ;AAAA,IACjB;AAIA,QAAM,sBAAsB,WAAY;AACtC,YAAM,WAAW;AACjB,YAAM,QAAQ,IAAI,MAAM,GAAG;AAC3B,eAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,cAAM,MAAM,IAAI;AAChB,iBAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,gBAAM,MAAM,CAAC,IAAI,SAAS,CAAC,IAAI,SAAS,CAAC;AAAA,QAC3C;AAAA,MACF;AACA,aAAO;AAAA,IACT,EAAE;AAGF,aAAS,mBAAmB,IAAI;AAC9B,aAAO,OAAO,WAAW,cAAc,yBAAyB;AAAA,IAClE;AACA,aAAS,yBAAyB;AAChC,YAAM,IAAI,MAAM,sBAAsB;AAAA,IACxC;AAAA;AAAA;;;ACrsDA,IAAAC,kBAAA;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,0FAA0F,GAAG,mIAAmI;AAAA,QAC/O;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA,KAAC,SAAUC,SAAQC,UAAS;AAC1B;AAGA,eAASC,QAAO,KAAK,KAAK;AACxB,YAAI,CAAC,IAAK,OAAM,IAAI,MAAM,OAAO,kBAAkB;AAAA,MACrD;AAIA,eAAS,SAAS,MAAM,WAAW;AACjC,aAAK,SAAS;AACd,YAAI,WAAW,WAAY;AAAA,QAAC;AAC5B,iBAAS,YAAY,UAAU;AAC/B,aAAK,YAAY,IAAI,SAAS;AAC9B,aAAK,UAAU,cAAc;AAAA,MAC/B;AAIA,eAASC,IAAGC,SAAQ,MAAM,QAAQ;AAChC,YAAID,IAAG,KAAKC,OAAM,GAAG;AACnB,iBAAOA;AAAA,QACT;AACA,aAAK,WAAW;AAChB,aAAK,QAAQ;AACb,aAAK,SAAS;AAGd,aAAK,MAAM;AACX,YAAIA,YAAW,MAAM;AACnB,cAAI,SAAS,QAAQ,SAAS,MAAM;AAClC,qBAAS;AACT,mBAAO;AAAA,UACT;AACA,eAAK,MAAMA,WAAU,GAAG,QAAQ,IAAI,UAAU,IAAI;AAAA,QACpD;AAAA,MACF;AACA,UAAI,OAAOJ,YAAW,UAAU;AAC9B,QAAAA,QAAO,UAAUG;AAAA,MACnB,OAAO;AACL,QAAAF,SAAQ,KAAKE;AAAA,MACf;AACA,MAAAA,IAAG,KAAKA;AACR,MAAAA,IAAG,WAAW;AACd,UAAIE;AACJ,UAAI;AACF,YAAI,OAAO,WAAW,eAAe,OAAO,OAAO,WAAW,aAAa;AACzE,UAAAA,UAAS,OAAO;AAAA,QAClB,OAAO;AACL,UAAAA,UAAS,kBAAkB;AAAA,QAC7B;AAAA,MACF,SAAS,GAAG;AAAA,MAAC;AACb,MAAAF,IAAG,OAAO,SAAS,KAAK,KAAK;AAC3B,YAAI,eAAeA,KAAI;AACrB,iBAAO;AAAA,QACT;AACA,eAAO,QAAQ,QAAQ,OAAO,QAAQ,YAAY,IAAI,YAAY,aAAaA,IAAG,YAAY,MAAM,QAAQ,IAAI,KAAK;AAAA,MACvH;AACA,MAAAA,IAAG,MAAM,SAAS,IAAI,MAAM,OAAO;AACjC,YAAI,KAAK,IAAI,KAAK,IAAI,EAAG,QAAO;AAChC,eAAO;AAAA,MACT;AACA,MAAAA,IAAG,MAAM,SAAS,IAAI,MAAM,OAAO;AACjC,YAAI,KAAK,IAAI,KAAK,IAAI,EAAG,QAAO;AAChC,eAAO;AAAA,MACT;AACA,MAAAA,IAAG,UAAU,QAAQ,SAAS,KAAKC,SAAQ,MAAM,QAAQ;AACvD,YAAI,OAAOA,YAAW,UAAU;AAC9B,iBAAO,KAAK,YAAYA,SAAQ,MAAM,MAAM;AAAA,QAC9C;AACA,YAAI,OAAOA,YAAW,UAAU;AAC9B,iBAAO,KAAK,WAAWA,SAAQ,MAAM,MAAM;AAAA,QAC7C;AACA,YAAI,SAAS,OAAO;AAClB,iBAAO;AAAA,QACT;AACA,QAAAF,QAAO,UAAU,OAAO,MAAM,QAAQ,KAAK,QAAQ,EAAE;AACrD,QAAAE,UAASA,QAAO,SAAS,EAAE,QAAQ,QAAQ,EAAE;AAC7C,YAAI,QAAQ;AACZ,YAAIA,QAAO,CAAC,MAAM,KAAK;AACrB;AACA,eAAK,WAAW;AAAA,QAClB;AACA,YAAI,QAAQA,QAAO,QAAQ;AACzB,cAAI,SAAS,IAAI;AACf,iBAAK,UAAUA,SAAQ,OAAO,MAAM;AAAA,UACtC,OAAO;AACL,iBAAK,WAAWA,SAAQ,MAAM,KAAK;AACnC,gBAAI,WAAW,MAAM;AACnB,mBAAK,WAAW,KAAK,QAAQ,GAAG,MAAM,MAAM;AAAA,YAC9C;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,MAAAD,IAAG,UAAU,cAAc,SAAS,YAAYC,SAAQ,MAAM,QAAQ;AACpE,YAAIA,UAAS,GAAG;AACd,eAAK,WAAW;AAChB,UAAAA,UAAS,CAACA;AAAA,QACZ;AACA,YAAIA,UAAS,UAAW;AACtB,eAAK,QAAQ,CAACA,UAAS,QAAS;AAChC,eAAK,SAAS;AAAA,QAChB,WAAWA,UAAS,kBAAkB;AACpC,eAAK,QAAQ,CAACA,UAAS,UAAWA,UAAS,WAAY,QAAS;AAChE,eAAK,SAAS;AAAA,QAChB,OAAO;AACL,UAAAF,QAAOE,UAAS,gBAAgB;AAChC,eAAK,QAAQ,CAACA,UAAS,UAAWA,UAAS,WAAY,UAAW,CAAC;AACnE,eAAK,SAAS;AAAA,QAChB;AACA,YAAI,WAAW,KAAM;AAGrB,aAAK,WAAW,KAAK,QAAQ,GAAG,MAAM,MAAM;AAAA,MAC9C;AACA,MAAAD,IAAG,UAAU,aAAa,SAAS,WAAWC,SAAQ,MAAM,QAAQ;AAElE,QAAAF,QAAO,OAAOE,QAAO,WAAW,QAAQ;AACxC,YAAIA,QAAO,UAAU,GAAG;AACtB,eAAK,QAAQ,CAAC,CAAC;AACf,eAAK,SAAS;AACd,iBAAO;AAAA,QACT;AACA,aAAK,SAAS,KAAK,KAAKA,QAAO,SAAS,CAAC;AACzC,aAAK,QAAQ,IAAI,MAAM,KAAK,MAAM;AAClC,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,eAAK,MAAM,CAAC,IAAI;AAAA,QAClB;AACA,YAAI,GAAG;AACP,YAAI,MAAM;AACV,YAAI,WAAW,MAAM;AACnB,eAAK,IAAIA,QAAO,SAAS,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG;AACjD,gBAAIA,QAAO,CAAC,IAAIA,QAAO,IAAI,CAAC,KAAK,IAAIA,QAAO,IAAI,CAAC,KAAK;AACtD,iBAAK,MAAM,CAAC,KAAK,KAAK,MAAM;AAC5B,iBAAK,MAAM,IAAI,CAAC,IAAI,MAAM,KAAK,MAAM;AACrC,mBAAO;AACP,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP;AAAA,YACF;AAAA,UACF;AAAA,QACF,WAAW,WAAW,MAAM;AAC1B,eAAK,IAAI,GAAG,IAAI,GAAG,IAAIA,QAAO,QAAQ,KAAK,GAAG;AAC5C,gBAAIA,QAAO,CAAC,IAAIA,QAAO,IAAI,CAAC,KAAK,IAAIA,QAAO,IAAI,CAAC,KAAK;AACtD,iBAAK,MAAM,CAAC,KAAK,KAAK,MAAM;AAC5B,iBAAK,MAAM,IAAI,CAAC,IAAI,MAAM,KAAK,MAAM;AACrC,mBAAO;AACP,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA,eAAO,KAAK,OAAO;AAAA,MACrB;AACA,eAAS,cAAcE,SAAQ,OAAO;AACpC,YAAI,IAAIA,QAAO,WAAW,KAAK;AAE/B,YAAI,KAAK,MAAM,KAAK,IAAI;AACtB,iBAAO,IAAI;AAAA,QAEb,WAAW,KAAK,MAAM,KAAK,IAAI;AAC7B,iBAAO,IAAI;AAAA,QAEb,WAAW,KAAK,MAAM,KAAK,KAAK;AAC9B,iBAAO,IAAI;AAAA,QACb,OAAO;AACL,UAAAJ,QAAO,OAAO,0BAA0BI,OAAM;AAAA,QAChD;AAAA,MACF;AACA,eAAS,aAAaA,SAAQ,YAAY,OAAO;AAC/C,YAAI,IAAI,cAAcA,SAAQ,KAAK;AACnC,YAAI,QAAQ,KAAK,YAAY;AAC3B,eAAK,cAAcA,SAAQ,QAAQ,CAAC,KAAK;AAAA,QAC3C;AACA,eAAO;AAAA,MACT;AACA,MAAAH,IAAG,UAAU,YAAY,SAAS,UAAUC,SAAQ,OAAO,QAAQ;AAEjE,aAAK,SAAS,KAAK,MAAMA,QAAO,SAAS,SAAS,CAAC;AACnD,aAAK,QAAQ,IAAI,MAAM,KAAK,MAAM;AAClC,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,eAAK,MAAM,CAAC,IAAI;AAAA,QAClB;AAGA,YAAI,MAAM;AACV,YAAI,IAAI;AACR,YAAI;AACJ,YAAI,WAAW,MAAM;AACnB,eAAK,IAAIA,QAAO,SAAS,GAAG,KAAK,OAAO,KAAK,GAAG;AAC9C,gBAAI,aAAaA,SAAQ,OAAO,CAAC,KAAK;AACtC,iBAAK,MAAM,CAAC,KAAK,IAAI;AACrB,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP,mBAAK;AACL,mBAAK,MAAM,CAAC,KAAK,MAAM;AAAA,YACzB,OAAO;AACL,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF,OAAO;AACL,cAAI,cAAcA,QAAO,SAAS;AAClC,eAAK,IAAI,cAAc,MAAM,IAAI,QAAQ,IAAI,OAAO,IAAIA,QAAO,QAAQ,KAAK,GAAG;AAC7E,gBAAI,aAAaA,SAAQ,OAAO,CAAC,KAAK;AACtC,iBAAK,MAAM,CAAC,KAAK,IAAI;AACrB,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP,mBAAK;AACL,mBAAK,MAAM,CAAC,KAAK,MAAM;AAAA,YACzB,OAAO;AACL,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AACA,aAAK,OAAO;AAAA,MACd;AACA,eAAS,UAAU,KAAK,OAAO,KAAK,KAAK;AACvC,YAAI,IAAI;AACR,YAAI,IAAI;AACR,YAAI,MAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAClC,iBAAS,IAAI,OAAO,IAAI,KAAK,KAAK;AAChC,cAAI,IAAI,IAAI,WAAW,CAAC,IAAI;AAC5B,eAAK;AAGL,cAAI,KAAK,IAAI;AACX,gBAAI,IAAI,KAAK;AAAA,UAGf,WAAW,KAAK,IAAI;AAClB,gBAAI,IAAI,KAAK;AAAA,UAGf,OAAO;AACL,gBAAI;AAAA,UACN;AACA,UAAAF,QAAO,KAAK,KAAK,IAAI,KAAK,mBAAmB;AAC7C,eAAK;AAAA,QACP;AACA,eAAO;AAAA,MACT;AACA,MAAAC,IAAG,UAAU,aAAa,SAAS,WAAWC,SAAQ,MAAM,OAAO;AAEjE,aAAK,QAAQ,CAAC,CAAC;AACf,aAAK,SAAS;AAGd,iBAAS,UAAU,GAAG,UAAU,GAAG,WAAW,UAAW,WAAW,MAAM;AACxE;AAAA,QACF;AACA;AACA,kBAAU,UAAU,OAAO;AAC3B,YAAI,QAAQA,QAAO,SAAS;AAC5B,YAAIG,OAAM,QAAQ;AAClB,YAAI,MAAM,KAAK,IAAI,OAAO,QAAQA,IAAG,IAAI;AACzC,YAAI,OAAO;AACX,iBAAS,IAAI,OAAO,IAAI,KAAK,KAAK,SAAS;AACzC,iBAAO,UAAUH,SAAQ,GAAG,IAAI,SAAS,IAAI;AAC7C,eAAK,MAAM,OAAO;AAClB,cAAI,KAAK,MAAM,CAAC,IAAI,OAAO,UAAW;AACpC,iBAAK,MAAM,CAAC,KAAK;AAAA,UACnB,OAAO;AACL,iBAAK,OAAO,IAAI;AAAA,UAClB;AAAA,QACF;AACA,YAAIG,SAAQ,GAAG;AACb,cAAIC,OAAM;AACV,iBAAO,UAAUJ,SAAQ,GAAGA,QAAO,QAAQ,IAAI;AAC/C,eAAK,IAAI,GAAG,IAAIG,MAAK,KAAK;AACxB,YAAAC,QAAO;AAAA,UACT;AACA,eAAK,MAAMA,IAAG;AACd,cAAI,KAAK,MAAM,CAAC,IAAI,OAAO,UAAW;AACpC,iBAAK,MAAM,CAAC,KAAK;AAAA,UACnB,OAAO;AACL,iBAAK,OAAO,IAAI;AAAA,UAClB;AAAA,QACF;AACA,aAAK,OAAO;AAAA,MACd;AACA,MAAAL,IAAG,UAAU,OAAO,SAAS,KAAK,MAAM;AACtC,aAAK,QAAQ,IAAI,MAAM,KAAK,MAAM;AAClC,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,eAAK,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC;AAAA,QAC9B;AACA,aAAK,SAAS,KAAK;AACnB,aAAK,WAAW,KAAK;AACrB,aAAK,MAAM,KAAK;AAAA,MAClB;AACA,eAAS,KAAK,MAAM,KAAK;AACvB,aAAK,QAAQ,IAAI;AACjB,aAAK,SAAS,IAAI;AAClB,aAAK,WAAW,IAAI;AACpB,aAAK,MAAM,IAAI;AAAA,MACjB;AACA,MAAAA,IAAG,UAAU,QAAQ,SAAS,MAAM,MAAM;AACxC,aAAK,MAAM,IAAI;AAAA,MACjB;AACA,MAAAA,IAAG,UAAU,QAAQ,SAAS,QAAQ;AACpC,YAAI,IAAI,IAAIA,IAAG,IAAI;AACnB,aAAK,KAAK,CAAC;AACX,eAAO;AAAA,MACT;AACA,MAAAA,IAAG,UAAU,UAAU,SAAS,QAAQ,MAAM;AAC5C,eAAO,KAAK,SAAS,MAAM;AACzB,eAAK,MAAM,KAAK,QAAQ,IAAI;AAAA,QAC9B;AACA,eAAO;AAAA,MACT;AAGA,MAAAA,IAAG,UAAU,SAAS,SAAS,QAAQ;AACrC,eAAO,KAAK,SAAS,KAAK,KAAK,MAAM,KAAK,SAAS,CAAC,MAAM,GAAG;AAC3D,eAAK;AAAA,QACP;AACA,eAAO,KAAK,UAAU;AAAA,MACxB;AACA,MAAAA,IAAG,UAAU,YAAY,SAAS,YAAY;AAE5C,YAAI,KAAK,WAAW,KAAK,KAAK,MAAM,CAAC,MAAM,GAAG;AAC5C,eAAK,WAAW;AAAA,QAClB;AACA,eAAO;AAAA,MACT;AAIA,UAAI,OAAO,WAAW,eAAe,OAAO,OAAO,QAAQ,YAAY;AACrE,YAAI;AACF,UAAAA,IAAG,UAAU,OAAO,IAAI,4BAA4B,CAAC,IAAI;AAAA,QAC3D,SAAS,GAAG;AACV,UAAAA,IAAG,UAAU,UAAU;AAAA,QACzB;AAAA,MACF,OAAO;AACL,QAAAA,IAAG,UAAU,UAAU;AAAA,MACzB;AACA,eAAS,UAAU;AACjB,gBAAQ,KAAK,MAAM,YAAY,WAAW,KAAK,SAAS,EAAE,IAAI;AAAA,MAChE;AA6BA,UAAI,QAAQ,CAAC,IAAI,KAAK,MAAM,OAAO,QAAQ,SAAS,UAAU,WAAW,YAAY,aAAa,cAAc,eAAe,gBAAgB,iBAAiB,kBAAkB,mBAAmB,oBAAoB,qBAAqB,sBAAsB,uBAAuB,wBAAwB,yBAAyB,0BAA0B,2BAA2B,4BAA4B,2BAA2B;AACxb,UAAI,aAAa,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACpI,UAAI,aAAa,CAAC,GAAG,GAAG,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,KAAU,UAAU,UAAU,UAAU,SAAS,UAAU,UAAU,UAAU,UAAU,UAAU,MAAU,SAAS,SAAS,SAAS,SAAS,SAAS,UAAU,UAAU,UAAU,UAAU,OAAU,UAAU,UAAU,UAAU,UAAU,UAAU,QAAQ;AAC9W,MAAAA,IAAG,UAAU,WAAW,SAAS,SAAS,MAAM,SAAS;AACvD,eAAO,QAAQ;AACf,kBAAU,UAAU,KAAK;AACzB,YAAI;AACJ,YAAI,SAAS,MAAM,SAAS,OAAO;AACjC,gBAAM;AACN,cAAI,MAAM;AACV,cAAI,QAAQ;AACZ,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,gBAAI,IAAI,KAAK,MAAM,CAAC;AACpB,gBAAI,SAAS,KAAK,MAAM,SAAS,UAAU,SAAS,EAAE;AACtD,oBAAQ,MAAM,KAAK,MAAM;AACzB,mBAAO;AACP,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP;AAAA,YACF;AACA,gBAAI,UAAU,KAAK,MAAM,KAAK,SAAS,GAAG;AACxC,oBAAM,MAAM,IAAI,KAAK,MAAM,IAAI,OAAO;AAAA,YACxC,OAAO;AACL,oBAAM,OAAO;AAAA,YACf;AAAA,UACF;AACA,cAAI,UAAU,GAAG;AACf,kBAAM,MAAM,SAAS,EAAE,IAAI;AAAA,UAC7B;AACA,iBAAO,IAAI,SAAS,YAAY,GAAG;AACjC,kBAAM,MAAM;AAAA,UACd;AACA,cAAI,KAAK,aAAa,GAAG;AACvB,kBAAM,MAAM;AAAA,UACd;AACA,iBAAO;AAAA,QACT;AACA,YAAI,UAAU,OAAO,MAAM,QAAQ,KAAK,QAAQ,IAAI;AAElD,cAAI,YAAY,WAAW,IAAI;AAE/B,cAAI,YAAY,WAAW,IAAI;AAC/B,gBAAM;AACN,cAAI,IAAI,KAAK,MAAM;AACnB,YAAE,WAAW;AACb,iBAAO,CAAC,EAAE,OAAO,GAAG;AAClB,gBAAI,IAAI,EAAE,MAAM,SAAS,EAAE,SAAS,IAAI;AACxC,gBAAI,EAAE,MAAM,SAAS;AACrB,gBAAI,CAAC,EAAE,OAAO,GAAG;AACf,oBAAM,MAAM,YAAY,EAAE,MAAM,IAAI,IAAI;AAAA,YAC1C,OAAO;AACL,oBAAM,IAAI;AAAA,YACZ;AAAA,UACF;AACA,cAAI,KAAK,OAAO,GAAG;AACjB,kBAAM,MAAM;AAAA,UACd;AACA,iBAAO,IAAI,SAAS,YAAY,GAAG;AACjC,kBAAM,MAAM;AAAA,UACd;AACA,cAAI,KAAK,aAAa,GAAG;AACvB,kBAAM,MAAM;AAAA,UACd;AACA,iBAAO;AAAA,QACT;AACA,QAAAD,QAAO,OAAO,iCAAiC;AAAA,MACjD;AACA,MAAAC,IAAG,UAAU,WAAW,SAAS,WAAW;AAC1C,YAAI,MAAM,KAAK,MAAM,CAAC;AACtB,YAAI,KAAK,WAAW,GAAG;AACrB,iBAAO,KAAK,MAAM,CAAC,IAAI;AAAA,QACzB,WAAW,KAAK,WAAW,KAAK,KAAK,MAAM,CAAC,MAAM,GAAM;AAEtD,iBAAO,mBAAmB,KAAK,MAAM,CAAC,IAAI;AAAA,QAC5C,WAAW,KAAK,SAAS,GAAG;AAC1B,UAAAD,QAAO,OAAO,4CAA4C;AAAA,QAC5D;AACA,eAAO,KAAK,aAAa,IAAI,CAAC,MAAM;AAAA,MACtC;AACA,MAAAC,IAAG,UAAU,SAAS,SAAS,SAAS;AACtC,eAAO,KAAK,SAAS,IAAI,CAAC;AAAA,MAC5B;AACA,UAAIE,SAAQ;AACV,QAAAF,IAAG,UAAU,WAAW,SAASM,UAAS,QAAQ,QAAQ;AACxD,iBAAO,KAAK,YAAYJ,SAAQ,QAAQ,MAAM;AAAA,QAChD;AAAA,MACF;AACA,MAAAF,IAAG,UAAU,UAAU,SAAS,QAAQ,QAAQ,QAAQ;AACtD,eAAO,KAAK,YAAY,OAAO,QAAQ,MAAM;AAAA,MAC/C;AACA,UAAI,WAAW,SAASO,UAAS,WAAW,MAAM;AAChD,YAAI,UAAU,aAAa;AACzB,iBAAO,UAAU,YAAY,IAAI;AAAA,QACnC;AACA,eAAO,IAAI,UAAU,IAAI;AAAA,MAC3B;AACA,MAAAP,IAAG,UAAU,cAAc,SAAS,YAAY,WAAW,QAAQ,QAAQ;AACzE,aAAK,OAAO;AACZ,YAAI,aAAa,KAAK,WAAW;AACjC,YAAI,YAAY,UAAU,KAAK,IAAI,GAAG,UAAU;AAChD,QAAAD,QAAO,cAAc,WAAW,uCAAuC;AACvE,QAAAA,QAAO,YAAY,GAAG,6BAA6B;AACnD,YAAI,MAAM,SAAS,WAAW,SAAS;AACvC,YAAI,UAAU,WAAW,OAAO,OAAO;AACvC,aAAK,iBAAiB,OAAO,EAAE,KAAK,UAAU;AAC9C,eAAO;AAAA,MACT;AACA,MAAAC,IAAG,UAAU,iBAAiB,SAAS,eAAe,KAAK,YAAY;AACrE,YAAI,WAAW;AACf,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,QAAQ,GAAG,IAAI,KAAK,QAAQ,KAAK;AAC/C,cAAI,OAAO,KAAK,MAAM,CAAC,KAAK,QAAQ;AACpC,cAAI,UAAU,IAAI,OAAO;AACzB,cAAI,WAAW,IAAI,QAAQ;AACzB,gBAAI,UAAU,IAAI,QAAQ,IAAI;AAAA,UAChC;AACA,cAAI,WAAW,IAAI,QAAQ;AACzB,gBAAI,UAAU,IAAI,QAAQ,KAAK;AAAA,UACjC;AACA,cAAI,UAAU,GAAG;AACf,gBAAI,WAAW,IAAI,QAAQ;AACzB,kBAAI,UAAU,IAAI,QAAQ,KAAK;AAAA,YACjC;AACA,oBAAQ;AACR,oBAAQ;AAAA,UACV,OAAO;AACL,oBAAQ,SAAS;AACjB,qBAAS;AAAA,UACX;AAAA,QACF;AACA,YAAI,WAAW,IAAI,QAAQ;AACzB,cAAI,UAAU,IAAI;AAClB,iBAAO,WAAW,IAAI,QAAQ;AAC5B,gBAAI,UAAU,IAAI;AAAA,UACpB;AAAA,QACF;AAAA,MACF;AACA,MAAAA,IAAG,UAAU,iBAAiB,SAAS,eAAe,KAAK,YAAY;AACrE,YAAI,WAAW,IAAI,SAAS;AAC5B,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,QAAQ,GAAG,IAAI,KAAK,QAAQ,KAAK;AAC/C,cAAI,OAAO,KAAK,MAAM,CAAC,KAAK,QAAQ;AACpC,cAAI,UAAU,IAAI,OAAO;AACzB,cAAI,YAAY,GAAG;AACjB,gBAAI,UAAU,IAAI,QAAQ,IAAI;AAAA,UAChC;AACA,cAAI,YAAY,GAAG;AACjB,gBAAI,UAAU,IAAI,QAAQ,KAAK;AAAA,UACjC;AACA,cAAI,UAAU,GAAG;AACf,gBAAI,YAAY,GAAG;AACjB,kBAAI,UAAU,IAAI,QAAQ,KAAK;AAAA,YACjC;AACA,oBAAQ;AACR,oBAAQ;AAAA,UACV,OAAO;AACL,oBAAQ,SAAS;AACjB,qBAAS;AAAA,UACX;AAAA,QACF;AACA,YAAI,YAAY,GAAG;AACjB,cAAI,UAAU,IAAI;AAClB,iBAAO,YAAY,GAAG;AACpB,gBAAI,UAAU,IAAI;AAAA,UACpB;AAAA,QACF;AAAA,MACF;AACA,UAAI,KAAK,OAAO;AACd,QAAAA,IAAG,UAAU,aAAa,SAAS,WAAW,GAAG;AAC/C,iBAAO,KAAK,KAAK,MAAM,CAAC;AAAA,QAC1B;AAAA,MACF,OAAO;AACL,QAAAA,IAAG,UAAU,aAAa,SAAS,WAAW,GAAG;AAC/C,cAAI,IAAI;AACR,cAAI,IAAI;AACR,cAAI,KAAK,MAAQ;AACf,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,cAAI,KAAK,IAAM;AACb,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,cAAI,KAAK,GAAK;AACZ,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,cAAI,KAAK,GAAM;AACb,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,iBAAO,IAAI;AAAA,QACb;AAAA,MACF;AACA,MAAAA,IAAG,UAAU,YAAY,SAAS,UAAU,GAAG;AAE7C,YAAI,MAAM,EAAG,QAAO;AACpB,YAAI,IAAI;AACR,YAAI,IAAI;AACR,aAAK,IAAI,UAAY,GAAG;AACtB,eAAK;AACL,iBAAO;AAAA,QACT;AACA,aAAK,IAAI,SAAU,GAAG;AACpB,eAAK;AACL,iBAAO;AAAA,QACT;AACA,aAAK,IAAI,QAAS,GAAG;AACnB,eAAK;AACL,iBAAO;AAAA,QACT;AACA,aAAK,IAAI,OAAS,GAAG;AACnB,eAAK;AACL,iBAAO;AAAA,QACT;AACA,aAAK,IAAI,OAAS,GAAG;AACnB;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAGA,MAAAA,IAAG,UAAU,YAAY,SAAS,YAAY;AAC5C,YAAI,IAAI,KAAK,MAAM,KAAK,SAAS,CAAC;AAClC,YAAI,KAAK,KAAK,WAAW,CAAC;AAC1B,gBAAQ,KAAK,SAAS,KAAK,KAAK;AAAA,MAClC;AACA,eAAS,WAAW,KAAK;AACvB,YAAI,IAAI,IAAI,MAAM,IAAI,UAAU,CAAC;AACjC,iBAAS,MAAM,GAAG,MAAM,EAAE,QAAQ,OAAO;AACvC,cAAI,MAAM,MAAM,KAAK;AACrB,cAAI,OAAO,MAAM;AACjB,YAAE,GAAG,IAAI,IAAI,MAAM,GAAG,MAAM,OAAO;AAAA,QACrC;AACA,eAAO;AAAA,MACT;AAGA,MAAAA,IAAG,UAAU,WAAW,SAAS,WAAW;AAC1C,YAAI,KAAK,OAAO,EAAG,QAAO;AAC1B,YAAI,IAAI;AACR,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAI,IAAI,KAAK,UAAU,KAAK,MAAM,CAAC,CAAC;AACpC,eAAK;AACL,cAAI,MAAM,GAAI;AAAA,QAChB;AACA,eAAO;AAAA,MACT;AACA,MAAAA,IAAG,UAAU,aAAa,SAAS,aAAa;AAC9C,eAAO,KAAK,KAAK,KAAK,UAAU,IAAI,CAAC;AAAA,MACvC;AACA,MAAAA,IAAG,UAAU,SAAS,SAAS,OAAO,OAAO;AAC3C,YAAI,KAAK,aAAa,GAAG;AACvB,iBAAO,KAAK,IAAI,EAAE,MAAM,KAAK,EAAE,MAAM,CAAC;AAAA,QACxC;AACA,eAAO,KAAK,MAAM;AAAA,MACpB;AACA,MAAAA,IAAG,UAAU,WAAW,SAAS,SAAS,OAAO;AAC/C,YAAI,KAAK,MAAM,QAAQ,CAAC,GAAG;AACzB,iBAAO,KAAK,KAAK,KAAK,EAAE,MAAM,CAAC,EAAE,KAAK;AAAA,QACxC;AACA,eAAO,KAAK,MAAM;AAAA,MACpB;AACA,MAAAA,IAAG,UAAU,QAAQ,SAAS,QAAQ;AACpC,eAAO,KAAK,aAAa;AAAA,MAC3B;AAGA,MAAAA,IAAG,UAAU,MAAM,SAAS,MAAM;AAChC,eAAO,KAAK,MAAM,EAAE,KAAK;AAAA,MAC3B;AACA,MAAAA,IAAG,UAAU,OAAO,SAAS,OAAO;AAClC,YAAI,CAAC,KAAK,OAAO,GAAG;AAClB,eAAK,YAAY;AAAA,QACnB;AACA,eAAO;AAAA,MACT;AAGA,MAAAA,IAAG,UAAU,OAAO,SAAS,KAAK,KAAK;AACrC,eAAO,KAAK,SAAS,IAAI,QAAQ;AAC/B,eAAK,MAAM,KAAK,QAAQ,IAAI;AAAA,QAC9B;AACA,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,eAAK,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC;AAAA,QAC7C;AACA,eAAO,KAAK,OAAO;AAAA,MACrB;AACA,MAAAA,IAAG,UAAU,MAAM,SAAS,IAAI,KAAK;AACnC,QAAAD,SAAQ,KAAK,WAAW,IAAI,cAAc,CAAC;AAC3C,eAAO,KAAK,KAAK,GAAG;AAAA,MACtB;AAGA,MAAAC,IAAG,UAAU,KAAK,SAAS,GAAG,KAAK;AACjC,YAAI,KAAK,SAAS,IAAI,OAAQ,QAAO,KAAK,MAAM,EAAE,IAAI,GAAG;AACzD,eAAO,IAAI,MAAM,EAAE,IAAI,IAAI;AAAA,MAC7B;AACA,MAAAA,IAAG,UAAU,MAAM,SAAS,IAAI,KAAK;AACnC,YAAI,KAAK,SAAS,IAAI,OAAQ,QAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAC1D,eAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,MAC9B;AAGA,MAAAA,IAAG,UAAU,QAAQ,SAAS,MAAM,KAAK;AAEvC,YAAI;AACJ,YAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,cAAI;AAAA,QACN,OAAO;AACL,cAAI;AAAA,QACN;AACA,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,eAAK,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC;AAAA,QAC7C;AACA,aAAK,SAAS,EAAE;AAChB,eAAO,KAAK,OAAO;AAAA,MACrB;AACA,MAAAA,IAAG,UAAU,OAAO,SAAS,KAAK,KAAK;AACrC,QAAAD,SAAQ,KAAK,WAAW,IAAI,cAAc,CAAC;AAC3C,eAAO,KAAK,MAAM,GAAG;AAAA,MACvB;AAGA,MAAAC,IAAG,UAAU,MAAM,SAAS,IAAI,KAAK;AACnC,YAAI,KAAK,SAAS,IAAI,OAAQ,QAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAC1D,eAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,MAC9B;AACA,MAAAA,IAAG,UAAU,OAAO,SAAS,KAAK,KAAK;AACrC,YAAI,KAAK,SAAS,IAAI,OAAQ,QAAO,KAAK,MAAM,EAAE,MAAM,GAAG;AAC3D,eAAO,IAAI,MAAM,EAAE,MAAM,IAAI;AAAA,MAC/B;AAGA,MAAAA,IAAG,UAAU,QAAQ,SAAS,MAAM,KAAK;AAEvC,YAAI;AACJ,YAAI;AACJ,YAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,cAAI;AACJ,cAAI;AAAA,QACN,OAAO;AACL,cAAI;AACJ,cAAI;AAAA,QACN;AACA,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,eAAK,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;AAAA,QACxC;AACA,YAAI,SAAS,GAAG;AACd,iBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,iBAAK,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;AAAA,UAC3B;AAAA,QACF;AACA,aAAK,SAAS,EAAE;AAChB,eAAO,KAAK,OAAO;AAAA,MACrB;AACA,MAAAA,IAAG,UAAU,OAAO,SAAS,KAAK,KAAK;AACrC,QAAAD,SAAQ,KAAK,WAAW,IAAI,cAAc,CAAC;AAC3C,eAAO,KAAK,MAAM,GAAG;AAAA,MACvB;AAGA,MAAAC,IAAG,UAAU,MAAM,SAAS,IAAI,KAAK;AACnC,YAAI,KAAK,SAAS,IAAI,OAAQ,QAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAC1D,eAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,MAC9B;AACA,MAAAA,IAAG,UAAU,OAAO,SAAS,KAAK,KAAK;AACrC,YAAI,KAAK,SAAS,IAAI,OAAQ,QAAO,KAAK,MAAM,EAAE,MAAM,GAAG;AAC3D,eAAO,IAAI,MAAM,EAAE,MAAM,IAAI;AAAA,MAC/B;AAGA,MAAAA,IAAG,UAAU,QAAQ,SAAS,MAAM,OAAO;AACzC,QAAAD,QAAO,OAAO,UAAU,YAAY,SAAS,CAAC;AAC9C,YAAI,cAAc,KAAK,KAAK,QAAQ,EAAE,IAAI;AAC1C,YAAI,WAAW,QAAQ;AAGvB,aAAK,QAAQ,WAAW;AACxB,YAAI,WAAW,GAAG;AAChB;AAAA,QACF;AAGA,iBAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AACpC,eAAK,MAAM,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,IAAI;AAAA,QACnC;AAGA,YAAI,WAAW,GAAG;AAChB,eAAK,MAAM,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,IAAI,YAAa,KAAK;AAAA,QACrD;AAGA,eAAO,KAAK,OAAO;AAAA,MACrB;AACA,MAAAC,IAAG,UAAU,OAAO,SAAS,KAAK,OAAO;AACvC,eAAO,KAAK,MAAM,EAAE,MAAM,KAAK;AAAA,MACjC;AAGA,MAAAA,IAAG,UAAU,OAAO,SAAS,KAAK,KAAK,KAAK;AAC1C,QAAAD,QAAO,OAAO,QAAQ,YAAY,OAAO,CAAC;AAC1C,YAAI,MAAM,MAAM,KAAK;AACrB,YAAI,OAAO,MAAM;AACjB,aAAK,QAAQ,MAAM,CAAC;AACpB,YAAI,KAAK;AACP,eAAK,MAAM,GAAG,IAAI,KAAK,MAAM,GAAG,IAAI,KAAK;AAAA,QAC3C,OAAO;AACL,eAAK,MAAM,GAAG,IAAI,KAAK,MAAM,GAAG,IAAI,EAAE,KAAK;AAAA,QAC7C;AACA,eAAO,KAAK,OAAO;AAAA,MACrB;AAGA,MAAAC,IAAG,UAAU,OAAO,SAAS,KAAK,KAAK;AACrC,YAAI;AAGJ,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AAC7C,eAAK,WAAW;AAChB,cAAI,KAAK,KAAK,GAAG;AACjB,eAAK,YAAY;AACjB,iBAAO,KAAK,UAAU;AAAA,QAGxB,WAAW,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AACpD,cAAI,WAAW;AACf,cAAI,KAAK,KAAK,GAAG;AACjB,cAAI,WAAW;AACf,iBAAO,EAAE,UAAU;AAAA,QACrB;AAGA,YAAI,GAAG;AACP,YAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,cAAI;AACJ,cAAI;AAAA,QACN,OAAO;AACL,cAAI;AACJ,cAAI;AAAA,QACN;AACA,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,eAAK,EAAE,MAAM,CAAC,IAAI,MAAM,EAAE,MAAM,CAAC,IAAI,KAAK;AAC1C,eAAK,MAAM,CAAC,IAAI,IAAI;AACpB,kBAAQ,MAAM;AAAA,QAChB;AACA,eAAO,UAAU,KAAK,IAAI,EAAE,QAAQ,KAAK;AACvC,eAAK,EAAE,MAAM,CAAC,IAAI,KAAK;AACvB,eAAK,MAAM,CAAC,IAAI,IAAI;AACpB,kBAAQ,MAAM;AAAA,QAChB;AACA,aAAK,SAAS,EAAE;AAChB,YAAI,UAAU,GAAG;AACf,eAAK,MAAM,KAAK,MAAM,IAAI;AAC1B,eAAK;AAAA,QAEP,WAAW,MAAM,MAAM;AACrB,iBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,iBAAK,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;AAAA,UAC3B;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAGA,MAAAA,IAAG,UAAU,MAAM,SAAS,IAAI,KAAK;AACnC,YAAI;AACJ,YAAI,IAAI,aAAa,KAAK,KAAK,aAAa,GAAG;AAC7C,cAAI,WAAW;AACf,gBAAM,KAAK,IAAI,GAAG;AAClB,cAAI,YAAY;AAChB,iBAAO;AAAA,QACT,WAAW,IAAI,aAAa,KAAK,KAAK,aAAa,GAAG;AACpD,eAAK,WAAW;AAChB,gBAAM,IAAI,IAAI,IAAI;AAClB,eAAK,WAAW;AAChB,iBAAO;AAAA,QACT;AACA,YAAI,KAAK,SAAS,IAAI,OAAQ,QAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAC1D,eAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,MAC9B;AAGA,MAAAA,IAAG,UAAU,OAAO,SAAS,KAAK,KAAK;AAErC,YAAI,IAAI,aAAa,GAAG;AACtB,cAAI,WAAW;AACf,cAAI,IAAI,KAAK,KAAK,GAAG;AACrB,cAAI,WAAW;AACf,iBAAO,EAAE,UAAU;AAAA,QAGrB,WAAW,KAAK,aAAa,GAAG;AAC9B,eAAK,WAAW;AAChB,eAAK,KAAK,GAAG;AACb,eAAK,WAAW;AAChB,iBAAO,KAAK,UAAU;AAAA,QACxB;AAGA,YAAI,MAAM,KAAK,IAAI,GAAG;AAGtB,YAAI,QAAQ,GAAG;AACb,eAAK,WAAW;AAChB,eAAK,SAAS;AACd,eAAK,MAAM,CAAC,IAAI;AAChB,iBAAO;AAAA,QACT;AAGA,YAAI,GAAG;AACP,YAAI,MAAM,GAAG;AACX,cAAI;AACJ,cAAI;AAAA,QACN,OAAO;AACL,cAAI;AACJ,cAAI;AAAA,QACN;AACA,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,eAAK,EAAE,MAAM,CAAC,IAAI,MAAM,EAAE,MAAM,CAAC,IAAI,KAAK;AAC1C,kBAAQ,KAAK;AACb,eAAK,MAAM,CAAC,IAAI,IAAI;AAAA,QACtB;AACA,eAAO,UAAU,KAAK,IAAI,EAAE,QAAQ,KAAK;AACvC,eAAK,EAAE,MAAM,CAAC,IAAI,KAAK;AACvB,kBAAQ,KAAK;AACb,eAAK,MAAM,CAAC,IAAI,IAAI;AAAA,QACtB;AAGA,YAAI,UAAU,KAAK,IAAI,EAAE,UAAU,MAAM,MAAM;AAC7C,iBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,iBAAK,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;AAAA,UAC3B;AAAA,QACF;AACA,aAAK,SAAS,KAAK,IAAI,KAAK,QAAQ,CAAC;AACrC,YAAI,MAAM,MAAM;AACd,eAAK,WAAW;AAAA,QAClB;AACA,eAAO,KAAK,OAAO;AAAA,MACrB;AAGA,MAAAA,IAAG,UAAU,MAAM,SAAS,IAAI,KAAK;AACnC,eAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAAA,MAC9B;AACA,eAAS,WAAW,MAAM,KAAK,KAAK;AAClC,YAAI,WAAW,IAAI,WAAW,KAAK;AACnC,YAAI,MAAM,KAAK,SAAS,IAAI,SAAS;AACrC,YAAI,SAAS;AACb,cAAM,MAAM,IAAI;AAGhB,YAAI,IAAI,KAAK,MAAM,CAAC,IAAI;AACxB,YAAI,IAAI,IAAI,MAAM,CAAC,IAAI;AACvB,YAAI,IAAI,IAAI;AACZ,YAAI,KAAK,IAAI;AACb,YAAI,QAAQ,IAAI,WAAY;AAC5B,YAAI,MAAM,CAAC,IAAI;AACf,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAG5B,cAAI,SAAS,UAAU;AACvB,cAAI,QAAQ,QAAQ;AACpB,cAAI,OAAO,KAAK,IAAI,GAAG,IAAI,SAAS,CAAC;AACrC,mBAAS,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,SAAS,CAAC,GAAG,KAAK,MAAM,KAAK;AAC7D,gBAAI,IAAI,IAAI,IAAI;AAChB,gBAAI,KAAK,MAAM,CAAC,IAAI;AACpB,gBAAI,IAAI,MAAM,CAAC,IAAI;AACnB,gBAAI,IAAI,IAAI;AACZ,sBAAU,IAAI,WAAY;AAC1B,oBAAQ,IAAI;AAAA,UACd;AACA,cAAI,MAAM,CAAC,IAAI,QAAQ;AACvB,kBAAQ,SAAS;AAAA,QACnB;AACA,YAAI,UAAU,GAAG;AACf,cAAI,MAAM,CAAC,IAAI,QAAQ;AAAA,QACzB,OAAO;AACL,cAAI;AAAA,QACN;AACA,eAAO,IAAI,OAAO;AAAA,MACpB;AAKA,UAAI,cAAc,SAASQ,aAAY,MAAM,KAAK,KAAK;AACrD,YAAI,IAAI,KAAK;AACb,YAAI,IAAI,IAAI;AACZ,YAAI,IAAI,IAAI;AACZ,YAAI,IAAI;AACR,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,CAAC,IAAI;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,WAAW,KAAK,WAAW,IAAI;AACnC,YAAI,SAAS;AAEb,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,YAAI,MAAM,IAAI,KAAK,OAAO,MAAM,SAAW,MAAM;AACjD,aAAK,MAAM,QAAQ,MAAM,MAAM,OAAO,MAAM;AAC5C,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,YAAI,MAAM,IAAI,KAAK,OAAO,MAAM,SAAW,MAAM;AACjD,aAAK,MAAM,QAAQ,MAAM,MAAM,OAAO,MAAM;AAC5C,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,YAAI,MAAM,IAAI,KAAK,OAAO,MAAM,SAAW,MAAM;AACjD,aAAK,MAAM,QAAQ,MAAM,MAAM,OAAO,MAAM;AAC5C,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,YAAI,MAAM,IAAI,KAAK,OAAO,MAAM,SAAW,MAAM;AACjD,aAAK,MAAM,QAAQ,MAAM,MAAM,OAAO,MAAM;AAC5C,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,YAAI,MAAM,IAAI,KAAK,OAAO,MAAM,SAAW,MAAM;AACjD,aAAK,MAAM,QAAQ,MAAM,MAAM,OAAO,MAAM;AAC5C,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,YAAI,MAAM,IAAI,KAAK,OAAO,MAAM,SAAW,MAAM;AACjD,aAAK,MAAM,QAAQ,MAAM,MAAM,OAAO,MAAM;AAC5C,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,YAAI,MAAM,IAAI,KAAK,OAAO,MAAM,SAAW,MAAM;AACjD,aAAK,MAAM,QAAQ,MAAM,MAAM,OAAO,MAAM;AAC5C,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,YAAI,MAAM,IAAI,KAAK,OAAO,MAAM,SAAW,MAAM;AACjD,aAAK,MAAM,QAAQ,MAAM,MAAM,OAAO,MAAM;AAC5C,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAM,KAAK,KAAK,KAAK,GAAG;AACxB,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,GAAG;AACvB,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,aAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI;AAChC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI;AAClC,cAAM,MAAM,KAAK,KAAK,KAAK,GAAG,IAAI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",
  "names": ["len", "i", "len2", "offset", "Buffer", "string", "array", "utf8ToBytes", "i", "offset", "byteLength", "type", "require_buffer", "module", "exports", "assert", "BN", "number", "Buffer", "string", "mod", "pow", "toBuffer", "allocate", "comb10MulTo", "mask", "prime", "require_buffer", "Buffer", "string", "array", "utf8ToBytes", "i", "offset", "byteLength", "type", "Buffer", "encode", "i", "j", "decode", "string", "TextDecoder", "string", "offset", "mod", "array", "string", "serialize", "deserialize", "deserializeUnchecked", "require_buffer", "Buffer", "string", "array", "utf8ToBytes", "i", "offset", "byteLength", "type", "offset", "span", "union", "Boolean", "toBigIntLE", "toBufferLE", "validate", "offset", "offset", "version", "offset", "offset", "version", "require_browser", "err", "require_buffer", "Buffer", "string", "array", "utf8ToBytes", "i", "offset", "byteLength", "type", "EventEmitter", "import_buffer", "Fp", "randomBytes", "uvRatio", "adjustScalarBytes", "inRange", "G", "A", "B", "F", "C", "D", "E", "H", "X3", "Y3", "T3", "Z3", "f", "cofactor", "getPublicKey", "concatBytes", "sign", "verify", "publicKey", "_0n", "_1n", "validateOpts", "adjustScalarBytes", "publicKey", "_0n", "_1n", "_2n", "_8n", "v3", "pow", "_8n", "_8n", "_2n", "_1n", "number", "mod", "_0n", "struct", "type", "coerce", "mask", "tuple", "struct", "struct", "struct", "EventEmitter", "type", "publicKey", "Struct", "_PublicKey", "bs58", "BN", "signature", "offset", "type", "assert", "length", "accountCount", "version", "TransactionStatus", "decode", "encode", "bigInt", "authorized", "array", "data", "dataLayout", "stringify", "trailingZeros", "endpoint", "RpcClient", "unsafeRes", "res", "wireTransaction", "encodedTransaction", "config", "args", "lockup", "voteInit"]
}
